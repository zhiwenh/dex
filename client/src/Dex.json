{
  "contractName": "Dex",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeTokensForTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dexUsersArr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfEthForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForEthOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithOtherTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addEthToDexForTradeWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensFromOtherTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensForEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyEthForTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForEthWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForTokensWithTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "indexOfTradeOfAddress",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingForTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingForTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeTokensForTokensForCall[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForTokensWithEth",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "indexOfTradeOfAddress",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradingForEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeTokensForEthForCall[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForEthWithTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "indexOfTradeOfAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradingEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingForTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingForTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeEthForTokensForCall[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDexUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "getAllTradesOfAccount",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingForTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeTokensForTokensForCall[]",
              "name": "tradeTokensForTokensForCall",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForEthAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeTokensForEthForCall[]",
              "name": "tradeTokensForEthForCall",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingEthAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingForTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeEthForTokensForCall[]",
              "name": "tradeEthForTokensForCall",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Dex.AllTradesOfAccount",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeTokensForTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addEthToDexForTradeWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithOtherTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyEthForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensForEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensFromOtherTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForEthWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexUsersArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getAllTradesOfAccount\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForTokensForCall[]\",\"name\":\"tradeTokensForTokensForCall\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForEthForCall[]\",\"name\":\"tradeTokensForEthForCall\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeEthForTokensForCall[]\",\"name\":\"tradeEthForTokensForCall\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Dex.AllTradesOfAccount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDexUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForEthWithTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeEthForTokensForCall[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForTokensWithEth\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForEthForCall[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForTokensWithTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForTokensForCall[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfEthForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForEthOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/Dex.sol\":{\"keccak256\":\"0x1aef775a3eab33d13709071013a3fc896009e8779f44bbcf84b259c9aa9b423f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f405d69d8f790d3e6877b1484ac3c9849876711159485fe844e9d1c560ddb99e\",\"dweb:/ipfs/QmYVJV3ygPDcunQScifyhrq6jjgdNR6hz14bSY7sLRdULY\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550615e6e806200005e5f395ff3fe608060405260043610610108575f3560e01c80637f1ca38b11610094578063b25cfc9011610063578063b25cfc9014610339578063be53210914610363578063d74f378c146103a2578063e39c40fc146103ca578063fd9c8853146103e657610108565b80637f1ca38b146102b15780638c69cd84146102d9578063a1179c72146102f5578063a306802f1461031d57610108565b80633b66082a116100db5780633b66082a146101bb5780633c0d2d7b146101fb5780634737ab8d146102375780635956038214610261578063748d6a741461028957610108565b8063089733781461010c5780630bc07cef1461013657806315fb6839146101755780631cdec0421461019f575b5f80fd5b348015610117575f80fd5b50610120610422565b60405161012d91906151c3565b60405180910390f35b348015610141575f80fd5b5061015c60048036038101906101579190615244565b6104ad565b60405161016c94939291906152ba565b60405180910390f35b348015610180575f80fd5b5061018961051e565b604051610196919061544f565b60405180910390f35b6101b960048036038101906101b49190615244565b610979565b005b3480156101c6575f80fd5b506101e160048036038101906101dc9190615244565b61100a565b6040516101f295949392919061546f565b60405180910390f35b348015610206575f80fd5b50610221600480360381019061021c91906154c0565b61109f565b60405161022e91906157f4565b60405180910390f35b348015610242575f80fd5b5061024b6118c2565b6040516102589190615880565b60405180910390f35b34801561026c575f80fd5b5061028760048036038101906102829190615244565b611d3f565b005b348015610294575f80fd5b506102af60048036038101906102aa9190615244565b611fdd565b005b3480156102bc575f80fd5b506102d760048036038101906102d291906158a0565b6122f5565b005b6102f360048036038101906102ee9190615244565b612c9e565b005b348015610300575f80fd5b5061031b600480360381019061031691906158f0565b613175565b005b61033760048036038101906103329190615954565b613b7f565b005b348015610344575f80fd5b5061034d613f5c565b60405161035a9190615a10565b60405180910390f35b34801561036e575f80fd5b5061038960048036038101906103849190615244565b6143d9565b6040516103999493929190615a30565b60405180910390f35b3480156103ad575f80fd5b506103c860048036038101906103c39190615244565b61444a565b005b6103e460048036038101906103df9190615244565b614ba5565b005b3480156103f1575f80fd5b5061040c60048036038101906104079190615a73565b614f4a565b6040516104199190615a9e565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156104a357602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161045a575b5050505050905090565b6001602052815f5260405f2081815481106104c6575f80fd5b905f5260205f2090600402015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b60605f805b6003805490508110156105ea575f5b5f806003848154811061054857610547615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156105d6576001836105c19190615b11565b925080806105ce90615b44565b915050610532565b5080806105e290615b44565b915050610523565b505f8167ffffffffffffffff81111561060657610605615b8b565b5b60405190808252806020026020018201604052801561063f57816020015b61062c614f85565b8152602001906001900390816106245790505b5090505f805b60038054905081101561096f575f5b5f806003848154811061066a57610669615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561095b575f805f600385815481106106ed576106ec615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106107605761075f615ab7565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e00160405280600386815481106108705761086f615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff168152602001836060015181526020018360800151151581525090508086868151811061092c5761092b615ab7565b5b60200260200101819052506001856109449190615b11565b94505050808061095390615b44565b915050610654565b50808061096790615b44565b915050610645565b5081935050505090565b6001151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106109cc576109cb615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff161515036109f3575f80fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610a4357610a42615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ac357610ac2615ab7565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b0c9190615a9e565b602060405180830381865afa158015610b27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4b9190615bcc565b1015610b55575f80fd5b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ba457610ba3615ab7565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610bef929190615bf7565b602060405180830381865afa158015610c0a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2e9190615bcc565b1015610c38575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd338560025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610ca557610ca4615ab7565b5b905f5260205f209060040201600201546040518463ffffffff1660e01b8152600401610cd393929190615c1e565b6020604051808303815f875af1158015610cef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d139190615c7d565b505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610d7b57610d7a615ab7565b5b905f5260205f2090600402015f0154604051610d9690615cd5565b5f6040518083038185875af1925050503d805f8114610dd0576040519150601f19603f3d011682016040523d82523d5f602084013e610dd5565b606091505b5050905080610e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1090615d43565b60405180910390fd5b600160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610e6a57610e69615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f90737823f8fc9fbb28385683bca84d56edc8a1d49a2ad7faeb6391da5e38d99b8460025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110610f0057610eff615ab7565b5b905f5260205f2090600402015f015460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610f5e57610f5d615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610fdc57610fdb615ab7565b5b905f5260205f20906004020160020154604051610ffc9493929190615d61565b60405180910390a150505050565b5f602052815f5260405f208181548110611022575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16905085565b6110a7614fff565b6110af614fff565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff81111561110857611107615b8b565b5b60405190808252806020026020018201604052801561114157816020015b61112e614f85565b8152602001906001900390816111265790505b50815f01819052505f805b5f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156113a5575f805f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106111e2576111e1615ab7565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200183608001511515815250905080855f0151858151811061137657611375615ab7565b5b602002602001018190525060018461138e9190615b11565b93505050808061139d90615b44565b91505061114c565b5060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff811115611400576113ff615b8b565b5b60405190808252806020026020018201604052801561143957816020015b611426615020565b81526020019060019003908161141e5790505b5082602001819052505f90505f5b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561162e575f60015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106114df576114de615ab7565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001511515815250905080856020015185815181106115ff576115fe615ab7565b5b60200260200101819052506001846116179190615b11565b93505050808061162690615b44565b915050611447565b5060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff81111561168957611688615b8b565b5b6040519080825280602002602001820160405280156116c257816020015b6116af61507e565b8152602001906001900390816116a75790505b5082604001819052505f90505f5b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156118b7575f60025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061176857611767615ab7565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff16815260200183604001518152602001836060015115158152509050808560400151858151811061188857611887615ab7565b5b60200260200101819052506001846118a09190615b11565b9350505080806118af90615b44565b9150506116d0565b508192505050919050565b60605f805b60038054905081101561198f575f5b60025f600384815481106118ed576118ec615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561197b576001836119669190615b11565b9250808061197390615b44565b9150506118d6565b50808061198790615b44565b9150506118c7565b505f8167ffffffffffffffff8111156119ab576119aa615b8b565b5b6040519080825280602002602001820160405280156119e457816020015b6119d161507e565b8152602001906001900390816119c95790505b5090505f805b600380549050811015611d35576001151560045f60038481548110611a1257611a11615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503611d22575f5b60025f60038481548110611aa357611aa2615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015611d20575f60025f60038581548110611b2757611b26615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611b9a57611b99615ab7565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c0016040528060038681548110611c5557611c54615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001511515815250905080868681518110611cf157611cf0615ab7565b5b6020026020010181905250600185611d099190615b11565b945050508080611d1890615b44565b915050611a8c565b505b8080611d2d90615b44565b9150506119ea565b5081935050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d76575f80fd5b5f151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611dc857611dc7615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514611def575f80fd5b6001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611e3f57611e3e615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507fee62066e68ea020a72ab8850191057c02d81798cef76e90508db15b2f47368c78260015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611ed557611ed4615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611f5257611f51615ab7565b5b905f5260205f2090600402016001015460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110611fb157611fb0615ab7565b5b905f5260205f20906004020160020154604051611fd19493929190615da4565b60405180910390a15050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612014575f80fd5b5f15155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061206557612064615ab7565b5b905f5260205f2090600502016004015f9054906101000a900460ff1615151461208c575f80fd5b60015f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106120dc576120db615ab7565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507fc086f5b7a83e015dcc4ec82fa3f4de6c895b32824a682d0d3002b1277cbb7dc7825f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20838154811061217157612170615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106121ed576121ec615ab7565b5b905f5260205f209060050201600101545f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20858154811061224b5761224a615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106122c8576122c7615ab7565b5b905f5260205f209060050201600301546040516122e9959493929190615de7565b60405180910390a15050565b5f8390505f8390505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015612460578382905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505081526020019060010190612359565b5050505090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015612575578382905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050815260200190600101906124c3565b5050505090506001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361269d575f5b825181101561269b578773ffffffffffffffffffffffffffffffffffffffff1683828151811061260757612606615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff1614801561265657505f151583828151811061264657612645615ab7565b5b6020026020010151608001511515145b15612688578383828151811061266f5761266e615ab7565b5b6020026020010151602001516126859190615b11565b93505b808061269390615b44565b9150506125d4565b505b6001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515036127c0575f5b81518110156127be578773ffffffffffffffffffffffffffffffffffffffff1682828151811061272a57612729615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff1614801561277957505f151582828151811061276957612768615ab7565b5b6020026020010151606001511515145b156127ab578382828151811061279257612791615ab7565b5b6020026020010151602001516127a89190615b11565b93505b80806127b690615b44565b9150506126f7565b505b828473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016127fc929190615bf7565b602060405180830381865afa158015612817573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061283b9190615bcc565b1015612845575f80fd5b828473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161287f9190615a9e565b602060405180830381865afa15801561289a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128be9190615bcc565b10156128c8575f80fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f4b3224748748339deab55aa5a1514e7f3d791c195a9594935c30a84d882f540f33888888604051612a129493929190615da4565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015612ac757505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015612b2257505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15612be457600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff021916908315150217905550612c95565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503612c9457600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff0219169083151502179055505b5b50505050505050565b6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612cf157612cf0615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503612d18575f80fd5b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612d6857612d67615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd843360015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110612e0557612e04615ab7565b5b905f5260205f209060040201600101546040518463ffffffff1660e01b8152600401612e3393929190615c1e565b6020604051808303815f875af1158015612e4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e739190615c7d565b5060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612ec357612ec2615ab7565b5b905f5260205f209060040201600201543414612edd575f80fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1634604051612f0290615cd5565b5f6040518083038185875af1925050503d805f8114612f3c576040519150601f19603f3d011682016040523d82523d5f602084013e612f41565b606091505b5050905080612f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7c90615d43565b60405180910390fd5b6001805f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110612fd557612fd4615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f08b8b3ffc165e69d2aa56bf6924a289c74530a36570b042b279ede424a0f7c188460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20858154811061306b5761306a615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106130e8576130e7615ab7565b5b905f5260205f2090600402016001015460015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20878154811061314757613146615ab7565b5b905f5260205f209060040201600201546040516131679493929190615da4565b60405180910390a150505050565b5f8490505f8490505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156132e0578382905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050815260200190600101906131d9565b5050505090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156133f5578382905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505081526020019060010190613343565b5050505090506001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361351d575f5b825181101561351b578873ffffffffffffffffffffffffffffffffffffffff1683828151811061348757613486615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff161480156134d657505f15158382815181106134c6576134c5615ab7565b5b6020026020010151608001511515145b1561350857838382815181106134ef576134ee615ab7565b5b6020026020010151602001516135059190615b11565b93505b808061351390615b44565b915050613454565b505b6001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503613640575f5b815181101561363e578873ffffffffffffffffffffffffffffffffffffffff168282815181106135aa576135a9615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff161480156135f957505f15158282815181106135e9576135e8615ab7565b5b6020026020010151606001511515145b1561362b578382828151811061361257613611615ab7565b5b6020026020010151602001516136289190615b11565b93505b808061363690615b44565b915050613577565b505b828473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161367c929190615bf7565b602060405180830381865afa158015613697573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136bb9190615bcc565b10156136c5575f80fd5b828473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016136ff9190615a9e565b602060405180830381865afa15801561371a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061373e9190615bcc565b1015613748575f80fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507fb31b008e8a12db47dae24bda793ea0d4e1039d4e74c334ec8fed59d8a4e8052933898989896040516138f5959493929190615de7565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156139aa57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015613a0557505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15613ac657600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff021916908315150217905550613b75565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16151503613b7457600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055505b5b5050505050505050565b823414613b8a575f80fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f5e91b5fb353347b0d4c78463cbf33c353331235f1f40327ca164bd540d16469733848484604051613cd49493929190615d61565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015613d8957505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015613de457505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15613ea657600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff021916908315150217905550613f57565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff16151503613f5657600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff0219169083151502179055505b5b505050565b60605f805b600380549050811015614029575f5b60015f60038481548110613f8757613f86615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015614015576001836140009190615b11565b9250808061400d90615b44565b915050613f70565b50808061402190615b44565b915050613f61565b505f8167ffffffffffffffff81111561404557614044615b8b565b5b60405190808252806020026020018201604052801561407e57816020015b61406b615020565b8152602001906001900390816140635790505b5090505f805b6003805490508110156143cf576001151560045f600384815481106140ac576140ab615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515036143bc575f5b60015f6003848154811061413d5761413c615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156143ba575f60015f600385815481106141c1576141c0615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061423457614233615ab7565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c00160405280600386815481106142ef576142ee615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015181526020018360600151151581525090508086868151811061438b5761438a615ab7565b5b60200260200101819052506001856143a39190615b11565b9450505080806143b290615b44565b915050614126565b505b80806143c790615b44565b915050614084565b5081935050505090565b6002602052815f5260405f2081815481106143f2575f80fd5b905f5260205f2090600402015f9150915050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b600115155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061449c5761449b615ab7565b5b905f5260205f2090600502016004015f9054906101000a900460ff161515036144c3575f80fd5b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061451257614511615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd84335f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106145ae576145ad615ab7565b5b905f5260205f209060050201600101546040518463ffffffff1660e01b81526004016145dc93929190615c1e565b6020604051808303815f875af11580156145f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061461c9190615c7d565b505f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20838154811061466c5761466b615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106146eb576146ea615ab7565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016147349190615a9e565b602060405180830381865afa15801561474f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906147739190615bcc565b101561477d575f80fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106147cb576147ca615ab7565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401614816929190615bf7565b602060405180830381865afa158015614831573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906148559190615bcc565b101561485f575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33865f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2087815481106148cb576148ca615ab7565b5b905f5260205f209060050201600301546040518463ffffffff1660e01b81526004016148f993929190615c1e565b6020604051808303815f875af1158015614915573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906149399190615c7d565b5060015f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061498a57614989615ab7565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507faef3fec0890a84ad1cfab292c8504f17278c9b35213257cbc2c572cc622ae015845f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110614a1f57614a1e615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110614a9b57614a9a615ab7565b5b905f5260205f209060050201600101545f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110614af957614af8615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208881548110614b7657614b75615ab7565b5b905f5260205f20906005020160030154604051614b97959493929190615de7565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614bdc575f80fd5b5f151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110614c2e57614c2d615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514614c55575f80fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110614ca657614ca5615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110614d3257614d31615ab7565b5b905f5260205f2090600402015f0154604051614d4d90615cd5565b5f6040518083038185875af1925050503d805f8114614d87576040519150601f19603f3d011682016040523d82523d5f602084013e614d8c565b606091505b5050905080614dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614dc790615d43565b60405180910390fd5b7f6fd78ca7acca4f76ea5834af9a37b74bbd249dbadf5360eeecb4a3a9b762dfff8360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110614e4157614e40615ab7565b5b905f5260205f2090600402015f015460025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110614e9f57614e9e615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110614f1d57614f1c615ab7565b5b905f5260205f20906004020160020154604051614f3d9493929190615d61565b60405180910390a1505050565b60038181548110614f59575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060e001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b60405180606001604052806060815260200160608152602001606081525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61512e82615105565b9050919050565b61513e81615124565b82525050565b5f61514f8383615135565b60208301905092915050565b5f602082019050919050565b5f615171826150dc565b61517b81856150e6565b9350615186836150f6565b805f5b838110156151b657815161519d8882615144565b97506151a88361515b565b925050600181019050615189565b5085935050505092915050565b5f6020820190508181035f8301526151db8184615167565b905092915050565b5f80fd5b6151f081615124565b81146151fa575f80fd5b50565b5f8135905061520b816151e7565b92915050565b5f819050919050565b61522381615211565b811461522d575f80fd5b50565b5f8135905061523e8161521a565b92915050565b5f806040838503121561525a576152596151e3565b5b5f615267858286016151fd565b925050602061527885828601615230565b9150509250929050565b61528b81615124565b82525050565b61529a81615211565b82525050565b5f8115159050919050565b6152b4816152a0565b82525050565b5f6080820190506152cd5f830187615282565b6152da6020830186615291565b6152e76040830185615291565b6152f460608301846152ab565b95945050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61532f81615211565b82525050565b61533e816152a0565b82525050565b60e082015f8201516153585f850182615135565b50602082015161536b6020850182615326565b50604082015161537e6040850182615135565b5060608201516153916060850182615326565b5060808201516153a46080850182615135565b5060a08201516153b760a0850182615326565b5060c08201516153ca60c0850182615335565b50505050565b5f6153db8383615344565b60e08301905092915050565b5f602082019050919050565b5f6153fd826152fd565b6154078185615307565b935061541283615317565b805f5b8381101561544257815161542988826153d0565b9750615434836153e7565b925050600181019050615415565b5085935050505092915050565b5f6020820190508181035f83015261546781846153f3565b905092915050565b5f60a0820190506154825f830188615282565b61548f6020830187615291565b61549c6040830186615282565b6154a96060830185615291565b6154b660808301846152ab565b9695505050505050565b5f602082840312156154d5576154d46151e3565b5b5f6154e2848285016151fd565b91505092915050565b5f82825260208201905092915050565b5f615505826152fd565b61550f81856154eb565b935061551a83615317565b805f5b8381101561554a57815161553188826153d0565b975061553c836153e7565b92505060018101905061551d565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516155945f850182615135565b5060208201516155a76020850182615326565b5060408201516155ba6040850182615135565b5060608201516155cd6060850182615326565b5060808201516155e06080850182615326565b5060a08201516155f360a0850182615335565b50505050565b5f6156048383615580565b60c08301905092915050565b5f602082019050919050565b5f61562682615557565b6156308185615561565b935061563b83615571565b805f5b8381101561566b57815161565288826155f9565b975061565d83615610565b92505060018101905061563e565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516156b55f850182615135565b5060208201516156c86020850182615326565b5060408201516156db6040850182615326565b5060608201516156ee6060850182615135565b5060808201516157016080850182615326565b5060a082015161571460a0850182615335565b50505050565b5f61572583836156a1565b60c08301905092915050565b5f602082019050919050565b5f61574782615678565b6157518185615682565b935061575c83615692565b805f5b8381101561578c578151615773888261571a565b975061577e83615731565b92505060018101905061575f565b5085935050505092915050565b5f606083015f8301518482035f8601526157b382826154fb565b915050602083015184820360208601526157cd828261561c565b915050604083015184820360408601526157e7828261573d565b9150508091505092915050565b5f6020820190508181035f83015261580c8184615799565b905092915050565b5f82825260208201905092915050565b5f61582e82615678565b6158388185615814565b935061584383615692565b805f5b8381101561587357815161585a888261571a565b975061586583615731565b925050600181019050615846565b5085935050505092915050565b5f6020820190508181035f8301526158988184615824565b905092915050565b5f805f606084860312156158b7576158b66151e3565b5b5f6158c4868287016151fd565b93505060206158d586828701615230565b92505060406158e686828701615230565b9150509250925092565b5f805f8060808587031215615908576159076151e3565b5b5f615915878288016151fd565b945050602061592687828801615230565b9350506040615937878288016151fd565b925050606061594887828801615230565b91505092959194509250565b5f805f6060848603121561596b5761596a6151e3565b5b5f61597886828701615230565b9350506020615989868287016151fd565b925050604061599a86828701615230565b9150509250925092565b5f82825260208201905092915050565b5f6159be82615557565b6159c881856159a4565b93506159d383615571565b805f5b83811015615a035781516159ea88826155f9565b97506159f583615610565b9250506001810190506159d6565b5085935050505092915050565b5f6020820190508181035f830152615a2881846159b4565b905092915050565b5f608082019050615a435f830187615291565b615a506020830186615282565b615a5d6040830185615291565b615a6a60608301846152ab565b95945050505050565b5f60208284031215615a8857615a876151e3565b5b5f615a9584828501615230565b91505092915050565b5f602082019050615ab15f830184615282565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f615b1b82615211565b9150615b2683615211565b9250828201905080821115615b3e57615b3d615ae4565b5b92915050565b5f615b4e82615211565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615b8057615b7f615ae4565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050615bc68161521a565b92915050565b5f60208284031215615be157615be06151e3565b5b5f615bee84828501615bb8565b91505092915050565b5f604082019050615c0a5f830185615282565b615c176020830184615282565b9392505050565b5f606082019050615c315f830186615282565b615c3e6020830185615282565b615c4b6040830184615291565b949350505050565b615c5c816152a0565b8114615c66575f80fd5b50565b5f81519050615c7781615c53565b92915050565b5f60208284031215615c9257615c916151e3565b5b5f615c9f84828501615c69565b91505092915050565b5f81905092915050565b50565b5f615cc05f83615ca8565b9150615ccb82615cb2565b5f82019050919050565b5f615cdf82615cb5565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f615d2d601483615ce9565b9150615d3882615cf9565b602082019050919050565b5f6020820190508181035f830152615d5a81615d21565b9050919050565b5f608082019050615d745f830187615282565b615d816020830186615291565b615d8e6040830185615282565b615d9b6060830184615291565b95945050505050565b5f608082019050615db75f830187615282565b615dc46020830186615282565b615dd16040830185615291565b615dde6060830184615291565b95945050505050565b5f60a082019050615dfa5f830188615282565b615e076020830187615282565b615e146040830186615291565b615e216060830185615282565b615e2e6080830184615291565b969550505050505056fea2646970667358221220b1d5c24f429c9b074b0abad7312de4bd5c7153dc0c8c6be3c785f846f70fd24a64736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610610108575f3560e01c80637f1ca38b11610094578063b25cfc9011610063578063b25cfc9014610339578063be53210914610363578063d74f378c146103a2578063e39c40fc146103ca578063fd9c8853146103e657610108565b80637f1ca38b146102b15780638c69cd84146102d9578063a1179c72146102f5578063a306802f1461031d57610108565b80633b66082a116100db5780633b66082a146101bb5780633c0d2d7b146101fb5780634737ab8d146102375780635956038214610261578063748d6a741461028957610108565b8063089733781461010c5780630bc07cef1461013657806315fb6839146101755780631cdec0421461019f575b5f80fd5b348015610117575f80fd5b50610120610422565b60405161012d91906151c3565b60405180910390f35b348015610141575f80fd5b5061015c60048036038101906101579190615244565b6104ad565b60405161016c94939291906152ba565b60405180910390f35b348015610180575f80fd5b5061018961051e565b604051610196919061544f565b60405180910390f35b6101b960048036038101906101b49190615244565b610979565b005b3480156101c6575f80fd5b506101e160048036038101906101dc9190615244565b61100a565b6040516101f295949392919061546f565b60405180910390f35b348015610206575f80fd5b50610221600480360381019061021c91906154c0565b61109f565b60405161022e91906157f4565b60405180910390f35b348015610242575f80fd5b5061024b6118c2565b6040516102589190615880565b60405180910390f35b34801561026c575f80fd5b5061028760048036038101906102829190615244565b611d3f565b005b348015610294575f80fd5b506102af60048036038101906102aa9190615244565b611fdd565b005b3480156102bc575f80fd5b506102d760048036038101906102d291906158a0565b6122f5565b005b6102f360048036038101906102ee9190615244565b612c9e565b005b348015610300575f80fd5b5061031b600480360381019061031691906158f0565b613175565b005b61033760048036038101906103329190615954565b613b7f565b005b348015610344575f80fd5b5061034d613f5c565b60405161035a9190615a10565b60405180910390f35b34801561036e575f80fd5b5061038960048036038101906103849190615244565b6143d9565b6040516103999493929190615a30565b60405180910390f35b3480156103ad575f80fd5b506103c860048036038101906103c39190615244565b61444a565b005b6103e460048036038101906103df9190615244565b614ba5565b005b3480156103f1575f80fd5b5061040c60048036038101906104079190615a73565b614f4a565b6040516104199190615a9e565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156104a357602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161045a575b5050505050905090565b6001602052815f5260405f2081815481106104c6575f80fd5b905f5260205f2090600402015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b60605f805b6003805490508110156105ea575f5b5f806003848154811061054857610547615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156105d6576001836105c19190615b11565b925080806105ce90615b44565b915050610532565b5080806105e290615b44565b915050610523565b505f8167ffffffffffffffff81111561060657610605615b8b565b5b60405190808252806020026020018201604052801561063f57816020015b61062c614f85565b8152602001906001900390816106245790505b5090505f805b60038054905081101561096f575f5b5f806003848154811061066a57610669615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561095b575f805f600385815481106106ed576106ec615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106107605761075f615ab7565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e00160405280600386815481106108705761086f615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff168152602001836060015181526020018360800151151581525090508086868151811061092c5761092b615ab7565b5b60200260200101819052506001856109449190615b11565b94505050808061095390615b44565b915050610654565b50808061096790615b44565b915050610645565b5081935050505090565b6001151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106109cc576109cb615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff161515036109f3575f80fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610a4357610a42615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ac357610ac2615ab7565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b0c9190615a9e565b602060405180830381865afa158015610b27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4b9190615bcc565b1015610b55575f80fd5b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ba457610ba3615ab7565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610bef929190615bf7565b602060405180830381865afa158015610c0a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2e9190615bcc565b1015610c38575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd338560025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610ca557610ca4615ab7565b5b905f5260205f209060040201600201546040518463ffffffff1660e01b8152600401610cd393929190615c1e565b6020604051808303815f875af1158015610cef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d139190615c7d565b505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610d7b57610d7a615ab7565b5b905f5260205f2090600402015f0154604051610d9690615cd5565b5f6040518083038185875af1925050503d805f8114610dd0576040519150601f19603f3d011682016040523d82523d5f602084013e610dd5565b606091505b5050905080610e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1090615d43565b60405180910390fd5b600160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610e6a57610e69615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f90737823f8fc9fbb28385683bca84d56edc8a1d49a2ad7faeb6391da5e38d99b8460025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110610f0057610eff615ab7565b5b905f5260205f2090600402015f015460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610f5e57610f5d615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610fdc57610fdb615ab7565b5b905f5260205f20906004020160020154604051610ffc9493929190615d61565b60405180910390a150505050565b5f602052815f5260405f208181548110611022575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16905085565b6110a7614fff565b6110af614fff565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff81111561110857611107615b8b565b5b60405190808252806020026020018201604052801561114157816020015b61112e614f85565b8152602001906001900390816111265790505b50815f01819052505f805b5f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156113a5575f805f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106111e2576111e1615ab7565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200183608001511515815250905080855f0151858151811061137657611375615ab7565b5b602002602001018190525060018461138e9190615b11565b93505050808061139d90615b44565b91505061114c565b5060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff811115611400576113ff615b8b565b5b60405190808252806020026020018201604052801561143957816020015b611426615020565b81526020019060019003908161141e5790505b5082602001819052505f90505f5b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561162e575f60015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106114df576114de615ab7565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001511515815250905080856020015185815181106115ff576115fe615ab7565b5b60200260200101819052506001846116179190615b11565b93505050808061162690615b44565b915050611447565b5060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905067ffffffffffffffff81111561168957611688615b8b565b5b6040519080825280602002602001820160405280156116c257816020015b6116af61507e565b8152602001906001900390816116a75790505b5082604001819052505f90505f5b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156118b7575f60025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061176857611767615ab7565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff16815260200183604001518152602001836060015115158152509050808560400151858151811061188857611887615ab7565b5b60200260200101819052506001846118a09190615b11565b9350505080806118af90615b44565b9150506116d0565b508192505050919050565b60605f805b60038054905081101561198f575f5b60025f600384815481106118ed576118ec615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561197b576001836119669190615b11565b9250808061197390615b44565b9150506118d6565b50808061198790615b44565b9150506118c7565b505f8167ffffffffffffffff8111156119ab576119aa615b8b565b5b6040519080825280602002602001820160405280156119e457816020015b6119d161507e565b8152602001906001900390816119c95790505b5090505f805b600380549050811015611d35576001151560045f60038481548110611a1257611a11615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503611d22575f5b60025f60038481548110611aa357611aa2615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015611d20575f60025f60038581548110611b2757611b26615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611b9a57611b99615ab7565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c0016040528060038681548110611c5557611c54615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001511515815250905080868681518110611cf157611cf0615ab7565b5b6020026020010181905250600185611d099190615b11565b945050508080611d1890615b44565b915050611a8c565b505b8080611d2d90615b44565b9150506119ea565b5081935050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d76575f80fd5b5f151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611dc857611dc7615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514611def575f80fd5b6001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611e3f57611e3e615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507fee62066e68ea020a72ab8850191057c02d81798cef76e90508db15b2f47368c78260015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611ed557611ed4615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611f5257611f51615ab7565b5b905f5260205f2090600402016001015460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110611fb157611fb0615ab7565b5b905f5260205f20906004020160020154604051611fd19493929190615da4565b60405180910390a15050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612014575f80fd5b5f15155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061206557612064615ab7565b5b905f5260205f2090600502016004015f9054906101000a900460ff1615151461208c575f80fd5b60015f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106120dc576120db615ab7565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507fc086f5b7a83e015dcc4ec82fa3f4de6c895b32824a682d0d3002b1277cbb7dc7825f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20838154811061217157612170615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106121ed576121ec615ab7565b5b905f5260205f209060050201600101545f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20858154811061224b5761224a615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106122c8576122c7615ab7565b5b905f5260205f209060050201600301546040516122e9959493929190615de7565b60405180910390a15050565b5f8390505f8390505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015612460578382905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505081526020019060010190612359565b5050505090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015612575578382905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050815260200190600101906124c3565b5050505090506001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361269d575f5b825181101561269b578773ffffffffffffffffffffffffffffffffffffffff1683828151811061260757612606615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff1614801561265657505f151583828151811061264657612645615ab7565b5b6020026020010151608001511515145b15612688578383828151811061266f5761266e615ab7565b5b6020026020010151602001516126859190615b11565b93505b808061269390615b44565b9150506125d4565b505b6001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515036127c0575f5b81518110156127be578773ffffffffffffffffffffffffffffffffffffffff1682828151811061272a57612729615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff1614801561277957505f151582828151811061276957612768615ab7565b5b6020026020010151606001511515145b156127ab578382828151811061279257612791615ab7565b5b6020026020010151602001516127a89190615b11565b93505b80806127b690615b44565b9150506126f7565b505b828473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016127fc929190615bf7565b602060405180830381865afa158015612817573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061283b9190615bcc565b1015612845575f80fd5b828473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161287f9190615a9e565b602060405180830381865afa15801561289a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128be9190615bcc565b10156128c8575f80fd5b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f4b3224748748339deab55aa5a1514e7f3d791c195a9594935c30a84d882f540f33888888604051612a129493929190615da4565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015612ac757505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015612b2257505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15612be457600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff021916908315150217905550612c95565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503612c9457600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff0219169083151502179055505b5b50505050505050565b6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612cf157612cf0615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503612d18575f80fd5b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612d6857612d67615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd843360015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110612e0557612e04615ab7565b5b905f5260205f209060040201600101546040518463ffffffff1660e01b8152600401612e3393929190615c1e565b6020604051808303815f875af1158015612e4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e739190615c7d565b5060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612ec357612ec2615ab7565b5b905f5260205f209060040201600201543414612edd575f80fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1634604051612f0290615cd5565b5f6040518083038185875af1925050503d805f8114612f3c576040519150601f19603f3d011682016040523d82523d5f602084013e612f41565b606091505b5050905080612f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7c90615d43565b60405180910390fd5b6001805f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110612fd557612fd4615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f08b8b3ffc165e69d2aa56bf6924a289c74530a36570b042b279ede424a0f7c188460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20858154811061306b5761306a615ab7565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106130e8576130e7615ab7565b5b905f5260205f2090600402016001015460015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20878154811061314757613146615ab7565b5b905f5260205f209060040201600201546040516131679493929190615da4565b60405180910390a150505050565b5f8490505f8490505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156132e0578382905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050815260200190600101906131d9565b5050505090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156133f5578382905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505081526020019060010190613343565b5050505090506001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361351d575f5b825181101561351b578873ffffffffffffffffffffffffffffffffffffffff1683828151811061348757613486615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff161480156134d657505f15158382815181106134c6576134c5615ab7565b5b6020026020010151608001511515145b1561350857838382815181106134ef576134ee615ab7565b5b6020026020010151602001516135059190615b11565b93505b808061351390615b44565b915050613454565b505b6001151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503613640575f5b815181101561363e578873ffffffffffffffffffffffffffffffffffffffff168282815181106135aa576135a9615ab7565b5b60200260200101515f015173ffffffffffffffffffffffffffffffffffffffff161480156135f957505f15158282815181106135e9576135e8615ab7565b5b6020026020010151606001511515145b1561362b578382828151811061361257613611615ab7565b5b6020026020010151602001516136289190615b11565b93505b808061363690615b44565b915050613577565b505b828473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161367c929190615bf7565b602060405180830381865afa158015613697573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136bb9190615bcc565b10156136c5575f80fd5b828473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016136ff9190615a9e565b602060405180830381865afa15801561371a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061373e9190615bcc565b1015613748575f80fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507fb31b008e8a12db47dae24bda793ea0d4e1039d4e74c334ec8fed59d8a4e8052933898989896040516138f5959493929190615de7565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156139aa57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015613a0557505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15613ac657600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff021916908315150217905550613b75565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16151503613b7457600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055505b5b5050505050505050565b823414613b8a575f80fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f5e91b5fb353347b0d4c78463cbf33c353331235f1f40327ca164bd540d16469733848484604051613cd49493929190615d61565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015613d8957505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015613de457505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15613ea657600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff021916908315150217905550613f57565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff16151503613f5657600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff0219169083151502179055505b5b505050565b60605f805b600380549050811015614029575f5b60015f60038481548110613f8757613f86615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015614015576001836140009190615b11565b9250808061400d90615b44565b915050613f70565b50808061402190615b44565b915050613f61565b505f8167ffffffffffffffff81111561404557614044615b8b565b5b60405190808252806020026020018201604052801561407e57816020015b61406b615020565b8152602001906001900390816140635790505b5090505f805b6003805490508110156143cf576001151560045f600384815481106140ac576140ab615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515036143bc575f5b60015f6003848154811061413d5761413c615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156143ba575f60015f600385815481106141c1576141c0615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061423457614233615ab7565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c00160405280600386815481106142ef576142ee615ab7565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015181526020018360600151151581525090508086868151811061438b5761438a615ab7565b5b60200260200101819052506001856143a39190615b11565b9450505080806143b290615b44565b915050614126565b505b80806143c790615b44565b915050614084565b5081935050505090565b6002602052815f5260405f2081815481106143f2575f80fd5b905f5260205f2090600402015f9150915050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b600115155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061449c5761449b615ab7565b5b905f5260205f2090600502016004015f9054906101000a900460ff161515036144c3575f80fd5b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061451257614511615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd84335f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106145ae576145ad615ab7565b5b905f5260205f209060050201600101546040518463ffffffff1660e01b81526004016145dc93929190615c1e565b6020604051808303815f875af11580156145f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061461c9190615c7d565b505f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20838154811061466c5761466b615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106146eb576146ea615ab7565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016147349190615a9e565b602060405180830381865afa15801561474f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906147739190615bcc565b101561477d575f80fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106147cb576147ca615ab7565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401614816929190615bf7565b602060405180830381865afa158015614831573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906148559190615bcc565b101561485f575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33865f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2087815481106148cb576148ca615ab7565b5b905f5260205f209060050201600301546040518463ffffffff1660e01b81526004016148f993929190615c1e565b6020604051808303815f875af1158015614915573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906149399190615c7d565b5060015f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061498a57614989615ab7565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507faef3fec0890a84ad1cfab292c8504f17278c9b35213257cbc2c572cc622ae015845f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110614a1f57614a1e615ab7565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110614a9b57614a9a615ab7565b5b905f5260205f209060050201600101545f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110614af957614af8615ab7565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208881548110614b7657614b75615ab7565b5b905f5260205f20906005020160030154604051614b97959493929190615de7565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614bdc575f80fd5b5f151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110614c2e57614c2d615ab7565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514614c55575f80fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110614ca657614ca5615ab7565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110614d3257614d31615ab7565b5b905f5260205f2090600402015f0154604051614d4d90615cd5565b5f6040518083038185875af1925050503d805f8114614d87576040519150601f19603f3d011682016040523d82523d5f602084013e614d8c565b606091505b5050905080614dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614dc790615d43565b60405180910390fd5b7f6fd78ca7acca4f76ea5834af9a37b74bbd249dbadf5360eeecb4a3a9b762dfff8360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110614e4157614e40615ab7565b5b905f5260205f2090600402015f015460025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110614e9f57614e9e615ab7565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110614f1d57614f1c615ab7565b5b905f5260205f20906004020160020154604051614f3d9493929190615d61565b60405180910390a1505050565b60038181548110614f59575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060e001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b60405180606001604052806060815260200160608152602001606081525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61512e82615105565b9050919050565b61513e81615124565b82525050565b5f61514f8383615135565b60208301905092915050565b5f602082019050919050565b5f615171826150dc565b61517b81856150e6565b9350615186836150f6565b805f5b838110156151b657815161519d8882615144565b97506151a88361515b565b925050600181019050615189565b5085935050505092915050565b5f6020820190508181035f8301526151db8184615167565b905092915050565b5f80fd5b6151f081615124565b81146151fa575f80fd5b50565b5f8135905061520b816151e7565b92915050565b5f819050919050565b61522381615211565b811461522d575f80fd5b50565b5f8135905061523e8161521a565b92915050565b5f806040838503121561525a576152596151e3565b5b5f615267858286016151fd565b925050602061527885828601615230565b9150509250929050565b61528b81615124565b82525050565b61529a81615211565b82525050565b5f8115159050919050565b6152b4816152a0565b82525050565b5f6080820190506152cd5f830187615282565b6152da6020830186615291565b6152e76040830185615291565b6152f460608301846152ab565b95945050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61532f81615211565b82525050565b61533e816152a0565b82525050565b60e082015f8201516153585f850182615135565b50602082015161536b6020850182615326565b50604082015161537e6040850182615135565b5060608201516153916060850182615326565b5060808201516153a46080850182615135565b5060a08201516153b760a0850182615326565b5060c08201516153ca60c0850182615335565b50505050565b5f6153db8383615344565b60e08301905092915050565b5f602082019050919050565b5f6153fd826152fd565b6154078185615307565b935061541283615317565b805f5b8381101561544257815161542988826153d0565b9750615434836153e7565b925050600181019050615415565b5085935050505092915050565b5f6020820190508181035f83015261546781846153f3565b905092915050565b5f60a0820190506154825f830188615282565b61548f6020830187615291565b61549c6040830186615282565b6154a96060830185615291565b6154b660808301846152ab565b9695505050505050565b5f602082840312156154d5576154d46151e3565b5b5f6154e2848285016151fd565b91505092915050565b5f82825260208201905092915050565b5f615505826152fd565b61550f81856154eb565b935061551a83615317565b805f5b8381101561554a57815161553188826153d0565b975061553c836153e7565b92505060018101905061551d565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516155945f850182615135565b5060208201516155a76020850182615326565b5060408201516155ba6040850182615135565b5060608201516155cd6060850182615326565b5060808201516155e06080850182615326565b5060a08201516155f360a0850182615335565b50505050565b5f6156048383615580565b60c08301905092915050565b5f602082019050919050565b5f61562682615557565b6156308185615561565b935061563b83615571565b805f5b8381101561566b57815161565288826155f9565b975061565d83615610565b92505060018101905061563e565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516156b55f850182615135565b5060208201516156c86020850182615326565b5060408201516156db6040850182615326565b5060608201516156ee6060850182615135565b5060808201516157016080850182615326565b5060a082015161571460a0850182615335565b50505050565b5f61572583836156a1565b60c08301905092915050565b5f602082019050919050565b5f61574782615678565b6157518185615682565b935061575c83615692565b805f5b8381101561578c578151615773888261571a565b975061577e83615731565b92505060018101905061575f565b5085935050505092915050565b5f606083015f8301518482035f8601526157b382826154fb565b915050602083015184820360208601526157cd828261561c565b915050604083015184820360408601526157e7828261573d565b9150508091505092915050565b5f6020820190508181035f83015261580c8184615799565b905092915050565b5f82825260208201905092915050565b5f61582e82615678565b6158388185615814565b935061584383615692565b805f5b8381101561587357815161585a888261571a565b975061586583615731565b925050600181019050615846565b5085935050505092915050565b5f6020820190508181035f8301526158988184615824565b905092915050565b5f805f606084860312156158b7576158b66151e3565b5b5f6158c4868287016151fd565b93505060206158d586828701615230565b92505060406158e686828701615230565b9150509250925092565b5f805f8060808587031215615908576159076151e3565b5b5f615915878288016151fd565b945050602061592687828801615230565b9350506040615937878288016151fd565b925050606061594887828801615230565b91505092959194509250565b5f805f6060848603121561596b5761596a6151e3565b5b5f61597886828701615230565b9350506020615989868287016151fd565b925050604061599a86828701615230565b9150509250925092565b5f82825260208201905092915050565b5f6159be82615557565b6159c881856159a4565b93506159d383615571565b805f5b83811015615a035781516159ea88826155f9565b97506159f583615610565b9250506001810190506159d6565b5085935050505092915050565b5f6020820190508181035f830152615a2881846159b4565b905092915050565b5f608082019050615a435f830187615291565b615a506020830186615282565b615a5d6040830185615291565b615a6a60608301846152ab565b95945050505050565b5f60208284031215615a8857615a876151e3565b5b5f615a9584828501615230565b91505092915050565b5f602082019050615ab15f830184615282565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f615b1b82615211565b9150615b2683615211565b9250828201905080821115615b3e57615b3d615ae4565b5b92915050565b5f615b4e82615211565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615b8057615b7f615ae4565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050615bc68161521a565b92915050565b5f60208284031215615be157615be06151e3565b5b5f615bee84828501615bb8565b91505092915050565b5f604082019050615c0a5f830185615282565b615c176020830184615282565b9392505050565b5f606082019050615c315f830186615282565b615c3e6020830185615282565b615c4b6040830184615291565b949350505050565b615c5c816152a0565b8114615c66575f80fd5b50565b5f81519050615c7781615c53565b92915050565b5f60208284031215615c9257615c916151e3565b5b5f615c9f84828501615c69565b91505092915050565b5f81905092915050565b50565b5f615cc05f83615ca8565b9150615ccb82615cb2565b5f82019050919050565b5f615cdf82615cb5565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f615d2d601483615ce9565b9150615d3882615cf9565b602082019050919050565b5f6020820190508181035f830152615d5a81615d21565b9050919050565b5f608082019050615d745f830187615282565b615d816020830186615291565b615d8e6040830185615282565b615d9b6060830184615291565b95945050505050565b5f608082019050615db75f830187615282565b615dc46020830186615282565b615dd16040830185615291565b615dde6060830184615291565b95945050505050565b5f60a082019050615dfa5f830188615282565b615e076020830187615282565b615e146040830186615291565b615e216060830185615282565b615e2e6080830184615291565b969550505050505056fea2646970667358221220b1d5c24f429c9b074b0abad7312de4bd5c7153dc0c8c6be3c785f846f70fd24a64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:34712:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "81:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "108:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "92:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "74:6:8",
                "type": ""
              }
            ],
            "src": "7:114:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "238:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "255:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "260:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "248:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "248:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "248:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "276:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "295:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "300:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "291:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "291:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "276:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "210:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "215:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "226:11:8",
                "type": ""
              }
            ],
            "src": "127:184:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "389:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "399:11:8",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "407:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "399:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "432:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "437:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "376:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "384:4:8",
                "type": ""
              }
            ],
            "src": "317:132:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "510:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "525:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "532:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "521:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "510:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "482:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "492:7:8",
                "type": ""
              }
            ],
            "src": "455:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "632:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "642:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "671:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "653:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "642:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "614:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "624:7:8",
                "type": ""
              }
            ],
            "src": "587:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "761:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "784:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "766:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "766:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "754:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "739:3:8",
                "type": ""
              }
            ],
            "src": "689:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "883:99:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "935:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "893:33:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "893:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "893:46:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:28:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "966:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "948:10:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "856:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "864:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "872:10:8",
                "type": ""
              }
            ],
            "src": "803:179:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1063:38:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1073:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1085:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "1073:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1050:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "1058:4:8",
                "type": ""
              }
            ],
            "src": "988:113:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1261:608:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1271:68:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1333:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1285:47:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1285:54:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1275:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1348:93:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1429:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1434:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1355:73:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:86:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1348:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1450:71:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1515:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1465:49:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:56:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1454:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1530:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "1544:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1534:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1620:224:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1634:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1661:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1655:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1655:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "1638:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1681:70:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1732:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1747:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1688:43:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1688:63:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1681:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1764:70:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1827:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1774:52:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1774:60:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1764:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1582:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1585:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1579:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1593:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1595:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1604:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1607:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1600:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1600:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1595:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1564:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1566:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1575:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1570:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1560:284:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1853:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1860:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1240:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1247:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1256:3:8",
                "type": ""
              }
            ],
            "src": "1137:732:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:225:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2033:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2080:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2091:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2076:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2076:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2099:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2069:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2069:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:116:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2227:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2236:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2133:93:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2133:108:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2125:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1995:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2007:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2018:4:8",
                "type": ""
              }
            ],
            "src": "1875:373:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2294:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2304:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2314:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2304:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2287:6:8",
                "type": ""
              }
            ],
            "src": "2254:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2434:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2434:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2335:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2547:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2564:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2567:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2557:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2458:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2681:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2693:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2683:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2683:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2647:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2672:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2654:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2654:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2644:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2634:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2617:5:8",
                "type": ""
              }
            ],
            "src": "2581:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2761:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2771:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2793:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2780:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2771:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2836:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2809:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2809:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2739:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2747:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2755:5:8",
                "type": ""
              }
            ],
            "src": "2709:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2909:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2920:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2909:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2881:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2891:7:8",
                "type": ""
              }
            ],
            "src": "2854:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2980:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3037:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3046:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3049:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3039:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3039:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3039:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3003:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3028:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3010:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3010:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3000:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2990:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2973:5:8",
                "type": ""
              }
            ],
            "src": "2937:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3117:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3127:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3149:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3136:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3127:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3192:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3165:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3165:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3095:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3103:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3111:5:8",
                "type": ""
              }
            ],
            "src": "3065:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3293:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3339:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3341:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3341:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3341:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3314:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3323:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3310:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3306:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3303:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3432:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3447:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3461:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3451:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3476:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3511:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3522:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3507:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3507:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3531:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3486:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3476:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3559:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3574:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3588:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3578:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3604:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3639:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3650:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3635:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3635:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3659:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3614:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3614:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3604:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3255:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3266:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3278:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3286:6:8",
                "type": ""
              }
            ],
            "src": "3210:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3755:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3772:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3795:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3777:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3765:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3765:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3743:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3750:3:8",
                "type": ""
              }
            ],
            "src": "3690:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3879:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3896:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3919:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3901:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3901:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3889:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3889:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3867:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3874:3:8",
                "type": ""
              }
            ],
            "src": "3814:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3980:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3990:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4015:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4008:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4008:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4001:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4001:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3990:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3962:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3972:7:8",
                "type": ""
              }
            ],
            "src": "3938:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4093:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4110:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4130:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4115:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4103:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4103:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4103:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4081:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4088:3:8",
                "type": ""
              }
            ],
            "src": "4034:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4325:365:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4335:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4347:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4358:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4343:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4343:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4335:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4416:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4429:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4425:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4425:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4372:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4372:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4497:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4510:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4521:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4506:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4506:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4453:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4453:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4579:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4592:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4603:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4535:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4655:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4668:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4679:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4664:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4664:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4617:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:66:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:66:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4273:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4285:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4293:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4301:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4309:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4320:4:8",
                "type": ""
              }
            ],
            "src": "4149:541:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4815:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4826:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4842:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4836:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4826:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4798:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4808:6:8",
                "type": ""
              }
            ],
            "src": "4696:159:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5017:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5034:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5039:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5027:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5027:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5027:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5055:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5074:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5070:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5070:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5055:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4989:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4994:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5005:11:8",
                "type": ""
              }
            ],
            "src": "4861:229:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5213:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5223:11:8",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "5231:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5223:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5244:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5256:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5261:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5252:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5252:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5244:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5200:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5208:4:8",
                "type": ""
              }
            ],
            "src": "5096:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5334:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5351:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5374:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5356:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5356:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5322:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5329:3:8",
                "type": ""
              }
            ],
            "src": "5279:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5442:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5459:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5479:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5464:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5452:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5452:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5430:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5437:3:8",
                "type": ""
              }
            ],
            "src": "5393:99:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5732:1347:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5742:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5758:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:4:8",
                        "type": "",
                        "value": "0xe0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5754:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5754:14:8"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5746:4:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5778:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5815:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5845:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5852:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5841:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5841:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5835:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5835:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5819:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5905:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5923:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5928:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5919:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5919:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5871:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5871:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5954:181:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6006:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6036:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6043:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6032:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6032:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6026:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6026:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6010:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6096:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6114:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6119:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6110:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6110:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6062:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6062:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6062:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6145:179:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6195:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6225:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6232:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6221:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6221:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6215:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6215:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6199:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6285:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6303:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6308:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6299:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6299:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6251:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6251:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6251:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6334:178:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6383:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6413:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6420:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6409:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6409:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6403:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6387:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6473:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6491:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6496:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6487:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6487:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6439:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6439:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6439:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6522:182:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6575:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6605:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6612:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6601:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6601:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6595:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6595:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6579:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6665:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6683:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6688:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6679:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6679:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6631:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6631:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6631:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6714:181:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6766:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6796:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6803:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6792:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6792:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6786:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6786:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6770:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6856:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6874:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6879:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6870:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6870:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6822:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6822:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6822:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6905:167:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6949:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6979:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6986:4:8",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6975:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6975:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6969:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6969:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6953:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7033:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7051:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7056:4:8",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7047:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7047:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "7005:27:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7005:57:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7005:57:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5719:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5726:3:8",
                "type": ""
              }
            ],
            "src": "5586:1493:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7255:189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7389:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7397:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7265:123:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:136:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7265:136:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7410:28:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7428:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7433:4:8",
                        "type": "",
                        "value": "0xe0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7424:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7424:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "7410:10:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7228:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7236:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "7244:10:8",
                "type": ""
              }
            ],
            "src": "7085:359:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7570:38:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7580:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "7592:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7597:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7588:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7588:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "7580:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "7557:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "7565:4:8",
                "type": ""
              }
            ],
            "src": "7450:158:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7920:878:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7930:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8037:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7944:92:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7944:99:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7934:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8052:138:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8178:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8183:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8059:118:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8059:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8052:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8199:116:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8309:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "8214:94:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:101:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "8203:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8324:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "8338:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8328:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8414:359:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8428:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8455:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8449:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8449:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "8432:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8475:160:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "8616:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8631:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "8482:133:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8482:153:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8475:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8648:115:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8756:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "8658:97:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8658:105:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8648:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8376:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8379:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8373:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8373:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8387:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8389:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8398:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8401:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8394:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8394:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8389:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8358:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8360:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8369:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "8364:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "8354:419:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8782:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8789:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8782:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7899:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7906:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7915:3:8",
                "type": ""
              }
            ],
            "src": "7706:1092:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9042:315:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9052:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9064:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9075:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9060:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9060:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9052:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9099:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9110:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9095:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9095:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9118:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9124:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9114:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9114:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9088:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9088:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9088:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9144:206:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9336:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9345:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9152:183:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9152:198:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9144:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9014:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9026:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9037:4:8",
                "type": ""
              }
            ],
            "src": "8804:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9567:448:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9577:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9589:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9600:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9585:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9585:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9577:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9658:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9671:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9682:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9667:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9667:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9614:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9614:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9614:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9739:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9752:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9763:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9748:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9748:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9695:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9695:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9695:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9821:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9834:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9845:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9830:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9830:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9777:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9777:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9777:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9903:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9916:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9927:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9912:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9912:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9859:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9859:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9859:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9979:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9992:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10003:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9988:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9988:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9941:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9941:67:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9941:67:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9507:9:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9519:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9527:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9535:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9543:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9551:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9562:4:8",
                "type": ""
              }
            ],
            "src": "9363:652:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10087:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10133:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10135:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10135:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10135:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10108:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10117:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10104:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10104:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10129:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10100:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10100:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10097:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10226:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10241:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10255:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10245:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10270:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10305:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10316:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10301:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10301:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10325:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10280:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10280:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10270:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10057:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10068:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10080:6:8",
                "type": ""
              }
            ],
            "src": "10021:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10502:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10519:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10524:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10512:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10512:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10512:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10540:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10559:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10564:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10555:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10555:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10540:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10474:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10479:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10490:11:8",
                "type": ""
              }
            ],
            "src": "10356:219:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10877:868:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10887:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10994:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10901:92:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10901:99:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10891:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11009:128:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11125:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11130:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11016:108:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11016:121:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11009:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11146:116:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11256:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11161:94:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11161:101:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "11150:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11271:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "11285:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "11275:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11361:359:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11375:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11402:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11396:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11396:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "11379:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11422:160:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "11563:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11578:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11429:133:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11429:153:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11422:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11595:115:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11703:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11605:97:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11605:105:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11595:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11323:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11326:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11320:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11320:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11334:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11336:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11345:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11348:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11341:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11341:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11336:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11305:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11307:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11316:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "11311:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "11301:419:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11729:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11736:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11729:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10856:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10863:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10872:3:8",
                "type": ""
              }
            ],
            "src": "10673:1072:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11867:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11878:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11894:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11888:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11878:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11850:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11860:6:8",
                "type": ""
              }
            ],
            "src": "11751:156:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12056:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12073:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12078:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12066:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12066:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12066:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12094:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12113:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12118:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12109:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12109:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12094:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12028:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12033:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12044:11:8",
                "type": ""
              }
            ],
            "src": "11913:216:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12249:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12259:11:8",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "12267:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12259:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12280:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "12292:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12297:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12288:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12288:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12280:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "12236:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12244:4:8",
                "type": ""
              }
            ],
            "src": "12135:174:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12537:1153:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12547:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12563:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12568:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12559:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12559:14:8"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "12551:4:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12583:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12620:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12650:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12657:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12646:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12646:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "12640:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12640:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "12624:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12710:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12728:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12733:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12724:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12724:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12676:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12676:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12676:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12759:181:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12811:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12841:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12848:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12837:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12837:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "12831:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12831:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "12815:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12901:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12919:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12924:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12915:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12915:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12867:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12867:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12867:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12950:179:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13000:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13030:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13037:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13026:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13026:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13020:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13020:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13004:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13090:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13108:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13113:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13104:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13104:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "13056:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13056:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13056:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13139:178:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13188:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13218:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13225:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13214:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13214:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13208:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13208:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13192:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13278:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13296:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13301:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13292:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13292:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13244:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13244:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13244:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13327:179:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13377:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13407:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13414:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13403:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13403:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13397:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13397:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13381:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13467:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13485:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13490:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13481:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13481:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13433:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13433:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13433:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13516:167:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13560:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13590:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13597:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13586:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13586:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13580:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13580:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13564:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13644:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13662:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13667:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13658:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13658:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "13616:27:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13616:57:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13616:57:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12524:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12531:3:8",
                "type": ""
              }
            ],
            "src": "12397:1293:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13860:183:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13988:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13996:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "13870:117:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13870:130:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13870:130:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14009:28:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14027:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14032:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14023:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14023:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "14009:10:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13833:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13841:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "13849:10:8",
                "type": ""
              }
            ],
            "src": "13696:347:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14166:38:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14176:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "14188:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14193:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14184:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14184:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "14176:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "14153:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "14161:4:8",
                "type": ""
              }
            ],
            "src": "14049:155:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14494:850:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14504:110:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14608:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14518:89:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:96:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14508:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14623:125:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14736:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14741:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14630:105:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14630:118:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14623:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14757:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14864:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14772:91:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14772:98:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "14761:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14879:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "14893:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "14883:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14969:350:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14983:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "15010:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15004:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15004:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "14987:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15030:154:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "15165:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15180:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "15037:127:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15037:147:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15030:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15197:112:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "15302:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "15207:94:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15207:102:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15197:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14931:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14934:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14928:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14928:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14942:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14944:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14953:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14956:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14949:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14949:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14944:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14913:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14915:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14924:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "14919:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "14909:410:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15328:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "15335:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15328:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14473:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14480:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14489:3:8",
                "type": ""
              }
            ],
            "src": "14296:1048:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15466:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15477:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15493:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15487:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15487:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "15477:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15449:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15459:6:8",
                "type": ""
              }
            ],
            "src": "15350:156:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15655:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15672:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15677:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15665:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15665:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15665:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15693:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15712:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15717:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15708:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15708:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "15693:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15627:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15632:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "15643:11:8",
                "type": ""
              }
            ],
            "src": "15512:216:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15848:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15858:11:8",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "15866:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "15858:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15879:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "15891:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15896:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15887:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15887:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "15879:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "15835:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "15843:4:8",
                "type": ""
              }
            ],
            "src": "15734:174:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16136:1156:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16146:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16162:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16167:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16158:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16158:14:8"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "16150:4:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16182:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16219:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16249:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16256:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16245:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16245:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16239:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16239:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16223:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16309:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16327:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16332:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16323:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16323:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16275:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16275:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16275:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16358:181:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16410:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16440:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16447:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16436:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16436:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16430:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16430:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16414:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16500:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16518:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16523:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16514:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16514:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16466:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16466:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16466:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16549:176:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16596:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16626:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16633:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16622:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16622:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16616:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16616:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16600:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16686:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16704:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16709:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16700:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16700:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16652:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16652:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16652:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16735:182:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16788:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16818:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16825:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16814:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16814:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16808:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16808:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16792:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16878:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16896:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16901:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16892:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16892:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16844:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16844:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16844:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16927:181:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16979:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17009:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17016:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17005:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17005:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16999:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16999:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16983:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17069:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17087:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17092:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17083:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17083:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17035:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17035:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17035:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17118:167:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17162:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17192:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17199:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17188:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17188:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17182:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17182:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17166:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17246:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17264:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17269:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17260:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17260:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "17218:27:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17218:57:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17218:57:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16123:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16130:3:8",
                "type": ""
              }
            ],
            "src": "15996:1296:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17462:183:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17590:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17598:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "17472:117:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17472:130:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17472:130:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17611:28:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17629:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17634:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17625:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17625:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "17611:10:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17435:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17443:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "17451:10:8",
                "type": ""
              }
            ],
            "src": "17298:347:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17768:38:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17778:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "17790:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17795:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17786:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17786:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "17778:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "17755:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "17763:4:8",
                "type": ""
              }
            ],
            "src": "17651:155:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18096:850:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18106:110:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18210:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18120:89:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18120:96:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "18110:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18225:125:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18338:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18343:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18232:105:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18232:118:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18225:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18359:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18466:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18374:91:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18374:98:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "18363:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18481:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "18495:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "18485:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18571:350:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "18585:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "18612:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "18606:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18606:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "18589:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18632:154:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "18767:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18782:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "18639:127:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18639:147:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18632:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18799:112:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "18904:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "18809:94:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18809:102:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18799:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18533:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18536:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18530:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18530:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "18544:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18546:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "18555:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18558:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18551:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18551:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "18546:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "18515:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "18517:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "18526:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "18521:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "18511:410:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18930:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "18937:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18930:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18075:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18082:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18091:3:8",
                "type": ""
              }
            ],
            "src": "17898:1048:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19168:1209:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19178:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19194:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19199:4:8",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19190:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19190:14:8"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "19182:4:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19214:378:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19272:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19302:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19309:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19298:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19298:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19292:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19292:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "19276:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19340:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19345:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19336:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19336:14:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "19356:4:8"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19362:3:8"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19352:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19352:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19329:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19329:38:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19329:38:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19380:201:8",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "19562:12:8"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19576:4:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "19388:173:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19388:193:8"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19380:4:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19602:369:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19657:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19687:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19694:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19683:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19683:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19677:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19677:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "19661:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19725:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19730:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19721:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19721:14:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "19741:4:8"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19747:3:8"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19737:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19737:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19714:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19714:38:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19714:38:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19765:195:8",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "19941:12:8"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19955:4:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "19773:167:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19773:187:8"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19765:4:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19981:369:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20036:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20066:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20073:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20062:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20062:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "20056:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20056:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "20040:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20104:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20109:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20100:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20100:14:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20120:4:8"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20126:3:8"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20116:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20116:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20093:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20093:38:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20093:38:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20144:195:8",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "20320:12:8"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20334:4:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "20152:167:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20152:187:8"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "20144:4:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20360:11:8",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "20367:4:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20360:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_AllTradesOfAccount_$2613_memory_ptr_to_t_struct$_AllTradesOfAccount_$2613_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19147:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19154:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19163:3:8",
                "type": ""
              }
            ],
            "src": "19022:1355:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20553:247:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20563:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20575:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20586:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20571:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20571:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20563:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20610:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20621:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20606:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20606:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20629:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20635:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20625:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20625:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20599:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20599:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20599:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20655:138:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20779:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20788:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_AllTradesOfAccount_$2613_memory_ptr_to_t_struct$_AllTradesOfAccount_$2613_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20663:115:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20663:130:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20655:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_AllTradesOfAccount_$2613_memory_ptr__to_t_struct$_AllTradesOfAccount_$2613_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20525:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20537:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20548:4:8",
                "type": ""
              }
            ],
            "src": "20383:417:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20959:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20976:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20981:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20969:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20969:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20969:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20997:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21016:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21021:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21012:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21012:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "20997:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20931:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20936:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "20947:11:8",
                "type": ""
              }
            ],
            "src": "20806:226:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21332:860:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21342:110:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21446:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "21356:89:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21356:96:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21346:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21461:135:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21584:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21589:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21468:115:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21468:128:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21461:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21605:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21712:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "21620:91:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21620:98:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "21609:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21727:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "21741:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "21731:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21817:350:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "21831:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "21858:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "21852:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21852:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "21835:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "21878:154:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "22013:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "22028:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "21885:127:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21885:147:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "21878:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "22045:112:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "22150:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "22055:94:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22055:102:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22045:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "21779:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21782:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21776:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21776:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "21790:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21792:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "21801:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21804:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21797:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21797:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "21792:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "21761:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "21763:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "21772:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "21767:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "21757:410:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22176:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "22183:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22176:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21311:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21318:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21327:3:8",
                "type": ""
              }
            ],
            "src": "21124:1068:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22430:309:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22440:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22452:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22463:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22448:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22448:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22440:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22487:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22498:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22483:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22483:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22506:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22512:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22502:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22502:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22476:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22476:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22476:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22532:200:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22718:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22727:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22540:177:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22540:192:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22532:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22402:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22414:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22425:4:8",
                "type": ""
              }
            ],
            "src": "22198:541:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22845:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22891:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "22893:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22893:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22893:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "22866:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22875:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22862:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22862:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22887:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "22858:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22858:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "22855:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "22984:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22999:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23013:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23003:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23028:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23063:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23074:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23059:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23059:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23083:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "23038:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23038:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "23028:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23111:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23126:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23140:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23130:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23156:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23191:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23202:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23187:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23187:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23211:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "23166:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23166:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "23156:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23239:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23254:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23268:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23258:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23284:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23319:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23330:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23315:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23315:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23339:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "23294:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23294:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "23284:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22799:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "22810:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22822:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22830:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "22838:6:8",
                "type": ""
              }
            ],
            "src": "22745:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23487:648:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23534:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "23536:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23536:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23536:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23508:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23517:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23504:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23504:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23529:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "23500:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23500:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "23497:120:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23627:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23642:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23656:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23646:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23671:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23706:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23717:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23702:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23702:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23726:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "23681:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23681:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "23671:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23754:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23769:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23783:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23773:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23799:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23834:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23845:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23830:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23830:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23854:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "23809:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23809:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "23799:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23882:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23897:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23911:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23901:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23927:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23962:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23973:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23958:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23958:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23982:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "23937:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23937:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "23927:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "24010:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24025:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24039:2:8",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "24029:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24055:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24090:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "24101:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24086:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24086:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24110:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "24065:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24065:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "24055:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23433:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "23444:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23456:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23464:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "23472:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "23480:6:8",
                "type": ""
              }
            ],
            "src": "23370:765:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24241:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24287:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "24289:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24289:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24289:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24262:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24271:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24258:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24258:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24283:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "24254:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24254:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "24251:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "24380:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24395:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24409:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "24399:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24424:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24459:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "24470:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24455:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24455:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24479:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "24434:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24434:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "24424:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "24507:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24522:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24536:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "24526:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24552:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24587:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "24598:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24583:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24583:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24607:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "24562:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24562:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "24552:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "24635:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24650:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24664:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "24654:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24680:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24715:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "24726:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24711:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24711:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "24735:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "24690:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24690:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "24680:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24195:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "24206:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24218:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24226:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "24234:6:8",
                "type": ""
              }
            ],
            "src": "24141:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24919:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24936:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "24941:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24929:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24929:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24929:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24957:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24976:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24981:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24972:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24972:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "24957:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24891:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "24896:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "24907:11:8",
                "type": ""
              }
            ],
            "src": "24766:226:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25292:860:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25302:110:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "25406:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "25316:89:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25316:96:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "25306:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25421:135:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25544:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25549:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25428:115:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25428:128:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25421:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25565:113:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "25672:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "25580:91:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25580:98:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "25569:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25687:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "25701:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "25691:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25777:350:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "25791:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "25818:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "25812:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25812:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "25795:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "25838:154:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "25973:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "25988:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "25845:127:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25845:147:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "25838:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "26005:112:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "26110:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "26015:94:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26015:102:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26005:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "25739:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25742:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "25736:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25736:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "25750:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "25752:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "25761:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "25764:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "25757:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25757:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "25752:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "25721:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "25723:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "25732:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "25727:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "25717:410:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26136:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "26143:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26136:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "25271:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25278:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25287:3:8",
                "type": ""
              }
            ],
            "src": "25084:1068:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26390:309:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26400:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26412:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26423:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26408:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26408:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26400:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26447:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26458:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26443:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26443:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26466:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26472:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26462:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26462:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26436:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26436:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26436:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26492:200:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "26678:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26687:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26500:177:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26500:192:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26492:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26362:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "26374:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26385:4:8",
                "type": ""
              }
            ],
            "src": "26158:541:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26881:365:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26891:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26903:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26914:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26899:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26899:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26891:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "26972:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26985:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26996:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26981:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26981:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26928:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26928:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26928:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "27053:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27066:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27077:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27062:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27062:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27009:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27009:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27009:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "27135:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27148:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27159:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27144:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27144:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27091:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27091:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27091:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "27211:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27224:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27235:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27220:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27220:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27173:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27173:66:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27173:66:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26829:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "26841:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "26849:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "26857:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "26865:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26876:4:8",
                "type": ""
              }
            ],
            "src": "26705:541:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27318:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "27364:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "27366:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "27366:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "27366:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "27339:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27348:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27335:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27335:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27360:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "27331:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27331:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "27328:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "27457:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "27472:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27486:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "27476:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "27501:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27536:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "27547:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27532:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27532:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "27556:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "27511:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27511:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "27501:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27288:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "27299:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "27311:6:8",
                "type": ""
              }
            ],
            "src": "27252:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27685:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27695:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27707:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27718:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27703:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27703:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27695:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "27775:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27788:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27799:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27784:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27784:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27731:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27731:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27731:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27657:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "27669:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27680:4:8",
                "type": ""
              }
            ],
            "src": "27587:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27843:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27860:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27863:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27853:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27853:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27853:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27957:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27960:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27950:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27950:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27950:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27981:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27984:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "27974:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27974:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27974:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "27815:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28029:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28046:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28049:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28039:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28039:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28039:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28143:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28146:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28136:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28136:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28136:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28167:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28170:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "28160:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28160:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28160:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "28001:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28231:147:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28241:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "28264:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "28246:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28246:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "28241:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28275:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "28298:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "28280:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28280:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "28275:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28309:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "28320:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "28323:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28316:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28316:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "28309:3:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28349:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "28351:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28351:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28351:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "28341:1:8"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "28344:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "28338:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28338:10:8"
                  },
                  "nodeType": "YulIf",
                  "src": "28335:36:8"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "28218:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "28221:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "28227:3:8",
                "type": ""
              }
            ],
            "src": "28187:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28427:190:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28437:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "28464:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "28446:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28446:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "28437:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28560:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "28562:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28562:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28562:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "28485:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28492:66:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "28482:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28482:77:8"
                  },
                  "nodeType": "YulIf",
                  "src": "28479:103:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28591:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "28602:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28609:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28598:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28598:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "28591:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28413:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "28423:3:8",
                "type": ""
              }
            ],
            "src": "28384:233:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28651:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28668:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28671:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28661:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28661:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28661:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28765:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28768:4:8",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28758:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28758:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28758:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28789:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28792:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "28782:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28782:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28782:15:8"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "28623:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28872:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28882:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "28897:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "28891:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28891:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "28882:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "28940:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "28913:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28913:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28913:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "28850:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28858:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28866:5:8",
                "type": ""
              }
            ],
            "src": "28809:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29035:274:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "29081:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "29083:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "29083:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "29083:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "29056:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29065:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29052:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29052:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29077:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "29048:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29048:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "29045:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "29174:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "29189:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29203:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "29193:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "29218:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29264:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "29275:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29260:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29260:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "29284:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "29228:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29228:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "29218:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29005:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "29016:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29028:6:8",
                "type": ""
              }
            ],
            "src": "28958:351:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29441:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29451:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29463:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29474:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29459:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29459:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29451:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "29531:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29544:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29555:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29540:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29540:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29487:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29487:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29487:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "29612:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29625:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29636:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29621:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29621:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29568:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29568:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29568:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29405:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29417:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29425:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29436:4:8",
                "type": ""
              }
            ],
            "src": "29315:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29807:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29817:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29829:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29840:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29825:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29825:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29817:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "29897:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29910:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29921:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29906:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29906:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29853:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29853:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29853:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "29978:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29991:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30002:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29987:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29987:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29934:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29934:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29934:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "30060:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30073:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30084:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30069:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30069:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30016:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30016:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30016:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29763:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "29775:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29783:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29791:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29802:4:8",
                "type": ""
              }
            ],
            "src": "29653:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30141:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30195:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30204:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30207:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "30197:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30197:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30197:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "30164:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "30186:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "30171:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30171:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "30161:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30161:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "30154:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30154:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "30151:60:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30134:5:8",
                "type": ""
              }
            ],
            "src": "30101:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30283:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30293:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "30308:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30302:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30302:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "30293:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30348:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "30324:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30324:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30324:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "30261:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30269:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30277:5:8",
                "type": ""
              }
            ],
            "src": "30223:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30440:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30486:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "30488:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30488:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30488:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "30461:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30470:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30457:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30457:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30482:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "30453:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30453:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "30450:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "30579:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "30594:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30608:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "30598:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "30623:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30666:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "30677:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30662:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30662:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "30686:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "30633:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30633:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "30623:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30410:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "30421:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30433:6:8",
                "type": ""
              }
            ],
            "src": "30366:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30830:34:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30840:18:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "30855:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "30840:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "30802:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "30807:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "30818:11:8",
                "type": ""
              }
            ],
            "src": "30717:147:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30976:8:8",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "30968:6:8",
                "type": ""
              }
            ],
            "src": "30870:114:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31153:235:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31163:90:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31246:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31251:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31170:75:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31170:83:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "31163:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31351:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "31262:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31262:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31262:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31364:18:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31375:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31380:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31371:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31371:11:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "31364:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "31141:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31149:3:8",
                "type": ""
              }
            ],
            "src": "30990:398:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31582:191:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31593:154:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31743:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31600:141:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31600:147:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "31593:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31757:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "31764:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "31757:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "31569:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31578:3:8",
                "type": ""
              }
            ],
            "src": "31394:379:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31875:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31892:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "31897:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31885:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31885:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31885:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31913:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "31932:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31937:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31928:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31928:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "31913:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "31847:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "31852:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "31863:11:8",
                "type": ""
              }
            ],
            "src": "31779:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32060:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "32082:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32090:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32078:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32078:14:8"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32094:22:8",
                        "type": "",
                        "value": "Failed to send Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32071:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32071:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32071:46:8"
                }
              ]
            },
            "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "32052:6:8",
                "type": ""
              }
            ],
            "src": "31954:170:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32276:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32286:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32352:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32357:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32293:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32293:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "32286:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32458:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                      "nodeType": "YulIdentifier",
                      "src": "32369:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32369:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32369:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32471:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32482:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32487:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32478:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32478:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "32471:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "32264:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "32272:3:8",
                "type": ""
              }
            ],
            "src": "32130:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32673:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32683:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32695:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32706:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32691:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32691:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32683:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32730:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32741:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32726:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "32749:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32755:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "32745:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32745:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32719:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32719:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32719:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32775:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "32909:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32783:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32783:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32775:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32653:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32668:4:8",
                "type": ""
              }
            ],
            "src": "32502:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33109:371:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33119:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33131:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33142:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33127:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33127:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33119:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "33200:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33213:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33224:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33209:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33209:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33156:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33156:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33156:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "33281:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33294:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33305:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33290:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33290:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33237:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33237:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33237:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "33363:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33376:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33387:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33372:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33372:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33319:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33319:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33319:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "33445:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33458:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33469:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33454:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33454:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33401:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33401:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33401:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33057:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "33069:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "33077:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "33085:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "33093:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33104:4:8",
                "type": ""
              }
            ],
            "src": "32927:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33668:371:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33678:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33690:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33701:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33686:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33686:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33678:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "33759:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33772:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33783:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33768:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33768:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33715:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33715:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33715:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "33840:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33853:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33864:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33849:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33849:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33796:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33796:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33796:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "33922:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33935:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33946:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33931:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33931:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33878:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33878:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33878:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "34004:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34017:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34028:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34013:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34013:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33960:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33960:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33960:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33616:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "33628:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "33636:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "33644:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "33652:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33663:4:8",
                "type": ""
              }
            ],
            "src": "33486:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34255:454:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "34265:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34277:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34288:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34273:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34273:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34265:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "34346:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34359:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34370:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34355:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34355:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34302:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34302:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34302:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "34427:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34440:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34451:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34436:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34436:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34383:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34383:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34383:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "34509:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34522:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34533:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34518:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34518:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34465:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34465:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34465:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "34591:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34604:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34615:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34600:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34600:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34547:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34547:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34547:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "34673:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34686:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34697:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34682:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34682:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "34629:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34629:73:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34629:73:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34195:9:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "34207:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "34215:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "34223:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "34231:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "34239:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34250:4:8",
                "type": ""
              }
            ],
            "src": "34045:664:8"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Dex.TradeTokensForTokensForCall -> struct Dex.TradeTokensForTokensForCall\n    function abi_encode_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xe0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForTokensForCall[] -> struct Dex.TradeTokensForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // struct Dex.TradeTokensForTokensForCall[] -> struct Dex.TradeTokensForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeTokensForEthForCall -> struct Dex.TradeTokensForEthForCall\n    function abi_encode_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForEthAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForEthForCall[] -> struct Dex.TradeTokensForEthForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeEthForTokensForCall -> struct Dex.TradeEthForTokensForCall\n    function abi_encode_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingEthAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeEthForTokensForCall[] -> struct Dex.TradeEthForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Dex.AllTradesOfAccount -> struct Dex.AllTradesOfAccount\n    function abi_encode_t_struct$_AllTradesOfAccount_$2613_memory_ptr_to_t_struct$_AllTradesOfAccount_$2613_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // tradeTokensForTokensForCall\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tradeTokensForEthForCall\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tradeEthForTokensForCall\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_AllTradesOfAccount_$2613_memory_ptr__to_t_struct$_AllTradesOfAccount_$2613_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_AllTradesOfAccount_$2613_memory_ptr_to_t_struct$_AllTradesOfAccount_$2613_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // struct Dex.TradeEthForTokensForCall[] -> struct Dex.TradeEthForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // struct Dex.TradeTokensForEthForCall[] -> struct Dex.TradeTokensForEthForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "122:34215:5:-:0;;;2825:43;;;;;;;;;;2853:10;2845:5;;:18;;;;;;;;;;;;;;;;;;122:34215;;;;;;",
  "deployedSourceMap": "122:34215:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31206:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2417:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;26636:1361;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17217:1246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2329:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;31513:2822;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29851:1351;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20329:595;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19127:705;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5429:2631;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15556:980;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2872:2553;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8064:986;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28287:1348;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2499:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13414:1430;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21436:778;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2710:28;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31206:91;31250:16;31281:11;31274:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31206:91;:::o;2417:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;26636:1361::-;26697:36;26742:19;26777:6;26772:199;26793:11;:18;;;;26789:1;:22;26772:199;;;26831:6;26826:139;26847:34;:50;26882:11;26894:1;26882:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26847:50;;;;;;;;;;;;;;;:57;;;;26843:1;:61;26826:139;;;26955:1;26938:14;:18;;;;:::i;:::-;26921:35;;26906:3;;;;;:::i;:::-;;;;26826:139;;;;26813:3;;;;;:::i;:::-;;;;26772:199;;;;26977:66;27080:14;27046:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;26977:118;;27102:21;27139:6;27134:816;27155:11;:18;;;;27151:1;:22;27134:816;;;27193:6;27188:756;27209:34;:50;27244:11;27256:1;27244:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27209:50;;;;;;;;;;;;;;;:57;;;;27205:1;:61;27188:756;;;27283:48;27334:34;:50;27369:11;27381:1;27369:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27334:50;;;;;;;;;;;;;;;27385:1;27334:53;;;;;;;;:::i;:::-;;;;;;;;;;;;27283:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27397:62;27462:335;;;;;;;;27502:11;27514:1;27502:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27462:335;;;;;;27528:1;27462:335;;;;27541:20;:40;;;27462:335;;;;;;27593:20;:39;;;27462:335;;;;27644:20;:43;;;27462:335;;;;;;27699:20;:42;;;27462:335;;;;27753:20;:34;;;27462:335;;;;;27397:400;;27858:27;27808:29;27838:16;27808:47;;;;;;;;:::i;:::-;;;;;;;:77;;;;27934:1;27915:16;:20;;;;:::i;:::-;27896:39;;27273:671;;27268:3;;;;;:::i;:::-;;;;27188:756;;;;27175:3;;;;;:::i;:::-;;;;27134:816;;;;27963:29;27956:36;;;;;26636:1361;:::o;17217:1246::-;17377:4;17306:75;;:31;:39;17338:6;17306:39;;;;;;;;;;;;;;;17346:12;17306:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;17298:84;;;;;;17389:21;17419:31;:39;17451:6;17419:39;;;;;;;;;;;;;;;17459:12;17419:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;17389:107;;17551:31;:39;17583:6;17551:39;;;;;;;;;;;;;;;17591:12;17551:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;17510:15;:25;;;17536:10;17510:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:116;;17502:125;;;;;;17698:31;:39;17730:6;17698:39;;;;;;;;;;;;;;;17738:12;17698:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;17642:15;:25;;;17668:10;17688:4;17642:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:131;;17634:140;;;;;;17781:15;:28;;;17810:10;17822:6;17830:31;:39;17862:6;17830:39;;;;;;;;;;;;;;;17870:12;17830:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;17781:125;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17914:9;17936:10;17928:24;;17960:31;:39;17992:6;17960:39;;;;;;;;;;;;;;;18000:12;17960:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;17928:107;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17913:122;;;18049:4;18041:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;18155:4;18085:31;:39;18117:6;18085:39;;;;;;;;;;;;;;;18125:12;18085:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;18171:287;18201:6;18215:31;:39;18247:6;18215:39;;;;;;;;;;;;;;;18255:12;18215:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;18293:31;:39;18325:6;18293:39;;;;;;;;;;;;;;;18333:12;18293:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;18377:31;:39;18409:6;18377:39;;;;;;;;;;;;;;;18417:12;18377:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;18171:287;;;;;;;;;:::i;:::-;;;;;;;;17292:1171;;17217:1246;;:::o;2329:84::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;31513:2822::-;31580:25;;:::i;:::-;31613:44;;:::i;:::-;31747:34;:42;31782:6;31747:42;;;;;;;;;;;;;;;:49;;;;31713:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;31664:18;:46;;:133;;;;31804:21;31841:6;31836:722;31857:34;:42;31892:6;31857:42;;;;;;;;;;;;;;;:49;;;;31853:1;:53;31836:722;;;31921:48;31972:34;:42;32007:6;31972:42;;;;;;;;;;;;;;;32015:1;31972:45;;;;;;;;:::i;:::-;;;;;;;;;;;;31921:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32025:62;32090:311;;;;;;;;32128:6;32090:311;;;;;;32144:1;32090:311;;;;32155:20;:40;;;32090:311;;;;;;32205:20;:39;;;32090:311;;;;32254:20;:43;;;32090:311;;;;;;32307:20;:42;;;32090:311;;;;32359:20;:34;;;32090:311;;;;;32025:376;;32477:27;32410:18;:46;;;32457:16;32410:64;;;;;;;;:::i;:::-;;;;;;;:94;;;;32550:1;32531:16;:20;;;;:::i;:::-;32512:39;;31913:645;;31908:3;;;;;:::i;:::-;;;;31836:722;;;;32641:31;:39;32673:6;32641:39;;;;;;;;;;;;;;;:46;;;;32610:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;32564:18;:43;;:124;;;;32714:1;32695:20;;32727:6;32722:628;32743:31;:39;32775:6;32743:39;;;;;;;;;;;;;;;:46;;;;32739:1;:50;32722:628;;;32804:42;32849:31;:39;32881:6;32849:39;;;;;;;;;;;;;;;32889:1;32849:42;;;;;;;;:::i;:::-;;;;;;;;;;;;32804:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32899:56;32958:241;;;;;;;;32993:6;32958:241;;;;;;33009:1;32958:241;;;;33020:17;:37;;;32958:241;;;;;;33067:17;:36;;;32958:241;;;;33113:17;:37;;;32958:241;;;;33160:17;:31;;;32958:241;;;;;32899:300;;33272:24;33208:18;:43;;;33252:16;33208:61;;;;;;;;:::i;:::-;;;;;;;:88;;;;33342:1;33323:16;:20;;;;:::i;:::-;33304:39;;32796:554;;32791:3;;;;;:::i;:::-;;;;32722:628;;;;33587:31;:39;33619:6;33587:39;;;;;;;;;;;;;;;:46;;;;33556:78;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;33510:18;:43;;:124;;;;33660:1;33641:20;;33673:6;33668:631;33689:31;:39;33721:6;33689:39;;;;;;;;;;;;;;;:46;;;;33685:1;:50;33668:631;;;33750:42;33795:31;:39;33827:6;33795:39;;;;;;;;;;;;;;;33835:1;33795:42;;;;;;;;:::i;:::-;;;;;;;;;;;;33750:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33845:56;33904:244;;;;;;;;33939:6;33904:244;;;;;;33955:1;33904:244;;;;33966:17;:34;;;33904:244;;;;34010:17;:40;;;33904:244;;;;;;34060:17;:39;;;33904:244;;;;34109:17;:31;;;33904:244;;;;;33845:303;;34221:24;34157:18;:43;;;34201:16;34157:61;;;;;;;;:::i;:::-;;;;;;;:88;;;;34291:1;34272:16;:20;;;;:::i;:::-;34253:39;;33742:557;;33737:3;;;;;:::i;:::-;;;;33668:631;;;;34312:18;34305:25;;;;31513:2822;;;:::o;29851:1351::-;29909:33;29951:19;29986:6;29981:196;30002:11;:18;;;;29998:1;:22;29981:196;;;30040:6;30035:136;30056:31;:47;30088:11;30100:1;30088:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30056:47;;;;;;;;;;;;;;;:54;;;;30052:1;:58;30035:136;;;30161:1;30144:14;:18;;;;:::i;:::-;30127:35;;30112:3;;;;;:::i;:::-;;;;30035:136;;;;30022:3;;;;;:::i;:::-;;;;29981:196;;;;30183:60;30277:14;30246:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;30183:109;;30299:21;30336:6;30331:827;30352:11;:18;;;;30348:1;:22;30331:827;;;30442:4;30389:57;;:15;:31;30405:11;30417:1;30405:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30389:31;;;;;;;;;;;;;;;:49;;;;;;;;;;;;:57;;;30385:767;;30463:6;30458:686;30479:31;:47;30511:11;30523:1;30511:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30479:47;;;;;;;;;;;;;;;:54;;;;30475:1;:58;30458:686;;;30552:42;30597:31;:47;30629:11;30641:1;30629:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30597:47;;;;;;;;;;;;;;;30645:1;30597:50;;;;;;;;:::i;:::-;;;;;;;;;;;;30552:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30659:56;30718:280;;;;;;;;30757:11;30769:1;30757:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30718:280;;;;;;30785:1;30718:280;;;;30800:17;:34;;;30718:280;;;;30848:17;:40;;;30718:280;;;;;;30902:17;:39;;;30718:280;;;;30955:17;:31;;;30718:280;;;;;30659:339;;31058:24;31011:26;31038:16;31011:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;31132:1;31113:16;:20;;;;:::i;:::-;31094:39;;30540:604;;30535:3;;;;;:::i;:::-;;;;30458:686;;;;30385:767;30372:3;;;;;:::i;:::-;;;;30331:827;;;;31171:26;31164:33;;;;;29851:1351;:::o;20329:595::-;20436:6;20422:20;;:10;:20;;;20414:29;;;;;;20528:5;20457:76;;:31;:39;20489:6;20457:39;;;;;;;;;;;;;;;20497:12;20457:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:76;;;20449:85;;;;;;20611:4;20541:31;:39;20573:6;20541:39;;;;;;;;;;;;;;;20581:12;20541:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;20627:292;20665:6;20679:31;:39;20711:6;20679:39;;;;;;;;;;;;;;;20719:12;20679:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;20760:31;:39;20792:6;20760:39;;;;;;;;;;;;;;;20800:12;20760:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;20840:31;:39;20872:6;20840:39;;;;;;;;;;;;;;;20880:12;20840:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;20627:292;;;;;;;;;:::i;:::-;;;;;;;;20329:595;;:::o;19127:705::-;19237:6;19223:20;;:10;:20;;;19215:29;;;;;;19332:5;19258:79;;:34;:42;19293:6;19258:42;;;;;;;;;;;;;;;19301:12;19258:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;;;;;;;;;;:79;;;19250:88;;;;;;19418:4;19345:34;:42;19380:6;19345:42;;;;;;;;;;;;;;;19388:12;19345:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;19434:393;19475:6;19489:34;:42;19524:6;19489:42;;;;;;;;;;;;;;;19532:12;19489:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;19573:34;:42;19608:6;19573:42;;;;;;;;;;;;;;;19616:12;19573:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;19656:34;:42;19691:6;19656:42;;;;;;;;;;;;;;;19699:12;19656:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;19743:34;:42;19778:6;19743:42;;;;;;;;;;;;;;;19786:12;19743:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;19434:393;;;;;;;;;;:::i;:::-;;;;;;;;19127:705;;:::o;5429:2631::-;5575:18;5602:19;5575:47;;5629:27;5659:18;5629:48;;5684:63;5756:34;:46;5791:10;5756:46;;;;;;;;;;;;;;;5684:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5809:57;5875:31;:43;5907:10;5875:43;;;;;;;;;;;;;;;5809:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5981:4;5929:56;;:15;:27;5945:10;5929:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:56;;;5925:450;;6000:6;5995:374;6016:33;:40;6012:1;:44;5995:374;;;6137:19;6077:79;;:33;6111:1;6077:36;;;;;;;;:::i;:::-;;;;;;;;:56;;;:79;;;:154;;;;;6226:5;6172:59;;:33;6206:1;6172:36;;;;;;;;:::i;:::-;;;;;;;;:50;;;:59;;;6077:154;6073:288;;;6328:22;6270:33;6304:1;6270:36;;;;;;;;:::i;:::-;;;;;;;;:55;;;:80;;;;:::i;:::-;6245:105;;6073:288;6058:3;;;;;:::i;:::-;;;;5995:374;;;;5925:450;6434:4;6385:53;;:15;:27;6401:10;6385:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:53;;;6381:435;;6453:6;6448:362;6469:30;:37;6465:1;:41;6448:362;;;6584:19;6527:76;;:30;6558:1;6527:33;;;;;;;;:::i;:::-;;;;;;;;:53;;;:76;;;:148;;;;;6670:5;6619:56;;:30;6650:1;6619:33;;;;;;;;:::i;:::-;;;;;;;;:47;;;:56;;;6527:148;6523:279;;;6769:22;6714:30;6745:1;6714:33;;;;;;;;:::i;:::-;;;;;;;;:52;;;:77;;;;:::i;:::-;6689:102;;6523:279;6508:3;;;;;:::i;:::-;;;;6448:362;;;;6381:435;7177:22;7124:12;:22;;;7147:10;7167:4;7124:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;7116:84;;;;;;7252:22;7214:12;:22;;;7237:10;7214:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;7206:69;;;;;;7282:31;:43;7314:10;7282:43;;;;;;;;;;;;;;;7338:124;;;;;;;;7365:19;7338:124;;;;;;7394:18;7338:124;;;;7422:19;7338:124;;;;7451:5;7338:124;;;;;7282:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7475:134;7513:10;7531:19;7558:18;7584:19;7475:134;;;;;;;;;:::i;:::-;;;;;;;;7672:5;7620:57;;:15;:27;7636:10;7620:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;7738:5;7689:54;;:15;:27;7705:10;7689:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;7620:123;:189;;;;;7804:5;7755:54;;:15;:27;7771:10;7755:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;7620:189;7616:440;;;7823:11;7840:10;7823:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7911:4;7863:15;:27;7879:10;7863:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;7616:440;;;7982:5;7933:54;;:15;:27;7949:10;7933:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;7929:127;;8045:4;7997:15;:27;8013:10;7997:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;7929:127;7616:440;5568:2492;;;;5429:2631;;;:::o;15556:980::-;15716:4;15645:75;;:31;:39;15677:6;15645:39;;;;;;;;;;;;;;;15685:12;15645:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;15637:84;;;;;;15728:18;15755:31;:39;15787:6;15755:39;;;;;;;;;;;;;;;15795:12;15755:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;15728:101;;15835:12;:25;;;15861:6;15869:10;15881:31;:39;15913:6;15881:39;;;;;;;;;;;;;;;15921:12;15881:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;15835:119;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15982:31;:39;16014:6;15982:39;;;;;;;;;;;;;;;16022:12;15982:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;15969:9;:86;15961:95;;;;;;16064:9;16078:6;:11;;16097:9;16078:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16063:48;;;16125:4;16117:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;16231:4;16161:31;:39;16193:6;16161:39;;;;;;;;;;;;;;;16201:12;16161:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;16247:284;16277:6;16291:31;:39;16323:6;16291:39;;;;;;;;;;;;;;;16331:12;16291:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;16372:31;:39;16404:6;16372:39;;;;;;;;;;;;;;;16412:12;16372:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;16452:31;:39;16484:6;16452:39;;;;;;;;;;;;;;;16492:12;16452:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;16247:284;;;;;;;;;:::i;:::-;;;;;;;;15631:905;;15556:980;;:::o;2872:2553::-;3064:18;3091:19;3064:47;;3118:27;3148:18;3118:48;;3172:63;3244:34;:46;3279:10;3244:46;;;;;;;;;;;;;;;3172:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3297:57;3363:31;:43;3395:10;3363:43;;;;;;;;;;;;;;;3297:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:4;3417:56;;:15;:27;3433:10;3417:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:56;;;3413:450;;3488:6;3483:374;3504:33;:40;3500:1;:44;3483:374;;;3625:19;3565:79;;:33;3599:1;3565:36;;;;;;;;:::i;:::-;;;;;;;;:56;;;:79;;;:154;;;;;3714:5;3660:59;;:33;3694:1;3660:36;;;;;;;;:::i;:::-;;;;;;;;:50;;;:59;;;3565:154;3561:288;;;3816:22;3758:33;3792:1;3758:36;;;;;;;;:::i;:::-;;;;;;;;:55;;;:80;;;;:::i;:::-;3733:105;;3561:288;3546:3;;;;;:::i;:::-;;;;3483:374;;;;3413:450;3922:4;3873:53;;:15;:27;3889:10;3873:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:53;;;3869:435;;3941:6;3936:362;3957:30;:37;3953:1;:41;3936:362;;;4072:19;4015:76;;:30;4046:1;4015:33;;;;;;;;:::i;:::-;;;;;;;;:53;;;:76;;;:148;;;;;4158:5;4107:56;;:30;4138:1;4107:33;;;;;;;;:::i;:::-;;;;;;;;:47;;;:56;;;4015:148;4011:279;;;4257:22;4202:30;4233:1;4202:33;;;;;;;;:::i;:::-;;;;;;;;:52;;;:77;;;;:::i;:::-;4177:102;;4011:279;3996:3;;;;;:::i;:::-;;;;3936:362;;;;3869:435;4371:22;4318:12;:22;;;4341:10;4361:4;4318:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;4310:84;;;;;;4446:22;4408:12;:22;;;4431:10;4408:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4400:69;;;;;;4563:34;:46;4598:10;4563:46;;;;;;;;;;;;;;;4622:161;;;;;;;;4652:19;4622:161;;;;;;4681:18;4622:161;;;;4709:22;4622:161;;;;;;4741:21;4622:161;;;;4772:5;4622:161;;;;;4563:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4796:169;4837:10;4855:19;4882:18;4908:22;4938:21;4796:169;;;;;;;;;;:::i;:::-;;;;;;;;5028:5;4976:57;;:15;:27;4992:10;4976:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;5094:5;5045:54;;:15;:27;5061:10;5045:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;4976:123;:189;;;;;5160:5;5111:54;;:15;:27;5127:10;5111:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;4976:189;4972:449;;;5179:11;5196:10;5179:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5270:4;5219:15;:27;5235:10;5219:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;4972:449;;;5344:5;5292:57;;:15;:27;5308:10;5292:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;5288:133;;5410:4;5359:15;:27;5375:10;5359:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;5288:133;4972:449;3057:2368;;;;2872:2553;;;;:::o;8064:986::-;8242:16;8229:9;:29;8221:38;;;;;;8266:31;:43;8298:10;8266:43;;;;;;;;;;;;;;;8322:127;;;;;;;;8349:16;8322:127;;;;8375:22;8322:127;;;;;;8407:21;8322:127;;;;8438:5;8322:127;;;;;8266:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8462:137;8500:10;8518:16;8542:22;8572:21;8462:137;;;;;;;;;:::i;:::-;;;;;;;;8662:5;8610:57;;:15;:27;8626:10;8610:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;8728:5;8679:54;;:15;:27;8695:10;8679:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;8610:123;:189;;;;;8794:5;8745:54;;:15;:27;8761:10;8745:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;8610:189;8606:440;;;8813:11;8830:10;8813:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8901:4;8853:15;:27;8869:10;8853:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;8606:440;;;8972:5;8923:54;;:15;:27;8939:10;8923:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;8919:127;;9035:4;8987:15;:27;9003:10;8987:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;8919:127;8606:440;8064:986;;;:::o;28287:1348::-;28345:33;28387:19;28422:6;28417:196;28438:11;:18;;;;28434:1;:22;28417:196;;;28476:6;28471:136;28492:31;:47;28524:11;28536:1;28524:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28492:47;;;;;;;;;;;;;;;:54;;;;28488:1;:58;28471:136;;;28597:1;28580:14;:18;;;;:::i;:::-;28563:35;;28548:3;;;;;:::i;:::-;;;;28471:136;;;;28458:3;;;;;:::i;:::-;;;;28417:196;;;;28619:60;28713:14;28682:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;28619:109;;28735:21;28772:6;28767:824;28788:11;:18;;;;28784:1;:22;28767:824;;;28878:4;28825:57;;:15;:31;28841:11;28853:1;28841:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28825:31;;;;;;;;;;;;;;;:49;;;;;;;;;;;;:57;;;28821:764;;28899:6;28894:683;28915:31;:47;28947:11;28959:1;28947:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28915:47;;;;;;;;;;;;;;;:54;;;;28911:1;:58;28894:683;;;28988:42;29033:31;:47;29065:11;29077:1;29065:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29033:47;;;;;;;;;;;;;;;29081:1;29033:50;;;;;;;;:::i;:::-;;;;;;;;;;;;28988:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29095:56;29154:277;;;;;;;;29193:11;29205:1;29193:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29154:277;;;;;;29221:1;29154:277;;;;29236:17;:37;;;29154:277;;;;;;29287:17;:36;;;29154:277;;;;29337:17;:37;;;29154:277;;;;29388:17;:31;;;29154:277;;;;;29095:336;;29491:24;29444:26;29471:16;29444:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;29565:1;29546:16;:20;;;;:::i;:::-;29527:39;;28976:601;;28971:3;;;;;:::i;:::-;;;;28894:683;;;;28821:764;28808:3;;;;;:::i;:::-;;;;28767:824;;;;29604:26;29597:33;;;;;28287:1348;:::o;2499:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13414:1430::-;13578:4;13504:78;;:34;:42;13539:6;13504:42;;;;;;;;;;;;;;;13547:12;13504:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;;;;;;;;;;:78;;;13496:87;;;;;;13590:18;13617:34;:42;13652:6;13617:42;;;;;;;;;;;;;;;13660:12;13617:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;13590:104;;13700:12;:25;;;13726:6;13734:10;13746:34;:42;13781:6;13746:42;;;;;;;;;;;;;;;13789:12;13746:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;13700:122;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13829:21;13859:34;:42;13894:6;13859:42;;;;;;;;;;;;;;;13902:12;13859:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;13829:110;;13995:34;:42;14030:6;13995:42;;;;;;;;;;;;;;;14038:12;13995:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;13954:15;:25;;;13980:10;13954:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;;13946:128;;;;;;14144:34;:42;14179:6;14144:42;;;;;;;;;;;;;;;14187:12;14144:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;14088:15;:25;;;14114:10;14134:4;14088:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:134;;14080:143;;;;;;14230:15;:28;;;14259:10;14271:6;14279:34;:42;14314:6;14279:42;;;;;;;;;;;;;;;14322:12;14279:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;14230:128;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14438:4;14365:34;:42;14400:6;14365:42;;;;;;;;;;;;;;;14408:12;14365:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;14454:385;14487:6;14501:34;:42;14536:6;14501:42;;;;;;;;;;;;;;;14544:12;14501:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;14585:34;:42;14620:6;14585:42;;;;;;;;;;;;;;;14628:12;14585:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;14668:34;:42;14703:6;14668:42;;;;;;;;;;;;;;;14711:12;14668:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;14755:34;:42;14790:6;14755:42;;;;;;;;;;;;;;;14798:12;14755:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;14454:385;;;;;;;;;;:::i;:::-;;;;;;;;13490:1354;;13414:1430;;:::o;21436:778::-;21551:6;21537:20;;:10;:20;;;21529:29;;;;;;21643:5;21572:76;;:31;:39;21604:6;21572:39;;;;;;;;;;;;;;;21612:12;21572:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:76;;;21564:85;;;;;;21726:4;21656:31;:39;21688:6;21656:39;;;;;;;;;;;;;;;21696:12;21656:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;21738:9;21760:10;21752:24;;21784:31;:39;21816:6;21784:39;;;;;;;;;;;;;;;21824:12;21784:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;21752:107;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21737:122;;;21873:4;21865:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;21914:295;21952:6;21966:31;:39;21998:6;21966:39;;;;;;;;;;;;;;;22006:12;21966:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;22044:31;:39;22076:6;22044:39;;;;;;;;;;;;;;;22084:12;22044:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;22128:31;:39;22160:6;22128:39;;;;;;;;;;;;;;;22168:12;22128:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;21914:295;;;;;;;;;:::i;:::-;;;;;;;;21523:691;21436:778;;:::o;2710:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:114:8:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2335:117::-;2444:1;2441;2434:12;2581:122;2654:24;2672:5;2654:24;:::i;:::-;2647:5;2644:35;2634:63;;2693:1;2690;2683:12;2634:63;2581:122;:::o;2709:139::-;2755:5;2793:6;2780:20;2771:29;;2809:33;2836:5;2809:33;:::i;:::-;2709:139;;;;:::o;2854:77::-;2891:7;2920:5;2909:16;;2854:77;;;:::o;2937:122::-;3010:24;3028:5;3010:24;:::i;:::-;3003:5;3000:35;2990:63;;3049:1;3046;3039:12;2990:63;2937:122;:::o;3065:139::-;3111:5;3149:6;3136:20;3127:29;;3165:33;3192:5;3165:33;:::i;:::-;3065:139;;;;:::o;3210:474::-;3278:6;3286;3335:2;3323:9;3314:7;3310:23;3306:32;3303:119;;;3341:79;;:::i;:::-;3303:119;3461:1;3486:53;3531:7;3522:6;3511:9;3507:22;3486:53;:::i;:::-;3476:63;;3432:117;3588:2;3614:53;3659:7;3650:6;3639:9;3635:22;3614:53;:::i;:::-;3604:63;;3559:118;3210:474;;;;;:::o;3690:118::-;3777:24;3795:5;3777:24;:::i;:::-;3772:3;3765:37;3690:118;;:::o;3814:::-;3901:24;3919:5;3901:24;:::i;:::-;3896:3;3889:37;3814:118;;:::o;3938:90::-;3972:7;4015:5;4008:13;4001:21;3990:32;;3938:90;;;:::o;4034:109::-;4115:21;4130:5;4115:21;:::i;:::-;4110:3;4103:34;4034:109;;:::o;4149:541::-;4320:4;4358:3;4347:9;4343:19;4335:27;;4372:71;4440:1;4429:9;4425:17;4416:6;4372:71;:::i;:::-;4453:72;4521:2;4510:9;4506:18;4497:6;4453:72;:::i;:::-;4535;4603:2;4592:9;4588:18;4579:6;4535:72;:::i;:::-;4617:66;4679:2;4668:9;4664:18;4655:6;4617:66;:::i;:::-;4149:541;;;;;;;:::o;4696:159::-;4808:6;4842:5;4836:12;4826:22;;4696:159;;;:::o;4861:229::-;5005:11;5039:6;5034:3;5027:19;5079:4;5074:3;5070:14;5055:29;;4861:229;;;;:::o;5096:177::-;5208:4;5231:3;5223:11;;5261:4;5256:3;5252:14;5244:22;;5096:177;;;:::o;5279:108::-;5356:24;5374:5;5356:24;:::i;:::-;5351:3;5344:37;5279:108;;:::o;5393:99::-;5464:21;5479:5;5464:21;:::i;:::-;5459:3;5452:34;5393:99;;:::o;5586:1493::-;5763:4;5758:3;5754:14;5852:4;5845:5;5841:16;5835:23;5871:63;5928:4;5923:3;5919:14;5905:12;5871:63;:::i;:::-;5778:166;6043:4;6036:5;6032:16;6026:23;6062:63;6119:4;6114:3;6110:14;6096:12;6062:63;:::i;:::-;5954:181;6232:4;6225:5;6221:16;6215:23;6251:63;6308:4;6303:3;6299:14;6285:12;6251:63;:::i;:::-;6145:179;6420:4;6413:5;6409:16;6403:23;6439:63;6496:4;6491:3;6487:14;6473:12;6439:63;:::i;:::-;6334:178;6612:4;6605:5;6601:16;6595:23;6631:63;6688:4;6683:3;6679:14;6665:12;6631:63;:::i;:::-;6522:182;6803:4;6796:5;6792:16;6786:23;6822:63;6879:4;6874:3;6870:14;6856:12;6822:63;:::i;:::-;6714:181;6986:4;6979:5;6975:16;6969:23;7005:57;7056:4;7051:3;7047:14;7033:12;7005:57;:::i;:::-;6905:167;5732:1347;5586:1493;;:::o;7085:359::-;7244:10;7265:136;7397:3;7389:6;7265:136;:::i;:::-;7433:4;7428:3;7424:14;7410:28;;7085:359;;;;:::o;7450:158::-;7565:4;7597;7592:3;7588:14;7580:22;;7450:158;;;:::o;7706:1092::-;7915:3;7944:99;8037:5;7944:99;:::i;:::-;8059:131;8183:6;8178:3;8059:131;:::i;:::-;8052:138;;8214:101;8309:5;8214:101;:::i;:::-;8338:7;8369:1;8354:419;8379:6;8376:1;8373:13;8354:419;;;8455:6;8449:13;8482:153;8631:3;8616:13;8482:153;:::i;:::-;8475:160;;8658:105;8756:6;8658:105;:::i;:::-;8648:115;;8414:359;8401:1;8398;8394:9;8389:14;;8354:419;;;8358:14;8789:3;8782:10;;7920:878;;;7706:1092;;;;:::o;8804:553::-;9037:4;9075:2;9064:9;9060:18;9052:26;;9124:9;9118:4;9114:20;9110:1;9099:9;9095:17;9088:47;9152:198;9345:4;9336:6;9152:198;:::i;:::-;9144:206;;8804:553;;;;:::o;9363:652::-;9562:4;9600:3;9589:9;9585:19;9577:27;;9614:71;9682:1;9671:9;9667:17;9658:6;9614:71;:::i;:::-;9695:72;9763:2;9752:9;9748:18;9739:6;9695:72;:::i;:::-;9777;9845:2;9834:9;9830:18;9821:6;9777:72;:::i;:::-;9859;9927:2;9916:9;9912:18;9903:6;9859:72;:::i;:::-;9941:67;10003:3;9992:9;9988:19;9979:6;9941:67;:::i;:::-;9363:652;;;;;;;;:::o;10021:329::-;10080:6;10129:2;10117:9;10108:7;10104:23;10100:32;10097:119;;;10135:79;;:::i;:::-;10097:119;10255:1;10280:53;10325:7;10316:6;10305:9;10301:22;10280:53;:::i;:::-;10270:63;;10226:117;10021:329;;;;:::o;10356:219::-;10490:11;10524:6;10519:3;10512:19;10564:4;10559:3;10555:14;10540:29;;10356:219;;;;:::o;10673:1072::-;10872:3;10901:99;10994:5;10901:99;:::i;:::-;11016:121;11130:6;11125:3;11016:121;:::i;:::-;11009:128;;11161:101;11256:5;11161:101;:::i;:::-;11285:7;11316:1;11301:419;11326:6;11323:1;11320:13;11301:419;;;11402:6;11396:13;11429:153;11578:3;11563:13;11429:153;:::i;:::-;11422:160;;11605:105;11703:6;11605:105;:::i;:::-;11595:115;;11361:359;11348:1;11345;11341:9;11336:14;;11301:419;;;11305:14;11736:3;11729:10;;10877:868;;;10673:1072;;;;:::o;11751:156::-;11860:6;11894:5;11888:12;11878:22;;11751:156;;;:::o;11913:216::-;12044:11;12078:6;12073:3;12066:19;12118:4;12113:3;12109:14;12094:29;;11913:216;;;;:::o;12135:174::-;12244:4;12267:3;12259:11;;12297:4;12292:3;12288:14;12280:22;;12135:174;;;:::o;12397:1293::-;12568:4;12563:3;12559:14;12657:4;12650:5;12646:16;12640:23;12676:63;12733:4;12728:3;12724:14;12710:12;12676:63;:::i;:::-;12583:166;12848:4;12841:5;12837:16;12831:23;12867:63;12924:4;12919:3;12915:14;12901:12;12867:63;:::i;:::-;12759:181;13037:4;13030:5;13026:16;13020:23;13056:63;13113:4;13108:3;13104:14;13090:12;13056:63;:::i;:::-;12950:179;13225:4;13218:5;13214:16;13208:23;13244:63;13301:4;13296:3;13292:14;13278:12;13244:63;:::i;:::-;13139:178;13414:4;13407:5;13403:16;13397:23;13433:63;13490:4;13485:3;13481:14;13467:12;13433:63;:::i;:::-;13327:179;13597:4;13590:5;13586:16;13580:23;13616:57;13667:4;13662:3;13658:14;13644:12;13616:57;:::i;:::-;13516:167;12537:1153;12397:1293;;:::o;13696:347::-;13849:10;13870:130;13996:3;13988:6;13870:130;:::i;:::-;14032:4;14027:3;14023:14;14009:28;;13696:347;;;;:::o;14049:155::-;14161:4;14193;14188:3;14184:14;14176:22;;14049:155;;;:::o;14296:1048::-;14489:3;14518:96;14608:5;14518:96;:::i;:::-;14630:118;14741:6;14736:3;14630:118;:::i;:::-;14623:125;;14772:98;14864:5;14772:98;:::i;:::-;14893:7;14924:1;14909:410;14934:6;14931:1;14928:13;14909:410;;;15010:6;15004:13;15037:147;15180:3;15165:13;15037:147;:::i;:::-;15030:154;;15207:102;15302:6;15207:102;:::i;:::-;15197:112;;14969:350;14956:1;14953;14949:9;14944:14;;14909:410;;;14913:14;15335:3;15328:10;;14494:850;;;14296:1048;;;;:::o;15350:156::-;15459:6;15493:5;15487:12;15477:22;;15350:156;;;:::o;15512:216::-;15643:11;15677:6;15672:3;15665:19;15717:4;15712:3;15708:14;15693:29;;15512:216;;;;:::o;15734:174::-;15843:4;15866:3;15858:11;;15896:4;15891:3;15887:14;15879:22;;15734:174;;;:::o;15996:1296::-;16167:4;16162:3;16158:14;16256:4;16249:5;16245:16;16239:23;16275:63;16332:4;16327:3;16323:14;16309:12;16275:63;:::i;:::-;16182:166;16447:4;16440:5;16436:16;16430:23;16466:63;16523:4;16518:3;16514:14;16500:12;16466:63;:::i;:::-;16358:181;16633:4;16626:5;16622:16;16616:23;16652:63;16709:4;16704:3;16700:14;16686:12;16652:63;:::i;:::-;16549:176;16825:4;16818:5;16814:16;16808:23;16844:63;16901:4;16896:3;16892:14;16878:12;16844:63;:::i;:::-;16735:182;17016:4;17009:5;17005:16;16999:23;17035:63;17092:4;17087:3;17083:14;17069:12;17035:63;:::i;:::-;16927:181;17199:4;17192:5;17188:16;17182:23;17218:57;17269:4;17264:3;17260:14;17246:12;17218:57;:::i;:::-;17118:167;16136:1156;15996:1296;;:::o;17298:347::-;17451:10;17472:130;17598:3;17590:6;17472:130;:::i;:::-;17634:4;17629:3;17625:14;17611:28;;17298:347;;;;:::o;17651:155::-;17763:4;17795;17790:3;17786:14;17778:22;;17651:155;;;:::o;17898:1048::-;18091:3;18120:96;18210:5;18120:96;:::i;:::-;18232:118;18343:6;18338:3;18232:118;:::i;:::-;18225:125;;18374:98;18466:5;18374:98;:::i;:::-;18495:7;18526:1;18511:410;18536:6;18533:1;18530:13;18511:410;;;18612:6;18606:13;18639:147;18782:3;18767:13;18639:147;:::i;:::-;18632:154;;18809:102;18904:6;18809:102;:::i;:::-;18799:112;;18571:350;18558:1;18555;18551:9;18546:14;;18511:410;;;18515:14;18937:3;18930:10;;18096:850;;;17898:1048;;;;:::o;19022:1355::-;19163:3;19199:4;19194:3;19190:14;19309:4;19302:5;19298:16;19292:23;19362:3;19356:4;19352:14;19345:4;19340:3;19336:14;19329:38;19388:193;19576:4;19562:12;19388:193;:::i;:::-;19380:201;;19214:378;19694:4;19687:5;19683:16;19677:23;19747:3;19741:4;19737:14;19730:4;19725:3;19721:14;19714:38;19773:187;19955:4;19941:12;19773:187;:::i;:::-;19765:195;;19602:369;20073:4;20066:5;20062:16;20056:23;20126:3;20120:4;20116:14;20109:4;20104:3;20100:14;20093:38;20152:187;20334:4;20320:12;20152:187;:::i;:::-;20144:195;;19981:369;20367:4;20360:11;;19168:1209;19022:1355;;;;:::o;20383:417::-;20548:4;20586:2;20575:9;20571:18;20563:26;;20635:9;20629:4;20625:20;20621:1;20610:9;20606:17;20599:47;20663:130;20788:4;20779:6;20663:130;:::i;:::-;20655:138;;20383:417;;;;:::o;20806:226::-;20947:11;20981:6;20976:3;20969:19;21021:4;21016:3;21012:14;20997:29;;20806:226;;;;:::o;21124:1068::-;21327:3;21356:96;21446:5;21356:96;:::i;:::-;21468:128;21589:6;21584:3;21468:128;:::i;:::-;21461:135;;21620:98;21712:5;21620:98;:::i;:::-;21741:7;21772:1;21757:410;21782:6;21779:1;21776:13;21757:410;;;21858:6;21852:13;21885:147;22028:3;22013:13;21885:147;:::i;:::-;21878:154;;22055:102;22150:6;22055:102;:::i;:::-;22045:112;;21817:350;21804:1;21801;21797:9;21792:14;;21757:410;;;21761:14;22183:3;22176:10;;21332:860;;;21124:1068;;;;:::o;22198:541::-;22425:4;22463:2;22452:9;22448:18;22440:26;;22512:9;22506:4;22502:20;22498:1;22487:9;22483:17;22476:47;22540:192;22727:4;22718:6;22540:192;:::i;:::-;22532:200;;22198:541;;;;:::o;22745:619::-;22822:6;22830;22838;22887:2;22875:9;22866:7;22862:23;22858:32;22855:119;;;22893:79;;:::i;:::-;22855:119;23013:1;23038:53;23083:7;23074:6;23063:9;23059:22;23038:53;:::i;:::-;23028:63;;22984:117;23140:2;23166:53;23211:7;23202:6;23191:9;23187:22;23166:53;:::i;:::-;23156:63;;23111:118;23268:2;23294:53;23339:7;23330:6;23319:9;23315:22;23294:53;:::i;:::-;23284:63;;23239:118;22745:619;;;;;:::o;23370:765::-;23456:6;23464;23472;23480;23529:3;23517:9;23508:7;23504:23;23500:33;23497:120;;;23536:79;;:::i;:::-;23497:120;23656:1;23681:53;23726:7;23717:6;23706:9;23702:22;23681:53;:::i;:::-;23671:63;;23627:117;23783:2;23809:53;23854:7;23845:6;23834:9;23830:22;23809:53;:::i;:::-;23799:63;;23754:118;23911:2;23937:53;23982:7;23973:6;23962:9;23958:22;23937:53;:::i;:::-;23927:63;;23882:118;24039:2;24065:53;24110:7;24101:6;24090:9;24086:22;24065:53;:::i;:::-;24055:63;;24010:118;23370:765;;;;;;;:::o;24141:619::-;24218:6;24226;24234;24283:2;24271:9;24262:7;24258:23;24254:32;24251:119;;;24289:79;;:::i;:::-;24251:119;24409:1;24434:53;24479:7;24470:6;24459:9;24455:22;24434:53;:::i;:::-;24424:63;;24380:117;24536:2;24562:53;24607:7;24598:6;24587:9;24583:22;24562:53;:::i;:::-;24552:63;;24507:118;24664:2;24690:53;24735:7;24726:6;24715:9;24711:22;24690:53;:::i;:::-;24680:63;;24635:118;24141:619;;;;;:::o;24766:226::-;24907:11;24941:6;24936:3;24929:19;24981:4;24976:3;24972:14;24957:29;;24766:226;;;;:::o;25084:1068::-;25287:3;25316:96;25406:5;25316:96;:::i;:::-;25428:128;25549:6;25544:3;25428:128;:::i;:::-;25421:135;;25580:98;25672:5;25580:98;:::i;:::-;25701:7;25732:1;25717:410;25742:6;25739:1;25736:13;25717:410;;;25818:6;25812:13;25845:147;25988:3;25973:13;25845:147;:::i;:::-;25838:154;;26015:102;26110:6;26015:102;:::i;:::-;26005:112;;25777:350;25764:1;25761;25757:9;25752:14;;25717:410;;;25721:14;26143:3;26136:10;;25292:860;;;25084:1068;;;;:::o;26158:541::-;26385:4;26423:2;26412:9;26408:18;26400:26;;26472:9;26466:4;26462:20;26458:1;26447:9;26443:17;26436:47;26500:192;26687:4;26678:6;26500:192;:::i;:::-;26492:200;;26158:541;;;;:::o;26705:::-;26876:4;26914:3;26903:9;26899:19;26891:27;;26928:71;26996:1;26985:9;26981:17;26972:6;26928:71;:::i;:::-;27009:72;27077:2;27066:9;27062:18;27053:6;27009:72;:::i;:::-;27091;27159:2;27148:9;27144:18;27135:6;27091:72;:::i;:::-;27173:66;27235:2;27224:9;27220:18;27211:6;27173:66;:::i;:::-;26705:541;;;;;;;:::o;27252:329::-;27311:6;27360:2;27348:9;27339:7;27335:23;27331:32;27328:119;;;27366:79;;:::i;:::-;27328:119;27486:1;27511:53;27556:7;27547:6;27536:9;27532:22;27511:53;:::i;:::-;27501:63;;27457:117;27252:329;;;;:::o;27587:222::-;27680:4;27718:2;27707:9;27703:18;27695:26;;27731:71;27799:1;27788:9;27784:17;27775:6;27731:71;:::i;:::-;27587:222;;;;:::o;27815:180::-;27863:77;27860:1;27853:88;27960:4;27957:1;27950:15;27984:4;27981:1;27974:15;28001:180;28049:77;28046:1;28039:88;28146:4;28143:1;28136:15;28170:4;28167:1;28160:15;28187:191;28227:3;28246:20;28264:1;28246:20;:::i;:::-;28241:25;;28280:20;28298:1;28280:20;:::i;:::-;28275:25;;28323:1;28320;28316:9;28309:16;;28344:3;28341:1;28338:10;28335:36;;;28351:18;;:::i;:::-;28335:36;28187:191;;;;:::o;28384:233::-;28423:3;28446:24;28464:5;28446:24;:::i;:::-;28437:33;;28492:66;28485:5;28482:77;28479:103;;28562:18;;:::i;:::-;28479:103;28609:1;28602:5;28598:13;28591:20;;28384:233;;;:::o;28623:180::-;28671:77;28668:1;28661:88;28768:4;28765:1;28758:15;28792:4;28789:1;28782:15;28809:143;28866:5;28897:6;28891:13;28882:22;;28913:33;28940:5;28913:33;:::i;:::-;28809:143;;;;:::o;28958:351::-;29028:6;29077:2;29065:9;29056:7;29052:23;29048:32;29045:119;;;29083:79;;:::i;:::-;29045:119;29203:1;29228:64;29284:7;29275:6;29264:9;29260:22;29228:64;:::i;:::-;29218:74;;29174:128;28958:351;;;;:::o;29315:332::-;29436:4;29474:2;29463:9;29459:18;29451:26;;29487:71;29555:1;29544:9;29540:17;29531:6;29487:71;:::i;:::-;29568:72;29636:2;29625:9;29621:18;29612:6;29568:72;:::i;:::-;29315:332;;;;;:::o;29653:442::-;29802:4;29840:2;29829:9;29825:18;29817:26;;29853:71;29921:1;29910:9;29906:17;29897:6;29853:71;:::i;:::-;29934:72;30002:2;29991:9;29987:18;29978:6;29934:72;:::i;:::-;30016;30084:2;30073:9;30069:18;30060:6;30016:72;:::i;:::-;29653:442;;;;;;:::o;30101:116::-;30171:21;30186:5;30171:21;:::i;:::-;30164:5;30161:32;30151:60;;30207:1;30204;30197:12;30151:60;30101:116;:::o;30223:137::-;30277:5;30308:6;30302:13;30293:22;;30324:30;30348:5;30324:30;:::i;:::-;30223:137;;;;:::o;30366:345::-;30433:6;30482:2;30470:9;30461:7;30457:23;30453:32;30450:119;;;30488:79;;:::i;:::-;30450:119;30608:1;30633:61;30686:7;30677:6;30666:9;30662:22;30633:61;:::i;:::-;30623:71;;30579:125;30366:345;;;;:::o;30717:147::-;30818:11;30855:3;30840:18;;30717:147;;;;:::o;30870:114::-;;:::o;30990:398::-;31149:3;31170:83;31251:1;31246:3;31170:83;:::i;:::-;31163:90;;31262:93;31351:3;31262:93;:::i;:::-;31380:1;31375:3;31371:11;31364:18;;30990:398;;;:::o;31394:379::-;31578:3;31600:147;31743:3;31600:147;:::i;:::-;31593:154;;31764:3;31757:10;;31394:379;;;:::o;31779:169::-;31863:11;31897:6;31892:3;31885:19;31937:4;31932:3;31928:14;31913:29;;31779:169;;;;:::o;31954:170::-;32094:22;32090:1;32082:6;32078:14;32071:46;31954:170;:::o;32130:366::-;32272:3;32293:67;32357:2;32352:3;32293:67;:::i;:::-;32286:74;;32369:93;32458:3;32369:93;:::i;:::-;32487:2;32482:3;32478:12;32471:19;;32130:366;;;:::o;32502:419::-;32668:4;32706:2;32695:9;32691:18;32683:26;;32755:9;32749:4;32745:20;32741:1;32730:9;32726:17;32719:47;32783:131;32909:4;32783:131;:::i;:::-;32775:139;;32502:419;;;:::o;32927:553::-;33104:4;33142:3;33131:9;33127:19;33119:27;;33156:71;33224:1;33213:9;33209:17;33200:6;33156:71;:::i;:::-;33237:72;33305:2;33294:9;33290:18;33281:6;33237:72;:::i;:::-;33319;33387:2;33376:9;33372:18;33363:6;33319:72;:::i;:::-;33401;33469:2;33458:9;33454:18;33445:6;33401:72;:::i;:::-;32927:553;;;;;;;:::o;33486:::-;33663:4;33701:3;33690:9;33686:19;33678:27;;33715:71;33783:1;33772:9;33768:17;33759:6;33715:71;:::i;:::-;33796:72;33864:2;33853:9;33849:18;33840:6;33796:72;:::i;:::-;33878;33946:2;33935:9;33931:18;33922:6;33878:72;:::i;:::-;33960;34028:2;34017:9;34013:18;34004:6;33960:72;:::i;:::-;33486:553;;;;;;;:::o;34045:664::-;34250:4;34288:3;34277:9;34273:19;34265:27;;34302:71;34370:1;34359:9;34355:17;34346:6;34302:71;:::i;:::-;34383:72;34451:2;34440:9;34436:18;34427:6;34383:72;:::i;:::-;34465;34533:2;34522:9;34518:18;34509:6;34465:72;:::i;:::-;34547;34615:2;34604:9;34600:18;34591:6;34547:72;:::i;:::-;34629:73;34697:3;34686:9;34682:19;34673:6;34629:73;:::i;:::-;34045:664;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Dex {\n  event EventAddToDexTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventAddToDexTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventAddToDexTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventCanceledTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventCanceledTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventCanceledTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  struct TradeTokensForTokens {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeTokensForEth {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeEthForTokens {\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  /* TradeTokensForTokens[] public tradeTokensForTokensArr;\n  TradeTokensForEth[] public tradeTokensForEthArr;\n  TradeEthForTokens[] public tradeEthForTokensArr; */\n\n  mapping(address => TradeTokensForTokens[]) public tradesOfTokensForTokensOfAnAddress;\n  mapping(address => TradeTokensForEth[]) public tradesOfTokensForEthOfAnAddress;\n  mapping(address => TradeEthForTokens[]) public tradesOfEthForTokensOfAnAddress;\n\n  struct TradeCategoriesOfDexUser {\n    bool tradeTokensForTokens;\n    bool tradeTokensForEth;\n    bool tradeEthForTokens;\n  }\n\n  address[] public dexUsersArr;\n  mapping(address => TradeCategoriesOfDexUser) dexUsersMapping;\n\n  address owner;\n\n  constructor() {\n    owner = msg.sender;\n  }\n\n  function addTokensToDexForTradeWithOtherTokens(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public {\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n    TradeTokensForTokens[] memory tradeTokensForTokensArrForAddress\n      = tradesOfTokensForTokensOfAnAddress[msg.sender];\n\n    TradeTokensForEth[] memory tradeTokensForEthArrForAddress\n      = tradesOfTokensForEthOfAnAddress[msg.sender];\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == true) {\n      for (uint i = 0; i < tradeTokensForTokensArrForAddress.length; i++) {\n        if (tradeTokensForTokensArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n            && tradeTokensForTokensArrForAddress[i].alreadyTraded == false) {\n          totalAllowanceRequired = tradeTokensForTokensArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n        }\n      }\n    }\n\n    if (dexUsersMapping[msg.sender].tradeTokensForEth == true) {\n      for (uint i = 0; i < tradeTokensForEthArrForAddress.length; i++) {\n        if (tradeTokensForEthArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n            && tradeTokensForEthArrForAddress[i].alreadyTraded == false) {\n          totalAllowanceRequired = tradeTokensForEthArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n        }\n      }\n    }\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    /* require(tradingErc20.allowance(msg.sender, address(this)) == newAllowance); */\n\n    tradesOfTokensForTokensOfAnAddress[msg.sender].push(\n      TradeTokensForTokens(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForTokens(\n      msg.sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForTokens == false) {\n      dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n    }\n  }\n\n  function addTokensToDexForTradeWithEth(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount) public {\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n\n    TradeTokensForTokens[] memory tradeTokensForTokensArrForAddress\n      = tradesOfTokensForTokensOfAnAddress[msg.sender];\n\n    TradeTokensForEth[] memory tradeTokensForEthArrForAddress\n      = tradesOfTokensForEthOfAnAddress[msg.sender];\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == true) {\n      for (uint i = 0; i < tradeTokensForTokensArrForAddress.length; i++) {\n        if (tradeTokensForTokensArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n            && tradeTokensForTokensArrForAddress[i].alreadyTraded == false) {\n          totalAllowanceRequired = tradeTokensForTokensArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n        }\n      }\n    }\n\n    if (dexUsersMapping[msg.sender].tradeTokensForEth == true) {\n      for (uint i = 0; i < tradeTokensForEthArrForAddress.length; i++) {\n        if (tradeTokensForEthArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n            && tradeTokensForEthArrForAddress[i].alreadyTraded == false) {\n          totalAllowanceRequired = tradeTokensForEthArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n        }\n      }\n    }\n\n    /* for (uint i = 0; i < tradeTokensForEthArrForAddress.length; i++) {\n      if (tradeTokensForEthArrForAddress[i].tradingTokenAddress == tradingTokenAddress) {\n        totalAllowanceRequired = tradeTokensForEthArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n      }\n    } */\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    tradesOfTokensForEthOfAnAddress[msg.sender].push(\n      TradeTokensForEth(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForEthAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForEth(\n      msg.sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForEthAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForEth = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForEth == false) {\n      dexUsersMapping[msg.sender].tradeTokensForEth = true;\n    }\n  }\n\n  function addEthToDexForTradeWithTokens(\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public payable {\n\n    require(msg.value == tradingEthAmount);\n\n    tradesOfEthForTokensOfAnAddress[msg.sender].push(\n      TradeEthForTokens(\n        tradingEthAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeEthForTokens(\n      msg.sender,\n      tradingEthAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeEthForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n      dexUsersMapping[msg.sender].tradeEthForTokens = true;\n    }\n  }\n\n  /* function updateTokensToDexForTradeWithOtherTokens(\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  ) public {\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n    TradeTokensForTokens[] memory tradeTokensForTokensArrForAddress\n      = tradesOfTokensForTokensOfAnAddress[msg.sender];\n\n    for (uint i = 0; i < tradeTokensForTokensArrForAddress.length; i++) {\n      if (tradeTokensForTokensArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n          && tradeTokensForTokensArrForAddress[i].alreadyTraded == false\n          && i != indexOfTrade) {\n        totalAllowanceRequired = tradeTokensForTokensArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n      }\n    }\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    tradesOfTokensForTokensOfAnAddress[msg.sender][indexOfTrade].tradingTokenAddress = tradingTokenAddress;\n    tradesOfTokensForTokensOfAnAddress[msg.sender][indexOfTrade].tradingTokenAmount = tradingTokenAmount;\n    tradesOfTokensForTokensOfAnAddress[msg.sender][indexOfTrade].tradingForTokenAddress = tradingForTokenAddress;\n    tradesOfTokensForTokensOfAnAddress[msg.sender][indexOfTrade].tradingForTokenAmount = tradingForTokenAmount;\n  }\n\n  function updateTokensToDexForTradeWithEth(\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  ) public {\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n\n    TradeTokensForEth[] memory tradeTokensForEthArrForAddress\n      = tradesOfTokensForEthOfAnAddress[msg.sender];\n\n    for (uint i = 0; i < tradeTokensForEthArrForAddress.length; i++) {\n      if (tradeTokensForEthArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n          && tradeTokensForEthArrForAddress[i].alreadyTraded == false\n          && i != indexOfTrade) {\n        totalAllowanceRequired = tradeTokensForEthArrForAddress[i].tradingTokenAmount + totalAllowanceRequired;\n      }\n    }\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    tradesOfTokensForEthOfAnAddress[msg.sender][indexOfTrade].tradingTokenAddress = tradingTokenAddress;\n    tradesOfTokensForEthOfAnAddress[msg.sender][indexOfTrade].tradingTokenAmount = tradingTokenAmount;\n    tradesOfTokensForEthOfAnAddress[msg.sender][indexOfTrade].tradingForEthAmount = tradingForEthAmount;\n  }\n\n  function updateEthToDexForTradeWithTokens(\n    uint indexOfTrade,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  ) public payable {\n\n    uint amountOfEthAlreadyInDex = tradesOfEthForTokensOfAnAddress[msg.sender][indexOfTrade].tradingEthAmount;\n\n    if (tradingEthAmount - amountOfEthAlreadyInDex > 0) {\n      require(msg.value == tradingEthAmount - amountOfEthAlreadyInDex);\n    } else if (tradingEthAmount - amountOfEthAlreadyInDex < 0) {\n      (bool sent,) = msg.sender.call{value: amountOfEthAlreadyInDex - tradingEthAmount}(\"\");\n      require(sent, \"Failed to send Ether\");\n    }\n\n    tradesOfEthForTokensOfAnAddress[msg.sender][indexOfTrade].tradingEthAmount = tradingEthAmount;\n    tradesOfEthForTokensOfAnAddress[msg.sender][indexOfTrade].tradingForTokenAddress = tradingForTokenAddress;\n    tradesOfEthForTokensOfAnAddress[msg.sender][indexOfTrade].tradingForTokenAmount = tradingForTokenAmount;\n  } */\n\n  /* struct TradeTokensForTokens {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  /* address tradingTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n  uint tradingTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n  address tradingForTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n  uint tradingForTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount; */\n\n  function buyTokensFromOtherTokens(address sender, uint indexOfTrade) public {\n    require(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingErc20 = ERC20(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount);\n\n    ERC20 tradingForErc20 = ERC20(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress);\n\n    require(tradingForErc20.balanceOf(msg.sender) >= tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForTokens(\n      sender,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  /* event TradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  ) */\n\n  // TradeTokensForEth\n\n  /* struct TradeTokensForEth {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  } */\n\n  /* address tradingTokenAddress = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n  uint tradingTokenAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n  uint tradingForEthAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount; */\n\n  function buyTokensForEth(address sender, uint indexOfTrade) public payable {\n    require(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingErc20 = ERC20(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount);\n\n    require(msg.value == tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount);\n\n    (bool sent,) = sender.call{value: msg.value}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForEth(\n      sender,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount\n    );\n  }\n\n  /* event TradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  ); */\n\n  // TradeEthForTokens\n\n  /* struct TradeEthForTokens {\n    address sender;\n    uint tradingEthAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  /* uint tradingEthAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount;\n  address tradingForTokenAddress = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n  uint tradingForTokenAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount; */\n\n  function buyEthForTokens(address sender, uint indexOfTrade) public payable {\n    require(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingForErc20 = ERC20(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress);\n    require(tradingForErc20.balanceOf(msg.sender) >= tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    (bool sent,) = payable(msg.sender).call{value: tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeEthForTokens(\n      sender,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  /* struct TradeTokensForTokens {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  /* address tradingTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n  uint tradingTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n  address tradingForTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n  uint tradingForTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount; */\n\n  function cancelTradeForTokensWithTokens(address sender, uint indexOfTrade) public {\n    require(msg.sender == sender);\n    require(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventCanceledTradeTokensForTokens(\n      sender,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  /* struct TradeTokensForEth {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  } */\n\n  /* address tradingTokenAddress = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n  uint tradingTokenAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n  uint tradingForEthAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount; */\n\n  function cancelTradeForTokensWithEth(address sender, uint indexOfTrade) public {\n    require(msg.sender == sender);\n    require(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventCanceledTradeTokensForEth(\n      sender,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount\n    );\n  }\n\n  /* struct TradeEthForTokens {\n    address sender;\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  /* uint tradingEthAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount;\n  address tradingForTokenAddress = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n  uint tradingForTokenAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount;\n   */\n\n  function cancelTradeForEthWithTokens(address sender, uint indexOfTrade) public payable {\n    require(msg.sender == sender);\n    require(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    (bool sent,) = payable(msg.sender).call{value: tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    emit EventCanceledTradeEthForTokens(\n      sender,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  struct AllTrades {\n    TradeTokensForTokensForCall[] tradeTokensForTokensForCall;\n    TradeTokensForEthForCall[] tradeTokensForEthForCall;\n    TradeEthForTokensForCall[] tradeEthForTokensForCall;\n  }\n\n  /* function getAllTrades() public view returns (AllTrades memory) {\n\n    uint amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForTokensForCall[] memory tradeTokensForTokensResultArr = new TradeTokensForTokensForCall[](amountOfTrades);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        TradeTokensForTokens memory tradeTokensForTokens = tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]][j];\n        TradeTokensForTokensForCall memory tradeTokensForTokensForCall = TradeTokensForTokensForCall (\n          dexUsersArr[i],\n          j,\n          tradeTokensForTokens.tradingTokenAddress,\n          tradeTokensForTokens.tradingTokenAmount,\n          tradeTokensForTokens.tradingForTokenAddress,\n          tradeTokensForTokens.tradingForTokenAmount,\n          tradeTokensForTokens.alreadyTraded\n        );\n\n        tradeTokensForTokensResultArr[indexOfResultArr] = tradeTokensForTokensForCall;\n\n        indexOfResultArr = indexOfResultArr + 1;\n      }\n    }\n\n    amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForEthForCall[] memory tradeTokensForEthResultArr = new TradeTokensForEthForCall[](amountOfTrades);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeTokensForEth memory tradeTokensForEth = tradesOfTokensForEthOfAnAddress[dexUsersArr[i]][j];\n          TradeTokensForEthForCall memory tradeTokensForEthForCall = TradeTokensForEthForCall (\n            dexUsersArr[i],\n            j,\n            tradeTokensForEth.tradingTokenAddress,\n            tradeTokensForEth.tradingTokenAmount,\n            tradeTokensForEth.tradingForEthAmount,\n            tradeTokensForEth.alreadyTraded\n          );\n\n          tradeTokensForEthResultArr[indexOfResultArr] = tradeTokensForEthForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeEthForTokensForCall[] memory tradeEthForTokensResultArr = new TradeEthForTokensForCall[](amountOfTrades);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeEthForTokens memory tradeEthForTokens = tradesOfEthForTokensOfAnAddress[dexUsersArr[i]][j];\n          TradeEthForTokensForCall memory tradeEthForTokensForCall = TradeEthForTokensForCall (\n            dexUsersArr[i],\n            j,\n            tradeEthForTokens.tradingEthAmount,\n            tradeEthForTokens.tradingForTokenAddress,\n            tradeEthForTokens.tradingForTokenAmount,\n            tradeEthForTokens.alreadyTraded\n          );\n\n          tradeEthForTokensResultArr[indexOfResultArr] = tradeEthForTokensForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    AllTrades memory allTrades;\n\n    allTrades.tradeTokensForTokensForCall = tradeTokensForTokensResultArr;\n    allTrades.tradeTokensForEthForCall = tradeTokensForEthResultArr;\n    allTrades.tradeEthForTokensForCall = tradeEthForTokensResultArr;\n\n    return allTrades;\n  } */\n\n  struct TradeTokensForTokensForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForTokensWithTokens() public view returns (TradeTokensForTokensForCall[] memory) {\n\n    uint amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForTokensForCall[] memory tradeTokensForTokensResultArr = new TradeTokensForTokensForCall[](amountOfTrades);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        TradeTokensForTokens memory tradeTokensForTokens = tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]][j];\n        TradeTokensForTokensForCall memory tradeTokensForTokensForCall = TradeTokensForTokensForCall (\n          dexUsersArr[i],\n          j,\n          tradeTokensForTokens.tradingTokenAddress,\n          tradeTokensForTokens.tradingTokenAmount,\n          tradeTokensForTokens.tradingForTokenAddress,\n          tradeTokensForTokens.tradingForTokenAmount,\n          tradeTokensForTokens.alreadyTraded\n        );\n\n        tradeTokensForTokensResultArr[indexOfResultArr] = tradeTokensForTokensForCall;\n\n        indexOfResultArr = indexOfResultArr + 1;\n      }\n    }\n\n    return tradeTokensForTokensResultArr;\n  }\n\n  /* if (dexUsersMapping[dexUsersArr[i]].tradeTokensForTokens == true) { */\n\n  struct TradeTokensForEthForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForTokensWithEth() public view returns (TradeTokensForEthForCall[] memory) {\n\n    uint amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForEthForCall[] memory tradeTokensForEthResultArr = new TradeTokensForEthForCall[](amountOfTrades);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeTokensForEth memory tradeTokensForEth = tradesOfTokensForEthOfAnAddress[dexUsersArr[i]][j];\n          TradeTokensForEthForCall memory tradeTokensForEthForCall = TradeTokensForEthForCall (\n            dexUsersArr[i],\n            j,\n            tradeTokensForEth.tradingTokenAddress,\n            tradeTokensForEth.tradingTokenAmount,\n            tradeTokensForEth.tradingForEthAmount,\n            tradeTokensForEth.alreadyTraded\n          );\n\n          tradeTokensForEthResultArr[indexOfResultArr] = tradeTokensForEthForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    return tradeTokensForEthResultArr;\n  }\n\n  struct TradeEthForTokensForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForEthWithTokens() public view returns (TradeEthForTokensForCall[] memory) {\n\n    uint amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeEthForTokensForCall[] memory tradeEthForTokensResultArr = new TradeEthForTokensForCall[](amountOfTrades);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeEthForTokens memory tradeEthForTokens = tradesOfEthForTokensOfAnAddress[dexUsersArr[i]][j];\n          TradeEthForTokensForCall memory tradeEthForTokensForCall = TradeEthForTokensForCall (\n            dexUsersArr[i],\n            j,\n            tradeEthForTokens.tradingEthAmount,\n            tradeEthForTokens.tradingForTokenAddress,\n            tradeEthForTokens.tradingForTokenAmount,\n            tradeEthForTokens.alreadyTraded\n          );\n\n          tradeEthForTokensResultArr[indexOfResultArr] = tradeEthForTokensForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    return tradeEthForTokensResultArr;\n  }\n\n  function getDexUsers() public view returns (address[] memory) {\n    return dexUsersArr;\n  }\n\n  struct AllTradesOfAccount {\n    TradeTokensForTokensForCall[] tradeTokensForTokensForCall;\n    TradeTokensForEthForCall[] tradeTokensForEthForCall;\n    TradeEthForTokensForCall[] tradeEthForTokensForCall;\n  }\n\n  function getAllTradesOfAccount(address sender) public view returns(AllTradesOfAccount memory) {\n    AllTradesOfAccount memory allTradesOfAccount;\n\n    allTradesOfAccount.tradeTokensForTokensForCall = new TradeTokensForTokensForCall[](tradesOfTokensForTokensOfAnAddress[sender].length);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < tradesOfTokensForTokensOfAnAddress[sender].length; i++) {\n      TradeTokensForTokens memory tradeTokensForTokens = tradesOfTokensForTokensOfAnAddress[sender][i];\n      TradeTokensForTokensForCall memory tradeTokensForTokensForCall = TradeTokensForTokensForCall (\n        sender,\n        i,\n        tradeTokensForTokens.tradingTokenAddress,\n        tradeTokensForTokens.tradingTokenAmount,\n        tradeTokensForTokens.tradingForTokenAddress,\n        tradeTokensForTokens.tradingForTokenAmount,\n        tradeTokensForTokens.alreadyTraded\n      );\n\n      allTradesOfAccount.tradeTokensForTokensForCall[indexOfResultArr] = tradeTokensForTokensForCall;\n      indexOfResultArr = indexOfResultArr + 1;\n    }\n\n    allTradesOfAccount.tradeTokensForEthForCall = new TradeTokensForEthForCall[](tradesOfTokensForEthOfAnAddress[sender].length);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < tradesOfTokensForEthOfAnAddress[sender].length; i++) {\n      TradeTokensForEth memory tradeTokensForEth = tradesOfTokensForEthOfAnAddress[sender][i];\n      TradeTokensForEthForCall memory tradeTokensForEthForCall = TradeTokensForEthForCall (\n        sender,\n        i,\n        tradeTokensForEth.tradingTokenAddress,\n        tradeTokensForEth.tradingTokenAmount,\n        tradeTokensForEth.tradingForEthAmount,\n        tradeTokensForEth.alreadyTraded\n      );\n\n      allTradesOfAccount.tradeTokensForEthForCall[indexOfResultArr] = tradeTokensForEthForCall;\n      indexOfResultArr = indexOfResultArr + 1;\n    }\n\n    /* TradeEthForTokensForCall[] memory tradeEthForTokensResultArr = new TradeEthForTokensForCall[](tradesOfEthForTokensOfAnAddress[sender].length); */\n\n    allTradesOfAccount.tradeEthForTokensForCall = new TradeEthForTokensForCall[](tradesOfEthForTokensOfAnAddress[sender].length);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < tradesOfEthForTokensOfAnAddress[sender].length; i++) {\n      TradeEthForTokens memory tradeEthForTokens = tradesOfEthForTokensOfAnAddress[sender][i];\n      TradeEthForTokensForCall memory tradeEthForTokensForCall = TradeEthForTokensForCall (\n        sender,\n        i,\n        tradeEthForTokens.tradingEthAmount,\n        tradeEthForTokens.tradingForTokenAddress,\n        tradeEthForTokens.tradingForTokenAmount,\n        tradeEthForTokens.alreadyTraded\n      );\n\n      allTradesOfAccount.tradeEthForTokensForCall[indexOfResultArr] = tradeEthForTokensForCall;\n      indexOfResultArr = indexOfResultArr + 1;\n    }\n\n    return allTradesOfAccount;\n  }\n}\n",
  "sourcePath": "/Users/zhiwen/code/dex/contracts/contracts/Dex.sol",
  "ast": {
    "absolutePath": "project:/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        785
      ],
      "Dex": [
        2847
      ],
      "ERC20": [
        651
      ],
      "IERC20": [
        729
      ],
      "IERC20Errors": [
        41
      ],
      "IERC20Metadata": [
        755
      ]
    },
    "id": 2848,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 788,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2848,
        "sourceUnit": 652,
        "src": "65:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2847,
        "linearizedBaseContracts": [
          2847
        ],
        "name": "Dex",
        "nameLocation": "131:3:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "b31b008e8a12db47dae24bda793ea0d4e1039d4e74c334ec8fed59d8a4e80529",
            "id": 800,
            "name": "EventAddToDexTradeTokensForTokens",
            "nameLocation": "145:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "193:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "185:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "213:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "205:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "243:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "238:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "275:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "267:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "308:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "303:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:154:5"
            },
            "src": "139:195:5"
          },
          {
            "anonymous": false,
            "eventSelector": "4b3224748748339deab55aa5a1514e7f3d791c195a9594935c30a84d882f540f",
            "id": 810,
            "name": "EventAddToDexTradeTokensForEth",
            "nameLocation": "344:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "389:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "381:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "409:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "401:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "439:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "434:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "468:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "463:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:116:5"
            },
            "src": "338:154:5"
          },
          {
            "anonymous": false,
            "eventSelector": "5e91b5fb353347b0d4c78463cbf33c353331235f1f40327ca164bd540d164697",
            "id": 820,
            "name": "EventAddToDexTradeEthForTokens",
            "nameLocation": "502:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "547:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "539:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "564:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "559:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "594:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "586:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "627:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "622:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:119:5"
            },
            "src": "496:157:5"
          },
          {
            "anonymous": false,
            "eventSelector": "aef3fec0890a84ad1cfab292c8504f17278c9b35213257cbc2c572cc622ae015",
            "id": 832,
            "name": "EventTradeTokensForTokens",
            "nameLocation": "663:25:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "703:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "695:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "723:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "715:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "753:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "748:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "785:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "777:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "818:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "813:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:154:5"
            },
            "src": "657:187:5"
          },
          {
            "anonymous": false,
            "eventSelector": "08b8b3ffc165e69d2aa56bf6924a289c74530a36570b042b279ede424a0f7c18",
            "id": 842,
            "name": "EventTradeTokensForEth",
            "nameLocation": "854:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "891:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "883:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "911:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "903:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "941:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "936:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "970:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "965:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:116:5"
            },
            "src": "848:146:5"
          },
          {
            "anonymous": false,
            "eventSelector": "90737823f8fc9fbb28385683bca84d56edc8a1d49a2ad7faeb6391da5e38d99b",
            "id": 852,
            "name": "EventTradeEthForTokens",
            "nameLocation": "1004:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1041:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1033:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1058:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1053:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1088:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1080:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1121:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1116:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:119:5"
            },
            "src": "998:149:5"
          },
          {
            "anonymous": false,
            "eventSelector": "c086f5b7a83e015dcc4ec82fa3f4de6c895b32824a682d0d3002b1277cbb7dc7",
            "id": 864,
            "name": "EventCanceledTradeTokensForTokens",
            "nameLocation": "1157:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1205:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1197:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1225:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1217:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1255:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1250:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1287:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1279:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1320:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1315:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:154:5"
            },
            "src": "1151:195:5"
          },
          {
            "anonymous": false,
            "eventSelector": "ee62066e68ea020a72ab8850191057c02d81798cef76e90508db15b2f47368c7",
            "id": 874,
            "name": "EventCanceledTradeTokensForEth",
            "nameLocation": "1356:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1401:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1393:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1421:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1413:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1451:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1446:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "1480:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1475:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:116:5"
            },
            "src": "1350:154:5"
          },
          {
            "anonymous": false,
            "eventSelector": "6fd78ca7acca4f76ea5834af9a37b74bbd249dbadf5360eeecb4a3a9b762dfff",
            "id": 884,
            "name": "EventCanceledTradeEthForTokens",
            "nameLocation": "1514:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1559:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1551:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1576:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1571:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1606:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1598:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1639:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1634:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:119:5"
            },
            "src": "1508:157:5"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokens",
            "id": 895,
            "members": [
              {
                "constant": false,
                "id": 886,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "1711:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1703:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 885,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1703:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 888,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "1741:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1736:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 887,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1736:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 890,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "1773:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1765:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 889,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1765:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 892,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "1806:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1801:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 891,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1801:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 894,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "1838:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1833:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 893,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1833:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokens",
            "nameLocation": "1676:20:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "1669:187:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEth",
            "id": 904,
            "members": [
              {
                "constant": false,
                "id": 897,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "1899:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1891:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 896,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1891:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 899,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "1929:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1924:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 898,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1924:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 901,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "1958:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1953:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 900,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1953:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 903,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "1988:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1983:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 902,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1983:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEth",
            "nameLocation": "1867:17:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "1860:146:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokens",
            "id": 913,
            "members": [
              {
                "constant": false,
                "id": 906,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "2046:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2041:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 905,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2041:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 908,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "2076:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2068:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 907,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2068:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "2109:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2104:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 909,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2104:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 912,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2141:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2136:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 911,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2136:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokens",
            "nameLocation": "2017:17:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "2010:149:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b66082a",
            "id": 919,
            "mutability": "mutable",
            "name": "tradesOfTokensForTokensOfAnAddress",
            "nameLocation": "2379:34:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2329:84:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
            },
            "typeName": {
              "id": 918,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 914,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2337:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2329:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 916,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 915,
                    "name": "TradeTokensForTokens",
                    "nameLocations": [
                      "2348:20:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 895,
                    "src": "2348:20:5"
                  },
                  "referencedDeclaration": 895,
                  "src": "2348:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokens"
                  }
                },
                "id": 917,
                "nodeType": "ArrayTypeName",
                "src": "2348:22:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bc07cef",
            "id": 925,
            "mutability": "mutable",
            "name": "tradesOfTokensForEthOfAnAddress",
            "nameLocation": "2464:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2417:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
            },
            "typeName": {
              "id": 924,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 920,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2425:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2417:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 922,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 921,
                    "name": "TradeTokensForEth",
                    "nameLocations": [
                      "2436:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 904,
                    "src": "2436:17:5"
                  },
                  "referencedDeclaration": 904,
                  "src": "2436:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEth"
                  }
                },
                "id": 923,
                "nodeType": "ArrayTypeName",
                "src": "2436:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEth[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be532109",
            "id": 931,
            "mutability": "mutable",
            "name": "tradesOfEthForTokensOfAnAddress",
            "nameLocation": "2546:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2499:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
            },
            "typeName": {
              "id": 930,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 926,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2507:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2499:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 928,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 927,
                    "name": "TradeEthForTokens",
                    "nameLocations": [
                      "2518:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 913,
                    "src": "2518:17:5"
                  },
                  "referencedDeclaration": 913,
                  "src": "2518:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokens"
                  }
                },
                "id": 929,
                "nodeType": "ArrayTypeName",
                "src": "2518:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeCategoriesOfDexUser",
            "id": 938,
            "members": [
              {
                "constant": false,
                "id": 933,
                "mutability": "mutable",
                "name": "tradeTokensForTokens",
                "nameLocation": "2625:20:5",
                "nodeType": "VariableDeclaration",
                "scope": 938,
                "src": "2620:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 932,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2620:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 935,
                "mutability": "mutable",
                "name": "tradeTokensForEth",
                "nameLocation": "2656:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 938,
                "src": "2651:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 934,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2651:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 937,
                "mutability": "mutable",
                "name": "tradeEthForTokens",
                "nameLocation": "2684:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 938,
                "src": "2679:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 936,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2679:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeCategoriesOfDexUser",
            "nameLocation": "2589:24:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "2582:124:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd9c8853",
            "id": 941,
            "mutability": "mutable",
            "name": "dexUsersArr",
            "nameLocation": "2727:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2710:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 939,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2710:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 940,
              "nodeType": "ArrayTypeName",
              "src": "2710:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 946,
            "mutability": "mutable",
            "name": "dexUsersMapping",
            "nameLocation": "2787:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2742:60:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
            },
            "typeName": {
              "id": 945,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 942,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2750:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2742:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 944,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 943,
                  "name": "TradeCategoriesOfDexUser",
                  "nameLocations": [
                    "2761:24:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "2761:24:5"
                },
                "referencedDeclaration": 938,
                "src": "2761:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage_ptr",
                  "typeString": "struct Dex.TradeCategoriesOfDexUser"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 948,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "2815:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 2847,
            "src": "2807:13:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 947,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2807:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 956,
              "nodeType": "Block",
              "src": "2839:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 951,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "2845:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 952,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2853:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2857:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2853:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2845:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:18:5"
                }
              ]
            },
            "id": 957,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:2:5"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:5"
            },
            "scope": 2847,
            "src": "2825:43:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "3057:2368:5",
              "statements": [
                {
                  "assignments": [
                    970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 970,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "3070:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "3064:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 969,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 968,
                          "name": "ERC20",
                          "nameLocations": [
                            "3064:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "3064:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "3064:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 974,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 972,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "3091:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 971,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "3085:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3064:47:5"
                },
                {
                  "assignments": [
                    976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 976,
                      "mutability": "mutable",
                      "name": "totalAllowanceRequired",
                      "nameLocation": "3123:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "3118:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 975,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3118:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 978,
                  "initialValue": {
                    "id": 977,
                    "name": "tradingTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 961,
                    "src": "3148:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3118:48:5"
                },
                {
                  "assignments": [
                    983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 983,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensArrForAddress",
                      "nameLocation": "3202:33:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "3172:63:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokens[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 981,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 980,
                            "name": "TradeTokensForTokens",
                            "nameLocations": [
                              "3172:20:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 895,
                            "src": "3172:20:5"
                          },
                          "referencedDeclaration": 895,
                          "src": "3172:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokens"
                          }
                        },
                        "id": 982,
                        "nodeType": "ArrayTypeName",
                        "src": "3172:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 988,
                  "initialValue": {
                    "baseExpression": {
                      "id": 984,
                      "name": "tradesOfTokensForTokensOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "3244:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                      }
                    },
                    "id": 987,
                    "indexExpression": {
                      "expression": {
                        "id": 985,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3279:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3283:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3279:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3244:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3172:118:5"
                },
                {
                  "assignments": [
                    993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 993,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthArrForAddress",
                      "nameLocation": "3324:30:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "3297:57:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEth[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 991,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 990,
                            "name": "TradeTokensForEth",
                            "nameLocations": [
                              "3297:17:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 904,
                            "src": "3297:17:5"
                          },
                          "referencedDeclaration": 904,
                          "src": "3297:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEth"
                          }
                        },
                        "id": 992,
                        "nodeType": "ArrayTypeName",
                        "src": "3297:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEth[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "baseExpression": {
                      "id": 994,
                      "name": "tradesOfTokensForEthOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "3363:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                      }
                    },
                    "id": 997,
                    "indexExpression": {
                      "expression": {
                        "id": 995,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3395:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3399:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3395:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3363:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3297:109:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 999,
                          "name": "dexUsersMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "3417:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                          }
                        },
                        "id": 1002,
                        "indexExpression": {
                          "expression": {
                            "id": 1000,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3433:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3437:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3433:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3417:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                          "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3445:20:5",
                      "memberName": "tradeTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "3417:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3469:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3417:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1044,
                  "nodeType": "IfStatement",
                  "src": "3413:450:5",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "3475:388:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1041,
                          "nodeType": "Block",
                          "src": "3551:306:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1017,
                                        "name": "tradeTokensForTokensArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 983,
                                        "src": "3565:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                        }
                                      },
                                      "id": 1019,
                                      "indexExpression": {
                                        "id": 1018,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1007,
                                        "src": "3599:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3565:36:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 1020,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3602:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 886,
                                    "src": "3565:56:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1021,
                                    "name": "tradingTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 959,
                                    "src": "3625:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3565:79:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1023,
                                        "name": "tradeTokensForTokensArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 983,
                                        "src": "3660:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                        }
                                      },
                                      "id": 1025,
                                      "indexExpression": {
                                        "id": 1024,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1007,
                                        "src": "3694:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3660:36:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 1026,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3697:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 894,
                                    "src": "3660:50:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "66616c7365",
                                    "id": 1027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3714:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "src": "3660:59:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3565:154:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1040,
                              "nodeType": "IfStatement",
                              "src": "3561:288:5",
                              "trueBody": {
                                "id": 1039,
                                "nodeType": "Block",
                                "src": "3721:128:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1030,
                                        "name": "totalAllowanceRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 976,
                                        "src": "3733:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1036,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1031,
                                              "name": "tradeTokensForTokensArrForAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 983,
                                              "src": "3758:33:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                              }
                                            },
                                            "id": 1033,
                                            "indexExpression": {
                                              "id": 1032,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1007,
                                              "src": "3792:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3758:36:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 1034,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3795:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 888,
                                          "src": "3758:55:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 1035,
                                          "name": "totalAllowanceRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 976,
                                          "src": "3816:22:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3758:80:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3733:105:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1038,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3733:105:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1010,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "3500:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1011,
                              "name": "tradeTokensForTokensArrForAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "3504:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3538:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3504:40:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3500:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1042,
                        "initializationExpression": {
                          "assignments": [
                            1007
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1007,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3493:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1042,
                              "src": "3488:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1006,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3488:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1009,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3497:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3488:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3546:3:5",
                            "subExpression": {
                              "id": 1014,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "3546:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1016,
                          "nodeType": "ExpressionStatement",
                          "src": "3546:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "3483:374:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1045,
                          "name": "dexUsersMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "3873:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                          }
                        },
                        "id": 1048,
                        "indexExpression": {
                          "expression": {
                            "id": 1046,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3889:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3893:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3889:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3873:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                          "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3901:17:5",
                      "memberName": "tradeTokensForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "3873:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3922:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3873:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1090,
                  "nodeType": "IfStatement",
                  "src": "3869:435:5",
                  "trueBody": {
                    "id": 1089,
                    "nodeType": "Block",
                    "src": "3928:376:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1087,
                          "nodeType": "Block",
                          "src": "4001:297:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1063,
                                        "name": "tradeTokensForEthArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 993,
                                        "src": "4015:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                        }
                                      },
                                      "id": 1065,
                                      "indexExpression": {
                                        "id": 1064,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1053,
                                        "src": "4046:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4015:33:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 1066,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4049:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 897,
                                    "src": "4015:53:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1067,
                                    "name": "tradingTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 959,
                                    "src": "4072:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "4015:76:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1074,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1069,
                                        "name": "tradeTokensForEthArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 993,
                                        "src": "4107:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                        }
                                      },
                                      "id": 1071,
                                      "indexExpression": {
                                        "id": 1070,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1053,
                                        "src": "4138:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4107:33:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 1072,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4141:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 903,
                                    "src": "4107:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "66616c7365",
                                    "id": 1073,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4158:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "src": "4107:56:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4015:148:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1086,
                              "nodeType": "IfStatement",
                              "src": "4011:279:5",
                              "trueBody": {
                                "id": 1085,
                                "nodeType": "Block",
                                "src": "4165:125:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1083,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1076,
                                        "name": "totalAllowanceRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 976,
                                        "src": "4177:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1082,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1077,
                                              "name": "tradeTokensForEthArrForAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 993,
                                              "src": "4202:30:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                              }
                                            },
                                            "id": 1079,
                                            "indexExpression": {
                                              "id": 1078,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1053,
                                              "src": "4233:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4202:33:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 1080,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4236:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 899,
                                          "src": "4202:52:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 1081,
                                          "name": "totalAllowanceRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 976,
                                          "src": "4257:22:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4202:77:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4177:102:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1084,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4177:102:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1056,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "3953:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1057,
                              "name": "tradeTokensForEthArrForAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 993,
                              "src": "3957:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3988:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3957:37:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3953:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1088,
                        "initializationExpression": {
                          "assignments": [
                            1053
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1053,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3946:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1088,
                              "src": "3941:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1052,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3941:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1055,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3950:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3941:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3996:3:5",
                            "subExpression": {
                              "id": 1060,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "3996:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1062,
                          "nodeType": "ExpressionStatement",
                          "src": "3996:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "3936:362:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1094,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4341:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4345:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4341:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1098,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4361:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4353:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1096,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4353:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4353:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1092,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "4318:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4331:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "4318:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4318:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1101,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "4371:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4318:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4310:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "4310:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1108,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4431:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4435:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4431:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1106,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "4408:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4421:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "4408:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4408:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1111,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "4446:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4408:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4400:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4400:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:69:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1121,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "4652:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1122,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "4681:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1123,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "4709:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1124,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "4741:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4772:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1120,
                          "name": "TradeTokensForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 895,
                          "src": "4622:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokens_$895_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForTokens storage pointer)"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:161:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1115,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "4563:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1118,
                        "indexExpression": {
                          "expression": {
                            "id": 1116,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4598:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4602:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4598:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4563:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4610:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4563:51:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForTokens_$895_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForTokens storage ref[] storage pointer,struct Dex.TradeTokensForTokens storage ref)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4563:221:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "4563:221:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4837:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4841:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4837:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1132,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "4855:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1133,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "4882:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1134,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "4908:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1135,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "4938:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1129,
                      "name": "EventAddToDexTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "4796:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4796:169:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "EmitStatement",
                  "src": "4791:174:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1138,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "4976:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1141,
                            "indexExpression": {
                              "expression": {
                                "id": 1139,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4992:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4996:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4992:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4976:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5004:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 933,
                          "src": "4976:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5028:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4976:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1145,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "5045:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1148,
                            "indexExpression": {
                              "expression": {
                                "id": 1146,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5061:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5065:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5061:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5045:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5073:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 935,
                          "src": "5045:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5094:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5045:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4976:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1153,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "5111:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1156,
                          "indexExpression": {
                            "expression": {
                              "id": 1154,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5127:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5131:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5127:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5111:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5139:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 937,
                        "src": "5111:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5160:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5111:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4976:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1177,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "5292:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1180,
                          "indexExpression": {
                            "expression": {
                              "id": 1178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5308:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5312:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5308:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5292:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5320:20:5",
                        "memberName": "tradeTokensForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 933,
                        "src": "5292:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5292:57:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1193,
                    "nodeType": "IfStatement",
                    "src": "5288:133:5",
                    "trueBody": {
                      "id": 1192,
                      "nodeType": "Block",
                      "src": "5351:70:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1184,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "5359:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1187,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1185,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5375:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5379:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5375:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5359:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "5387:20:5",
                              "memberName": "tradeTokensForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 933,
                              "src": "5359:48:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5410:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "5359:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1191,
                          "nodeType": "ExpressionStatement",
                          "src": "5359:55:5"
                        }
                      ]
                    }
                  },
                  "id": 1194,
                  "nodeType": "IfStatement",
                  "src": "4972:449:5",
                  "trueBody": {
                    "id": 1176,
                    "nodeType": "Block",
                    "src": "5167:115:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1164,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5196:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5200:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5196:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1161,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "5179:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5191:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5179:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5179:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ExpressionStatement",
                        "src": "5179:28:5"
                      },
                      {
                        "expression": {
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1168,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "5219:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1171,
                              "indexExpression": {
                                "expression": {
                                  "id": 1169,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5235:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5239:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5235:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5219:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5247:20:5",
                            "memberName": "tradeTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "5219:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5270:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5219:55:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1175,
                        "nodeType": "ExpressionStatement",
                        "src": "5219:55:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a1179c72",
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithOtherTokens",
            "nameLocation": "2881:37:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "2932:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "2924:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "2962:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "2957:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "2994:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "2986:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "3027:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "3022:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2918:131:5"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:0:5"
            },
            "scope": 2847,
            "src": "2872:2553:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "5568:2492:5",
              "statements": [
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "5581:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "5575:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1205,
                          "name": "ERC20",
                          "nameLocations": [
                            "5575:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "5575:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "5575:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1209,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "5602:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1208,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "5596:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5596:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5575:47:5"
                },
                {
                  "assignments": [
                    1213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1213,
                      "mutability": "mutable",
                      "name": "totalAllowanceRequired",
                      "nameLocation": "5634:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "5629:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1212,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5629:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "id": 1214,
                    "name": "tradingTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1200,
                    "src": "5659:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5629:48:5"
                },
                {
                  "assignments": [
                    1220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1220,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensArrForAddress",
                      "nameLocation": "5714:33:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "5684:63:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokens[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1218,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1217,
                            "name": "TradeTokensForTokens",
                            "nameLocations": [
                              "5684:20:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 895,
                            "src": "5684:20:5"
                          },
                          "referencedDeclaration": 895,
                          "src": "5684:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokens"
                          }
                        },
                        "id": 1219,
                        "nodeType": "ArrayTypeName",
                        "src": "5684:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1225,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1221,
                      "name": "tradesOfTokensForTokensOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "5756:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                      }
                    },
                    "id": 1224,
                    "indexExpression": {
                      "expression": {
                        "id": 1222,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5791:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5795:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5791:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5756:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5684:118:5"
                },
                {
                  "assignments": [
                    1230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1230,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthArrForAddress",
                      "nameLocation": "5836:30:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "5809:57:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEth[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1228,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1227,
                            "name": "TradeTokensForEth",
                            "nameLocations": [
                              "5809:17:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 904,
                            "src": "5809:17:5"
                          },
                          "referencedDeclaration": 904,
                          "src": "5809:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEth"
                          }
                        },
                        "id": 1229,
                        "nodeType": "ArrayTypeName",
                        "src": "5809:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEth[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1231,
                      "name": "tradesOfTokensForEthOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "5875:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                      }
                    },
                    "id": 1234,
                    "indexExpression": {
                      "expression": {
                        "id": 1232,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5907:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5911:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5907:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5875:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5809:109:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1236,
                          "name": "dexUsersMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "5929:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                          }
                        },
                        "id": 1239,
                        "indexExpression": {
                          "expression": {
                            "id": 1237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5945:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5949:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5945:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5929:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                          "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5957:20:5",
                      "memberName": "tradeTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "5929:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5981:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5929:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1281,
                  "nodeType": "IfStatement",
                  "src": "5925:450:5",
                  "trueBody": {
                    "id": 1280,
                    "nodeType": "Block",
                    "src": "5987:388:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1278,
                          "nodeType": "Block",
                          "src": "6063:306:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1254,
                                        "name": "tradeTokensForTokensArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1220,
                                        "src": "6077:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                        }
                                      },
                                      "id": 1256,
                                      "indexExpression": {
                                        "id": 1255,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "6111:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6077:36:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 1257,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6114:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 886,
                                    "src": "6077:56:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1258,
                                    "name": "tradingTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1198,
                                    "src": "6137:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6077:79:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1260,
                                        "name": "tradeTokensForTokensArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1220,
                                        "src": "6172:33:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                        }
                                      },
                                      "id": 1262,
                                      "indexExpression": {
                                        "id": 1261,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "6206:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6172:36:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 1263,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6209:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 894,
                                    "src": "6172:50:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "66616c7365",
                                    "id": 1264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6226:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "src": "6172:59:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6077:154:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1277,
                              "nodeType": "IfStatement",
                              "src": "6073:288:5",
                              "trueBody": {
                                "id": 1276,
                                "nodeType": "Block",
                                "src": "6233:128:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1267,
                                        "name": "totalAllowanceRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1213,
                                        "src": "6245:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1268,
                                              "name": "tradeTokensForTokensArrForAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1220,
                                              "src": "6270:33:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                              }
                                            },
                                            "id": 1270,
                                            "indexExpression": {
                                              "id": 1269,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1244,
                                              "src": "6304:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6270:36:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 1271,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6307:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 888,
                                          "src": "6270:55:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 1272,
                                          "name": "totalAllowanceRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1213,
                                          "src": "6328:22:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6270:80:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6245:105:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1275,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6245:105:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1247,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "6012:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1248,
                              "name": "tradeTokensForTokensArrForAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "6016:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                              }
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6050:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6016:40:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6012:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1279,
                        "initializationExpression": {
                          "assignments": [
                            1244
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1244,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6005:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1279,
                              "src": "6000:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1243,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6000:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1246,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6009:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6000:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6058:3:5",
                            "subExpression": {
                              "id": 1251,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "6058:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1253,
                          "nodeType": "ExpressionStatement",
                          "src": "6058:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "5995:374:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1282,
                          "name": "dexUsersMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "6385:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                          }
                        },
                        "id": 1285,
                        "indexExpression": {
                          "expression": {
                            "id": 1283,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6401:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6405:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6401:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6385:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                          "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6413:17:5",
                      "memberName": "tradeTokensForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "6385:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6434:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6385:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1327,
                  "nodeType": "IfStatement",
                  "src": "6381:435:5",
                  "trueBody": {
                    "id": 1326,
                    "nodeType": "Block",
                    "src": "6440:376:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1324,
                          "nodeType": "Block",
                          "src": "6513:297:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1300,
                                        "name": "tradeTokensForEthArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1230,
                                        "src": "6527:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                        }
                                      },
                                      "id": 1302,
                                      "indexExpression": {
                                        "id": 1301,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1290,
                                        "src": "6558:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6527:33:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 1303,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6561:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 897,
                                    "src": "6527:53:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1304,
                                    "name": "tradingTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1198,
                                    "src": "6584:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6527:76:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1306,
                                        "name": "tradeTokensForEthArrForAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1230,
                                        "src": "6619:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                        }
                                      },
                                      "id": 1308,
                                      "indexExpression": {
                                        "id": 1307,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1290,
                                        "src": "6650:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6619:33:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 1309,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6653:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 903,
                                    "src": "6619:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "66616c7365",
                                    "id": 1310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6670:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "src": "6619:56:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6527:148:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1323,
                              "nodeType": "IfStatement",
                              "src": "6523:279:5",
                              "trueBody": {
                                "id": 1322,
                                "nodeType": "Block",
                                "src": "6677:125:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1313,
                                        "name": "totalAllowanceRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1213,
                                        "src": "6689:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1319,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1314,
                                              "name": "tradeTokensForEthArrForAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "6714:30:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                              }
                                            },
                                            "id": 1316,
                                            "indexExpression": {
                                              "id": 1315,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1290,
                                              "src": "6745:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6714:33:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 1317,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6748:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 899,
                                          "src": "6714:52:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 1318,
                                          "name": "totalAllowanceRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1213,
                                          "src": "6769:22:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6714:77:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6689:102:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1321,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6689:102:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1293,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "6465:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1294,
                              "name": "tradeTokensForEthArrForAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1230,
                              "src": "6469:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                              }
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6500:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6469:37:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6465:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1325,
                        "initializationExpression": {
                          "assignments": [
                            1290
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1290,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6458:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1325,
                              "src": "6453:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1289,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6453:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1292,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6462:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6453:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6508:3:5",
                            "subExpression": {
                              "id": 1297,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "6508:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1299,
                          "nodeType": "ExpressionStatement",
                          "src": "6508:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "6448:362:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7147:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7151:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7147:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "7167:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7159:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1333,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7159:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7159:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1329,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "7124:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7137:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "7124:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7124:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1338,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "7177:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7124:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7116:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7116:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "7116:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1345,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7237:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7241:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7237:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1343,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "7214:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7227:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "7214:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7214:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1348,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "7252:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7214:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7206:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:69:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1358,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "7365:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1359,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "7394:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1360,
                            "name": "tradingForEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "7422:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7451:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1357,
                          "name": "TradeTokensForEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "7338:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForEth_$904_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForEth storage pointer)"
                          }
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7338:124:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1352,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "7282:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1355,
                        "indexExpression": {
                          "expression": {
                            "id": 1353,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7314:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7318:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7314:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7282:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7326:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7282:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForEth_$904_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForEth storage ref[] storage pointer,struct Dex.TradeTokensForEth storage ref)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7282:181:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "7282:181:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1366,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7513:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7517:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7513:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1368,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "7531:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1369,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "7558:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1370,
                        "name": "tradingForEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "7584:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1365,
                      "name": "EventAddToDexTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "7475:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7475:134:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "EmitStatement",
                  "src": "7470:139:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1373,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "7620:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1376,
                            "indexExpression": {
                              "expression": {
                                "id": 1374,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7636:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7640:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7636:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7620:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7648:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 933,
                          "src": "7620:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7672:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7620:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1380,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "7689:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1383,
                            "indexExpression": {
                              "expression": {
                                "id": 1381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7705:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7709:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7705:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7689:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7717:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 935,
                          "src": "7689:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7738:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7689:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7620:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1388,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "7755:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1391,
                          "indexExpression": {
                            "expression": {
                              "id": 1389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7771:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7775:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7771:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7755:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7783:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 937,
                        "src": "7755:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7804:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "7755:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7620:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1412,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "7933:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1415,
                          "indexExpression": {
                            "expression": {
                              "id": 1413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7949:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7953:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7949:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7933:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7961:17:5",
                        "memberName": "tradeTokensForEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 935,
                        "src": "7933:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7982:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "7933:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1428,
                    "nodeType": "IfStatement",
                    "src": "7929:127:5",
                    "trueBody": {
                      "id": 1427,
                      "nodeType": "Block",
                      "src": "7989:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1419,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "7997:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1422,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1420,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "8013:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8017:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8013:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7997:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "8025:17:5",
                              "memberName": "tradeTokensForEth",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 935,
                              "src": "7997:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8045:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "7997:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1426,
                          "nodeType": "ExpressionStatement",
                          "src": "7997:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1429,
                  "nodeType": "IfStatement",
                  "src": "7616:440:5",
                  "trueBody": {
                    "id": 1411,
                    "nodeType": "Block",
                    "src": "7811:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1399,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7840:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7844:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7840:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1396,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "7823:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7835:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7823:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7823:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1402,
                        "nodeType": "ExpressionStatement",
                        "src": "7823:28:5"
                      },
                      {
                        "expression": {
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1403,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "7863:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1406,
                              "indexExpression": {
                                "expression": {
                                  "id": 1404,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "7879:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7883:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7879:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7863:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1407,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7891:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "7863:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7911:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7863:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1410,
                        "nodeType": "ExpressionStatement",
                        "src": "7863:52:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7f1ca38b",
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithEth",
            "nameLocation": "5438:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "5481:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "5473:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5473:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "5511:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "5506:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "5540:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "5535:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5467:93:5"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5568:0:5"
            },
            "scope": 2847,
            "src": "5429:2631:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "8214:836:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8229:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8233:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8229:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1443,
                          "name": "tradingEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "8242:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8229:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8221:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8221:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "8221:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1453,
                            "name": "tradingEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "8349:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1454,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1435,
                            "src": "8375:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1455,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "8407:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8438:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1452,
                          "name": "TradeEthForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 913,
                          "src": "8322:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeEthForTokens_$913_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeEthForTokens storage pointer)"
                          }
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8322:127:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1447,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "8266:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1450,
                        "indexExpression": {
                          "expression": {
                            "id": 1448,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8298:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8302:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8298:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8266:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8310:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8266:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr_$_t_struct$_TradeEthForTokens_$913_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeEthForTokens storage ref[] storage pointer,struct Dex.TradeEthForTokens storage ref)"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:184:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:184:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8500:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8504:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8500:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1463,
                        "name": "tradingEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "8518:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1464,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "8542:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1465,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "8572:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1460,
                      "name": "EventAddToDexTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "8462:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:137:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "EmitStatement",
                  "src": "8457:142:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1468,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "8610:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1471,
                            "indexExpression": {
                              "expression": {
                                "id": 1469,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8626:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8630:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8626:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8610:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8638:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 933,
                          "src": "8610:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8662:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8610:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1475,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "8679:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1478,
                            "indexExpression": {
                              "expression": {
                                "id": 1476,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8695:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8699:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8695:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8679:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8707:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 935,
                          "src": "8679:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8728:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8679:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8610:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1483,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "8745:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1486,
                          "indexExpression": {
                            "expression": {
                              "id": 1484,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8761:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8765:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8761:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8745:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1487,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8773:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 937,
                        "src": "8745:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8794:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "8745:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8610:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1507,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "8923:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1510,
                          "indexExpression": {
                            "expression": {
                              "id": 1508,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8939:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8943:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8939:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8923:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8951:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 937,
                        "src": "8923:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8972:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "8923:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1523,
                    "nodeType": "IfStatement",
                    "src": "8919:127:5",
                    "trueBody": {
                      "id": 1522,
                      "nodeType": "Block",
                      "src": "8979:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1514,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "8987:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1517,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1515,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "9003:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9007:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9003:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8987:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1518,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "9015:17:5",
                              "memberName": "tradeEthForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 937,
                              "src": "8987:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9035:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "8987:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1521,
                          "nodeType": "ExpressionStatement",
                          "src": "8987:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1524,
                  "nodeType": "IfStatement",
                  "src": "8606:440:5",
                  "trueBody": {
                    "id": 1506,
                    "nodeType": "Block",
                    "src": "8801:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1494,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8830:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8834:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8830:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1491,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "8813:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8825:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8813:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8813:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "8813:28:5"
                      },
                      {
                        "expression": {
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1498,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "8853:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1501,
                              "indexExpression": {
                                "expression": {
                                  "id": 1499,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "8869:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8873:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8869:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8853:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8881:17:5",
                            "memberName": "tradeEthForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 937,
                            "src": "8853:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8901:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8853:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "8853:52:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a306802f",
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEthToDexForTradeWithTokens",
            "nameLocation": "8073:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "8113:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "8108:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "8143:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "8135:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8135:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "8176:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "8171:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8102:96:5"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8214:0:5"
            },
            "scope": 2847,
            "src": "8064:986:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1667,
              "nodeType": "Block",
              "src": "13490:1354:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1534,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "13504:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1536,
                              "indexExpression": {
                                "id": 1535,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1528,
                                "src": "13539:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13504:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "id": 1537,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1530,
                              "src": "13547:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13504:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13561:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 894,
                          "src": "13504:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13578:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "13504:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13496:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13496:87:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "13496:87:5"
                },
                {
                  "assignments": [
                    1546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1546,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "13596:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1667,
                      "src": "13590:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1545,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1544,
                          "name": "ERC20",
                          "nameLocations": [
                            "13590:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "13590:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "13590:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1555,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1548,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "13617:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1550,
                            "indexExpression": {
                              "id": 1549,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "13652:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13617:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1552,
                          "indexExpression": {
                            "id": 1551,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "13660:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13617:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13674:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 886,
                        "src": "13617:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1547,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "13611:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13611:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13590:104:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1559,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "13726:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13734:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13738:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13734:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1562,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "13746:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1564,
                            "indexExpression": {
                              "id": 1563,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "13781:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13746:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1566,
                          "indexExpression": {
                            "id": 1565,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "13789:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13746:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13803:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 888,
                        "src": "13746:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1556,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "13700:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13713:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "13700:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13700:122:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "13700:122:5"
                },
                {
                  "assignments": [
                    1572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1572,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "13835:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1667,
                      "src": "13829:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1570,
                          "name": "ERC20",
                          "nameLocations": [
                            "13829:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "13829:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "13829:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1581,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1574,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "13859:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1576,
                            "indexExpression": {
                              "id": 1575,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "13894:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13859:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1578,
                          "indexExpression": {
                            "id": 1577,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "13902:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13859:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13916:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 890,
                        "src": "13859:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1573,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "13853:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13853:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13829:110:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1585,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "13980:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13984:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13980:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1583,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "13954:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13970:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "13954:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13954:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1588,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "13995:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1590,
                              "indexExpression": {
                                "id": 1589,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1528,
                                "src": "14030:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13995:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1592,
                            "indexExpression": {
                              "id": 1591,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1530,
                              "src": "14038:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13995:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14052:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 892,
                          "src": "13995:78:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13954:119:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13946:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13946:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "13946:128:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1600,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14114:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14118:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14114:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1604,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "14134:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14126:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1602,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14126:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14126:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1598,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "14088:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14104:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "14088:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14088:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1607,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "14144:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1609,
                              "indexExpression": {
                                "id": 1608,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1528,
                                "src": "14179:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14144:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1611,
                            "indexExpression": {
                              "id": 1610,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1530,
                              "src": "14187:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14144:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14201:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 892,
                          "src": "14144:78:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14088:134:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14080:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14080:143:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "14080:143:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14259:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14263:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14259:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1621,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "14271:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1622,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "14279:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1624,
                            "indexExpression": {
                              "id": 1623,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "14314:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14279:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1626,
                          "indexExpression": {
                            "id": 1625,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "14322:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14279:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14336:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "14279:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1616,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "14230:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14246:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "14230:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14230:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "14230:128:5"
                },
                {
                  "expression": {
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1630,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "14365:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1633,
                          "indexExpression": {
                            "id": 1631,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1528,
                            "src": "14400:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14365:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1634,
                        "indexExpression": {
                          "id": 1632,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1530,
                          "src": "14408:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14365:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14422:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 894,
                      "src": "14365:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14438:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14365:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "14365:77:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1640,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "14487:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1641,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "14501:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1643,
                            "indexExpression": {
                              "id": 1642,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "14536:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14501:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1645,
                          "indexExpression": {
                            "id": 1644,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "14544:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14501:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14558:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 886,
                        "src": "14501:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1647,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "14585:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1649,
                            "indexExpression": {
                              "id": 1648,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "14620:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14585:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1651,
                          "indexExpression": {
                            "id": 1650,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "14628:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14585:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14642:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 888,
                        "src": "14585:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1653,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "14668:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1655,
                            "indexExpression": {
                              "id": 1654,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "14703:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14668:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1657,
                          "indexExpression": {
                            "id": 1656,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "14711:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14668:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14725:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 890,
                        "src": "14668:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1659,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "14755:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1661,
                            "indexExpression": {
                              "id": 1660,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "14790:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14755:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1663,
                          "indexExpression": {
                            "id": 1662,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "14798:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14755:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14812:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "14755:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1639,
                      "name": "EventTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "14454:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14454:385:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1666,
                  "nodeType": "EmitStatement",
                  "src": "14449:390:5"
                }
              ]
            },
            "functionSelector": "d74f378c",
            "id": 1668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensFromOtherTokens",
            "nameLocation": "13423:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1528,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13456:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1668,
                  "src": "13448:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13448:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "13469:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1668,
                  "src": "13464:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13464:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13447:35:5"
            },
            "returnParameters": {
              "id": 1532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13490:0:5"
            },
            "scope": 2847,
            "src": "13414:1430:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1770,
              "nodeType": "Block",
              "src": "15631:905:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1676,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "15645:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1678,
                              "indexExpression": {
                                "id": 1677,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "15677:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15645:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1680,
                            "indexExpression": {
                              "id": 1679,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1672,
                              "src": "15685:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15645:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15699:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 903,
                          "src": "15645:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15716:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "15645:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15637:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15637:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1685,
                  "nodeType": "ExpressionStatement",
                  "src": "15637:84:5"
                },
                {
                  "assignments": [
                    1688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1688,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "15734:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1770,
                      "src": "15728:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1687,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1686,
                          "name": "ERC20",
                          "nameLocations": [
                            "15728:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "15728:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "15728:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1697,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1690,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "15755:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1692,
                            "indexExpression": {
                              "id": 1691,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "15787:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15755:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1694,
                          "indexExpression": {
                            "id": 1693,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "15795:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15755:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15809:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "15755:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1689,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "15749:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15749:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15728:101:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1701,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "15861:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15869:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15873:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15869:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1704,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "15881:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1706,
                            "indexExpression": {
                              "id": 1705,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "15913:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15881:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1708,
                          "indexExpression": {
                            "id": 1707,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "15921:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15881:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15935:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "15881:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1698,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "15835:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15848:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "15835:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15835:119:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "15835:119:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1713,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15969:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15973:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15969:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1715,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "15982:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1717,
                              "indexExpression": {
                                "id": 1716,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "16014:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15982:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1719,
                            "indexExpression": {
                              "id": 1718,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1672,
                              "src": "16022:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15982:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1720,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16036:19:5",
                          "memberName": "tradingForEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "15982:73:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15969:86:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15961:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15961:95:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "15961:95:5"
                },
                {
                  "assignments": [
                    1725,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1725,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "16069:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1770,
                      "src": "16064:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1724,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16064:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1733,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16108:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1726,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "16078:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16085:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "16078:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1728,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "16097:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16101:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "16097:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "16078:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16078:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16063:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1735,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1725,
                        "src": "16125:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16131:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16117:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16117:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "16117:37:5"
                },
                {
                  "expression": {
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1739,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "16161:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1742,
                          "indexExpression": {
                            "id": 1740,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "16193:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16161:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1743,
                        "indexExpression": {
                          "id": 1741,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1672,
                          "src": "16201:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16161:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1744,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16215:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "16161:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16231:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16161:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1747,
                  "nodeType": "ExpressionStatement",
                  "src": "16161:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1749,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "16277:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1750,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "16291:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1752,
                            "indexExpression": {
                              "id": 1751,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "16323:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16291:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1754,
                          "indexExpression": {
                            "id": 1753,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "16331:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16291:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16345:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "16291:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1756,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "16372:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1758,
                            "indexExpression": {
                              "id": 1757,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "16404:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16372:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1760,
                          "indexExpression": {
                            "id": 1759,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "16412:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16372:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16426:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "16372:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1762,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "16452:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1764,
                            "indexExpression": {
                              "id": 1763,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "16484:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16452:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1766,
                          "indexExpression": {
                            "id": 1765,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "16492:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16452:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16506:19:5",
                        "memberName": "tradingForEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "16452:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1748,
                      "name": "EventTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "16247:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16247:284:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1769,
                  "nodeType": "EmitStatement",
                  "src": "16242:289:5"
                }
              ]
            },
            "functionSelector": "8c69cd84",
            "id": 1771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensForEth",
            "nameLocation": "15565:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "15589:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "15581:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15581:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "15602:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "15597:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15597:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15580:35:5"
            },
            "returnParameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15631:0:5"
            },
            "scope": 2847,
            "src": "15556:980:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1903,
              "nodeType": "Block",
              "src": "17292:1171:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1779,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "17306:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1781,
                              "indexExpression": {
                                "id": 1780,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1773,
                                "src": "17338:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17306:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1783,
                            "indexExpression": {
                              "id": 1782,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1775,
                              "src": "17346:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17306:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17360:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "17306:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17377:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "17306:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17298:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17298:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1788,
                  "nodeType": "ExpressionStatement",
                  "src": "17298:84:5"
                },
                {
                  "assignments": [
                    1791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1791,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "17395:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1903,
                      "src": "17389:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1789,
                          "name": "ERC20",
                          "nameLocations": [
                            "17389:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "17389:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "17389:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1800,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1793,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "17419:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1795,
                            "indexExpression": {
                              "id": 1794,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "17451:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17419:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1797,
                          "indexExpression": {
                            "id": 1796,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "17459:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17419:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17473:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 908,
                        "src": "17419:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1792,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "17413:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17413:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17389:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1804,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "17536:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17540:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17536:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1802,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1791,
                              "src": "17510:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17526:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "17510:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17510:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1807,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "17551:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1809,
                              "indexExpression": {
                                "id": 1808,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1773,
                                "src": "17583:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17551:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1811,
                            "indexExpression": {
                              "id": 1810,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1775,
                              "src": "17591:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17551:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17605:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 910,
                          "src": "17551:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17510:116:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17502:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17502:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "17502:125:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1819,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "17668:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17672:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17668:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1823,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17688:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2847",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17680:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1821,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17680:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17680:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1817,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1791,
                              "src": "17642:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17658:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "17642:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17642:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1826,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "17698:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1828,
                              "indexExpression": {
                                "id": 1827,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1773,
                                "src": "17730:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17698:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1830,
                            "indexExpression": {
                              "id": 1829,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1775,
                              "src": "17738:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17698:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17752:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 910,
                          "src": "17698:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17642:131:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17634:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17634:140:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1834,
                  "nodeType": "ExpressionStatement",
                  "src": "17634:140:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1838,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17810:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17814:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17810:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1840,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1773,
                        "src": "17822:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1841,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "17830:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1843,
                            "indexExpression": {
                              "id": 1842,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "17862:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17830:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1845,
                          "indexExpression": {
                            "id": 1844,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "17870:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17830:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17884:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "17830:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1835,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1791,
                        "src": "17781:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17797:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "17781:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17781:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1848,
                  "nodeType": "ExpressionStatement",
                  "src": "17781:125:5"
                },
                {
                  "assignments": [
                    1850,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1850,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "17919:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1903,
                      "src": "17914:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1849,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17914:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1866,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18032:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1853,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "17936:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17940:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17936:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17928:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1851,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17928:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17928:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17948:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "17928:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1857,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "17960:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1859,
                              "indexExpression": {
                                "id": 1858,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1773,
                                "src": "17992:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17960:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1861,
                            "indexExpression": {
                              "id": 1860,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1775,
                              "src": "18000:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17960:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1862,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18014:16:5",
                          "memberName": "tradingEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 906,
                          "src": "17960:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "17928:103:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17928:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17913:122:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1868,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "18049:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18055:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18041:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18041:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1871,
                  "nodeType": "ExpressionStatement",
                  "src": "18041:37:5"
                },
                {
                  "expression": {
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1872,
                            "name": "tradesOfEthForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "18085:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1875,
                          "indexExpression": {
                            "id": 1873,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "18117:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18085:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1876,
                        "indexExpression": {
                          "id": 1874,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "18125:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18085:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 1877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "18139:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "18085:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18155:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "18085:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1880,
                  "nodeType": "ExpressionStatement",
                  "src": "18085:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1882,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1773,
                        "src": "18201:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1883,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "18215:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1885,
                            "indexExpression": {
                              "id": 1884,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "18247:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18215:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1887,
                          "indexExpression": {
                            "id": 1886,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "18255:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18215:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18269:16:5",
                        "memberName": "tradingEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 906,
                        "src": "18215:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1889,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "18293:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1891,
                            "indexExpression": {
                              "id": 1890,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "18325:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18293:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1893,
                          "indexExpression": {
                            "id": 1892,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "18333:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18293:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18347:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 908,
                        "src": "18293:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1895,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "18377:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1897,
                            "indexExpression": {
                              "id": 1896,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "18409:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18377:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1899,
                          "indexExpression": {
                            "id": 1898,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "18417:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18377:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18431:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "18377:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1881,
                      "name": "EventTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "18171:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18171:287:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1902,
                  "nodeType": "EmitStatement",
                  "src": "18166:292:5"
                }
              ]
            },
            "functionSelector": "1cdec042",
            "id": 1904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyEthForTokens",
            "nameLocation": "17226:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "17250:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "17242:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17242:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1775,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "17263:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "17258:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1774,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17258:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17241:35:5"
            },
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17292:0:5"
            },
            "scope": 2847,
            "src": "17217:1246:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1966,
              "nodeType": "Block",
              "src": "19209:623:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1912,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "19223:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19227:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19223:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1914,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1906,
                          "src": "19237:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19223:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "19215:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19215:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1917,
                  "nodeType": "ExpressionStatement",
                  "src": "19215:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1919,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "19258:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1921,
                              "indexExpression": {
                                "id": 1920,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1906,
                                "src": "19293:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19258:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1923,
                            "indexExpression": {
                              "id": 1922,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "19301:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19258:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19315:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 894,
                          "src": "19258:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19332:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "19258:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "19250:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19250:88:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1928,
                  "nodeType": "ExpressionStatement",
                  "src": "19250:88:5"
                },
                {
                  "expression": {
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1929,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "19345:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1932,
                          "indexExpression": {
                            "id": 1930,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1906,
                            "src": "19380:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19345:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1933,
                        "indexExpression": {
                          "id": 1931,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1908,
                          "src": "19388:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19345:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19402:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 894,
                      "src": "19345:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19418:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "19345:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "19345:77:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1939,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1906,
                        "src": "19475:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1940,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "19489:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1942,
                            "indexExpression": {
                              "id": 1941,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "19524:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19489:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1944,
                          "indexExpression": {
                            "id": 1943,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "19532:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19489:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19546:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 886,
                        "src": "19489:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1946,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "19573:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1948,
                            "indexExpression": {
                              "id": 1947,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "19608:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19573:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1950,
                          "indexExpression": {
                            "id": 1949,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "19616:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19573:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19630:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 888,
                        "src": "19573:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1952,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "19656:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1954,
                            "indexExpression": {
                              "id": 1953,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "19691:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19656:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1956,
                          "indexExpression": {
                            "id": 1955,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "19699:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19656:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19713:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 890,
                        "src": "19656:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1958,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "19743:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1960,
                            "indexExpression": {
                              "id": 1959,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "19778:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19743:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1962,
                          "indexExpression": {
                            "id": 1961,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "19786:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19743:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19800:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 892,
                        "src": "19743:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1938,
                      "name": "EventCanceledTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "19434:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19434:393:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "EmitStatement",
                  "src": "19429:398:5"
                }
              ]
            },
            "functionSelector": "748d6a74",
            "id": 1967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithTokens",
            "nameLocation": "19136:30:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19175:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1967,
                  "src": "19167:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19167:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "19188:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1967,
                  "src": "19183:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19183:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19166:35:5"
            },
            "returnParameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19209:0:5"
            },
            "scope": 2847,
            "src": "19127:705:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2023,
              "nodeType": "Block",
              "src": "20408:516:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1975,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "20422:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20426:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "20422:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1977,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1969,
                          "src": "20436:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20422:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "20414:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20414:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "20414:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1982,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "20457:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1984,
                              "indexExpression": {
                                "id": 1983,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1969,
                                "src": "20489:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20457:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1986,
                            "indexExpression": {
                              "id": 1985,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1971,
                              "src": "20497:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20457:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20511:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 903,
                          "src": "20457:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20528:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "20457:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "20449:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20449:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "20449:85:5"
                },
                {
                  "expression": {
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1992,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "20541:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1995,
                          "indexExpression": {
                            "id": 1993,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "20573:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20541:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1996,
                        "indexExpression": {
                          "id": 1994,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1971,
                          "src": "20581:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20541:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "20595:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "20541:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20611:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "20541:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "20541:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2002,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "20665:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2003,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "20679:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 2005,
                            "indexExpression": {
                              "id": 2004,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1969,
                              "src": "20711:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20679:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 2007,
                          "indexExpression": {
                            "id": 2006,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1971,
                            "src": "20719:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20679:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20733:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "20679:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2009,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "20760:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 2011,
                            "indexExpression": {
                              "id": 2010,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1969,
                              "src": "20792:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20760:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 2013,
                          "indexExpression": {
                            "id": 2012,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1971,
                            "src": "20800:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20760:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20814:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "20760:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2015,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "20840:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 2017,
                            "indexExpression": {
                              "id": 2016,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1969,
                              "src": "20872:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20840:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 2019,
                          "indexExpression": {
                            "id": 2018,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1971,
                            "src": "20880:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20840:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20894:19:5",
                        "memberName": "tradingForEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "20840:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2001,
                      "name": "EventCanceledTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "20627:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20627:292:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2022,
                  "nodeType": "EmitStatement",
                  "src": "20622:297:5"
                }
              ]
            },
            "functionSelector": "59560382",
            "id": 2024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithEth",
            "nameLocation": "20338:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "20374:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "20366:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20366:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1971,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "20387:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "20382:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20382:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20365:35:5"
            },
            "returnParameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20408:0:5"
            },
            "scope": 2847,
            "src": "20329:595:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2103,
              "nodeType": "Block",
              "src": "21523:691:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2032,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "21537:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21541:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21537:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2034,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "21551:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "21537:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "21529:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21529:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2037,
                  "nodeType": "ExpressionStatement",
                  "src": "21529:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2039,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "21572:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2041,
                              "indexExpression": {
                                "id": 2040,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "21604:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21572:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2043,
                            "indexExpression": {
                              "id": 2042,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2028,
                              "src": "21612:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21572:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21626:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "21572:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21643:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "21572:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "21564:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21564:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "21564:85:5"
                },
                {
                  "expression": {
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2049,
                            "name": "tradesOfEthForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "21656:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 2052,
                          "indexExpression": {
                            "id": 2050,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2026,
                            "src": "21688:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21656:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 2053,
                        "indexExpression": {
                          "id": 2051,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "21696:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21656:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 2054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "21710:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "21656:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21726:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "21656:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "21656:74:5"
                },
                {
                  "assignments": [
                    2059,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2059,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "21743:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2103,
                      "src": "21738:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2058,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "21738:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2075,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21856:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2062,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "21760:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21764:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21760:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "21752:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21752:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21752:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21772:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "21752:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2066,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "21784:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2068,
                              "indexExpression": {
                                "id": 2067,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "21816:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21784:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2070,
                            "indexExpression": {
                              "id": 2069,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2028,
                              "src": "21824:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21784:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 2071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21838:16:5",
                          "memberName": "tradingEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 906,
                          "src": "21784:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "21752:103:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21752:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21737:122:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2077,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "21873:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 2078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21879:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 2076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "21865:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21865:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2080,
                  "nodeType": "ExpressionStatement",
                  "src": "21865:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2082,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "21952:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2083,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "21966:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2085,
                            "indexExpression": {
                              "id": 2084,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "21998:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21966:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2087,
                          "indexExpression": {
                            "id": 2086,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2028,
                            "src": "22006:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21966:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 2088,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22020:16:5",
                        "memberName": "tradingEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 906,
                        "src": "21966:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2089,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "22044:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2091,
                            "indexExpression": {
                              "id": 2090,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "22076:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22044:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2093,
                          "indexExpression": {
                            "id": 2092,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2028,
                            "src": "22084:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22044:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22098:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 908,
                        "src": "22044:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2095,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "22128:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "id": 2096,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "22160:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22128:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2099,
                          "indexExpression": {
                            "id": 2098,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2028,
                            "src": "22168:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22128:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22182:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "22128:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2081,
                      "name": "EventCanceledTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "21914:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21914:295:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2102,
                  "nodeType": "EmitStatement",
                  "src": "21909:300:5"
                }
              ]
            },
            "functionSelector": "e39c40fc",
            "id": 2104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForEthWithTokens",
            "nameLocation": "21445:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2026,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "21481:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "21473:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21473:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "21494:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "21489:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21489:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21472:35:5"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21523:0:5"
            },
            "scope": 2847,
            "src": "21436:778:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.AllTrades",
            "id": 2117,
            "members": [
              {
                "constant": false,
                "id": 2108,
                "mutability": "mutable",
                "name": "tradeTokensForTokensForCall",
                "nameLocation": "22271:27:5",
                "nodeType": "VariableDeclaration",
                "scope": 2117,
                "src": "22241:57:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2105,
                      "name": "TradeTokensForTokensForCall",
                      "nameLocations": [
                        "22241:27:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2132,
                      "src": "22241:27:5"
                    },
                    "referencedDeclaration": 2132,
                    "src": "22241:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                    }
                  },
                  "id": 2107,
                  "nodeType": "ArrayTypeName",
                  "src": "22241:29:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2112,
                "mutability": "mutable",
                "name": "tradeTokensForEthForCall",
                "nameLocation": "22331:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2117,
                "src": "22304:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEthForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2110,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2109,
                      "name": "TradeTokensForEthForCall",
                      "nameLocations": [
                        "22304:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2284,
                      "src": "22304:24:5"
                    },
                    "referencedDeclaration": 2284,
                    "src": "22304:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ArrayTypeName",
                  "src": "22304:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEthForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2116,
                "mutability": "mutable",
                "name": "tradeEthForTokensForCall",
                "nameLocation": "22388:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2117,
                "src": "22361:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2114,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2113,
                      "name": "TradeEthForTokensForCall",
                      "nameLocations": [
                        "22361:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2444,
                      "src": "22361:24:5"
                    },
                    "referencedDeclaration": 2444,
                    "src": "22361:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ArrayTypeName",
                  "src": "22361:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllTrades",
            "nameLocation": "22225:9:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "22218:199:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokensForCall",
            "id": 2132,
            "members": [
              {
                "constant": false,
                "id": 2119,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "26435:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26427:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "26427:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2121,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "26452:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26447:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2120,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "26447:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2123,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "26487:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26479:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "26479:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2125,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "26517:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26512:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "26512:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2127,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "26549:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26541:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "26541:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2129,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "26582:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26577:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2128,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "26577:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2131,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "26614:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 2132,
                "src": "26609:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "26609:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokensForCall",
            "nameLocation": "26393:27:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "26386:246:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2270,
              "nodeType": "Block",
              "src": "26735:1262:5",
              "statements": [
                {
                  "assignments": [
                    2140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2140,
                      "mutability": "mutable",
                      "name": "amountOfTrades",
                      "nameLocation": "26747:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "26742:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2139,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26742:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2142,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "26764:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26742:23:5"
                },
                {
                  "body": {
                    "id": 2177,
                    "nodeType": "Block",
                    "src": "26818:153:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2175,
                          "nodeType": "Block",
                          "src": "26911:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2169,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2140,
                                  "src": "26921:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2170,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2140,
                                    "src": "26938:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26955:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "26938:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26921:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2174,
                              "nodeType": "ExpressionStatement",
                              "src": "26921:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2158,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2155,
                            "src": "26843:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2159,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "26847:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2163,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2160,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "26882:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2162,
                                "indexExpression": {
                                  "id": 2161,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "26894:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "26882:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26847:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "26898:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "26847:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26843:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2176,
                        "initializationExpression": {
                          "assignments": [
                            2155
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2155,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "26836:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2176,
                              "src": "26831:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2154,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "26831:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2157,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26840:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26831:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "26906:3:5",
                            "subExpression": {
                              "id": 2166,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2155,
                              "src": "26906:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2168,
                          "nodeType": "ExpressionStatement",
                          "src": "26906:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "26826:139:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2147,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "26789:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2148,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "26793:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26805:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "26793:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26789:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2178,
                  "initializationExpression": {
                    "assignments": [
                      2144
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2144,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "26782:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2178,
                        "src": "26777:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "26777:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2146,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26786:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "26777:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "26813:3:5",
                      "subExpression": {
                        "id": 2151,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "26813:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2153,
                    "nodeType": "ExpressionStatement",
                    "src": "26813:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "26772:199:5"
                },
                {
                  "assignments": [
                    2183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2183,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensResultArr",
                      "nameLocation": "27014:29:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "26977:66:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2181,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2180,
                            "name": "TradeTokensForTokensForCall",
                            "nameLocations": [
                              "26977:27:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2132,
                            "src": "26977:27:5"
                          },
                          "referencedDeclaration": 2132,
                          "src": "26977:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                          }
                        },
                        "id": 2182,
                        "nodeType": "ArrayTypeName",
                        "src": "26977:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2190,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2188,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2140,
                        "src": "27080:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "27046:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForTokensForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2185,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2184,
                            "name": "TradeTokensForTokensForCall",
                            "nameLocations": [
                              "27050:27:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2132,
                            "src": "27050:27:5"
                          },
                          "referencedDeclaration": 2132,
                          "src": "27050:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                          }
                        },
                        "id": 2186,
                        "nodeType": "ArrayTypeName",
                        "src": "27050:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                        }
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27046:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26977:118:5"
                },
                {
                  "assignments": [
                    2192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2192,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "27107:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "27102:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2191,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "27102:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2194,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "27126:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27102:25:5"
                },
                {
                  "body": {
                    "id": 2266,
                    "nodeType": "Block",
                    "src": "27180:770:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2264,
                          "nodeType": "Block",
                          "src": "27273:671:5",
                          "statements": [
                            {
                              "assignments": [
                                2223
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2223,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForTokens",
                                  "nameLocation": "27311:20:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2264,
                                  "src": "27283:48:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokens"
                                  },
                                  "typeName": {
                                    "id": 2222,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2221,
                                      "name": "TradeTokensForTokens",
                                      "nameLocations": [
                                        "27283:20:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 895,
                                      "src": "27283:20:5"
                                    },
                                    "referencedDeclaration": 895,
                                    "src": "27283:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokens"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2231,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2224,
                                    "name": "tradesOfTokensForTokensOfAnAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 919,
                                    "src": "27334:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2228,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2225,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 941,
                                      "src": "27369:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2227,
                                    "indexExpression": {
                                      "id": 2226,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2196,
                                      "src": "27381:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "27369:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "27334:50:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                    "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                                  }
                                },
                                "id": 2230,
                                "indexExpression": {
                                  "id": 2229,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2207,
                                  "src": "27385:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "27334:53:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                                  "typeString": "struct Dex.TradeTokensForTokens storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "27283:104:5"
                            },
                            {
                              "assignments": [
                                2234
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2234,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForTokensForCall",
                                  "nameLocation": "27432:27:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2264,
                                  "src": "27397:62:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall"
                                  },
                                  "typeName": {
                                    "id": 2233,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2232,
                                      "name": "TradeTokensForTokensForCall",
                                      "nameLocations": [
                                        "27397:27:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2132,
                                      "src": "27397:27:5"
                                    },
                                    "referencedDeclaration": 2132,
                                    "src": "27397:27:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2251,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2236,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 941,
                                      "src": "27502:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2238,
                                    "indexExpression": {
                                      "id": 2237,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2196,
                                      "src": "27514:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "27502:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2239,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2207,
                                    "src": "27528:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2240,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "27541:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2241,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "27562:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 886,
                                    "src": "27541:40:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2242,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "27593:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2243,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "27614:18:5",
                                    "memberName": "tradingTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 888,
                                    "src": "27593:39:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2244,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "27644:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2245,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "27665:22:5",
                                    "memberName": "tradingForTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 890,
                                    "src": "27644:43:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2246,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "27699:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2247,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "27720:21:5",
                                    "memberName": "tradingForTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 892,
                                    "src": "27699:42:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2248,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "27753:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2249,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "27774:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 894,
                                    "src": "27753:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2235,
                                  "name": "TradeTokensForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2132,
                                  "src": "27462:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr_$",
                                    "typeString": "type(struct Dex.TradeTokensForTokensForCall storage pointer)"
                                  }
                                },
                                "id": 2250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27462:335:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "27397:400:5"
                            },
                            {
                              "expression": {
                                "id": 2256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2252,
                                    "name": "tradeTokensForTokensResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2183,
                                    "src": "27808:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                                    }
                                  },
                                  "id": 2254,
                                  "indexExpression": {
                                    "id": 2253,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2192,
                                    "src": "27838:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "27808:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2255,
                                  "name": "tradeTokensForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2234,
                                  "src": "27858:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                  }
                                },
                                "src": "27808:77:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                }
                              },
                              "id": 2257,
                              "nodeType": "ExpressionStatement",
                              "src": "27808:77:5"
                            },
                            {
                              "expression": {
                                "id": 2262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2258,
                                  "name": "indexOfResultArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2192,
                                  "src": "27896:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2259,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2192,
                                    "src": "27915:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27934:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "27915:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27896:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2263,
                              "nodeType": "ExpressionStatement",
                              "src": "27896:39:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2210,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2207,
                            "src": "27205:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2211,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "27209:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2215,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2212,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "27244:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2214,
                                "indexExpression": {
                                  "id": 2213,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2196,
                                  "src": "27256:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "27244:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27209:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "27260:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "27209:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27205:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2265,
                        "initializationExpression": {
                          "assignments": [
                            2207
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2207,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "27198:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2265,
                              "src": "27193:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2206,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "27193:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2209,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27202:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "27193:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "27268:3:5",
                            "subExpression": {
                              "id": 2218,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2207,
                              "src": "27268:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2220,
                          "nodeType": "ExpressionStatement",
                          "src": "27268:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "27188:756:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2199,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2196,
                      "src": "27151:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2200,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "27155:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27167:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "27155:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27151:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2267,
                  "initializationExpression": {
                    "assignments": [
                      2196
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2196,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "27144:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "27139:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2195,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "27139:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2198,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27148:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27139:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "27175:3:5",
                      "subExpression": {
                        "id": 2203,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "27175:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2205,
                    "nodeType": "ExpressionStatement",
                    "src": "27175:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "27134:816:5"
                },
                {
                  "expression": {
                    "id": 2268,
                    "name": "tradeTokensForTokensResultArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2183,
                    "src": "27963:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2138,
                  "id": 2269,
                  "nodeType": "Return",
                  "src": "27956:36:5"
                }
              ]
            },
            "functionSelector": "15fb6839",
            "id": 2271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForTokensWithTokens",
            "nameLocation": "26645:28:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26673:2:5"
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "26697:36:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2135,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2134,
                        "name": "TradeTokensForTokensForCall",
                        "nameLocations": [
                          "26697:27:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2132,
                        "src": "26697:27:5"
                      },
                      "referencedDeclaration": 2132,
                      "src": "26697:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall"
                      }
                    },
                    "id": 2136,
                    "nodeType": "ArrayTypeName",
                    "src": "26697:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26696:38:5"
            },
            "scope": 2847,
            "src": "26636:1361:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEthForCall",
            "id": 2284,
            "members": [
              {
                "constant": false,
                "id": 2273,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "28124:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28116:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2272,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "28116:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2275,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "28141:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28136:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2274,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "28136:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2277,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "28176:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28168:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2276,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "28168:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2279,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "28206:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28201:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2278,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "28201:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2281,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "28235:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28230:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2280,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "28230:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2283,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "28265:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 2284,
                "src": "28260:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2282,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "28260:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEthForCall",
            "nameLocation": "28085:24:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "28078:205:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2430,
              "nodeType": "Block",
              "src": "28380:1255:5",
              "statements": [
                {
                  "assignments": [
                    2292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2292,
                      "mutability": "mutable",
                      "name": "amountOfTrades",
                      "nameLocation": "28392:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2430,
                      "src": "28387:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2291,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28387:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2294,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28409:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28387:23:5"
                },
                {
                  "body": {
                    "id": 2329,
                    "nodeType": "Block",
                    "src": "28463:150:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2327,
                          "nodeType": "Block",
                          "src": "28553:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2321,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2292,
                                  "src": "28563:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2322,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2292,
                                    "src": "28580:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28597:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "28580:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28563:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2326,
                              "nodeType": "ExpressionStatement",
                              "src": "28563:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2310,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "28488:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2311,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "28492:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 2315,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2312,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "28524:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2314,
                                "indexExpression": {
                                  "id": 2313,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2296,
                                  "src": "28536:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "28524:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28492:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 2316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28540:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28492:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28488:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2328,
                        "initializationExpression": {
                          "assignments": [
                            2307
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2307,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "28481:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2328,
                              "src": "28476:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2306,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "28476:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2309,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28485:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "28476:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "28548:3:5",
                            "subExpression": {
                              "id": 2318,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "28548:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2320,
                          "nodeType": "ExpressionStatement",
                          "src": "28548:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "28471:136:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "28434:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2300,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "28438:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "28450:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "28438:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28434:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2330,
                  "initializationExpression": {
                    "assignments": [
                      2296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28427:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "28422:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28422:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28431:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28422:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28458:3:5",
                      "subExpression": {
                        "id": 2303,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2296,
                        "src": "28458:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2305,
                    "nodeType": "ExpressionStatement",
                    "src": "28458:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "28417:196:5"
                },
                {
                  "assignments": [
                    2335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2335,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthResultArr",
                      "nameLocation": "28653:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2430,
                      "src": "28619:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2332,
                            "name": "TradeTokensForEthForCall",
                            "nameLocations": [
                              "28619:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2284,
                            "src": "28619:24:5"
                          },
                          "referencedDeclaration": 2284,
                          "src": "28619:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall"
                          }
                        },
                        "id": 2334,
                        "nodeType": "ArrayTypeName",
                        "src": "28619:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEthForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2342,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2340,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "28713:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "28682:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForEthForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2337,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2336,
                            "name": "TradeTokensForEthForCall",
                            "nameLocations": [
                              "28686:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2284,
                            "src": "28686:24:5"
                          },
                          "referencedDeclaration": 2284,
                          "src": "28686:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall"
                          }
                        },
                        "id": 2338,
                        "nodeType": "ArrayTypeName",
                        "src": "28686:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEthForCall[]"
                        }
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28682:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28619:109:5"
                },
                {
                  "assignments": [
                    2344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2344,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "28740:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2430,
                      "src": "28735:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28735:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2346,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28759:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28735:25:5"
                },
                {
                  "body": {
                    "id": 2426,
                    "nodeType": "Block",
                    "src": "28813:778:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2358,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "28825:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 2362,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2359,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "28841:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2361,
                                "indexExpression": {
                                  "id": 2360,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2348,
                                  "src": "28853:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "28841:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28825:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28857:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "28825:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 2364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28878:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "28825:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2425,
                        "nodeType": "IfStatement",
                        "src": "28821:764:5",
                        "trueBody": {
                          "id": 2424,
                          "nodeType": "Block",
                          "src": "28884:701:5",
                          "statements": [
                            {
                              "body": {
                                "id": 2422,
                                "nodeType": "Block",
                                "src": "28976:601:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2383
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2383,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForEth",
                                        "nameLocation": "29013:17:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2422,
                                        "src": "28988:42:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth"
                                        },
                                        "typeName": {
                                          "id": 2382,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2381,
                                            "name": "TradeTokensForEth",
                                            "nameLocations": [
                                              "28988:17:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 904,
                                            "src": "28988:17:5"
                                          },
                                          "referencedDeclaration": 904,
                                          "src": "28988:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForEth"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2391,
                                    "initialValue": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 2384,
                                          "name": "tradesOfTokensForEthOfAnAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 925,
                                          "src": "29033:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 2388,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 2385,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 941,
                                            "src": "29065:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2387,
                                          "indexExpression": {
                                            "id": 2386,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2348,
                                            "src": "29077:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29065:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "29033:47:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2390,
                                      "indexExpression": {
                                        "id": 2389,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2367,
                                        "src": "29081:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "29033:50:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "28988:95:5"
                                  },
                                  {
                                    "assignments": [
                                      2394
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2394,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForEthForCall",
                                        "nameLocation": "29127:24:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2422,
                                        "src": "29095:56:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall"
                                        },
                                        "typeName": {
                                          "id": 2393,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2392,
                                            "name": "TradeTokensForEthForCall",
                                            "nameLocations": [
                                              "29095:24:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2284,
                                            "src": "29095:24:5"
                                          },
                                          "referencedDeclaration": 2284,
                                          "src": "29095:24:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForEthForCall"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2409,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2396,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 941,
                                            "src": "29193:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2398,
                                          "indexExpression": {
                                            "id": 2397,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2348,
                                            "src": "29205:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29193:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2399,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2367,
                                          "src": "29221:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2400,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2383,
                                            "src": "29236:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2401,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "29254:19:5",
                                          "memberName": "tradingTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 897,
                                          "src": "29236:37:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2402,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2383,
                                            "src": "29287:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2403,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "29305:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 899,
                                          "src": "29287:36:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2404,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2383,
                                            "src": "29337:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2405,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "29355:19:5",
                                          "memberName": "tradingForEthAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 901,
                                          "src": "29337:37:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2406,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2383,
                                            "src": "29388:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2407,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "29406:13:5",
                                          "memberName": "alreadyTraded",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 903,
                                          "src": "29388:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 2395,
                                        "name": "TradeTokensForEthForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2284,
                                        "src": "29154:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_TradeTokensForEthForCall_$2284_storage_ptr_$",
                                          "typeString": "type(struct Dex.TradeTokensForEthForCall storage pointer)"
                                        }
                                      },
                                      "id": 2408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "29154:277:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "29095:336:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2410,
                                          "name": "tradeTokensForEthResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2335,
                                          "src": "29444:26:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                                          }
                                        },
                                        "id": 2412,
                                        "indexExpression": {
                                          "id": 2411,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2344,
                                          "src": "29471:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "29444:44:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2413,
                                        "name": "tradeTokensForEthForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2394,
                                        "src": "29491:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                        }
                                      },
                                      "src": "29444:71:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                      }
                                    },
                                    "id": 2415,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29444:71:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2420,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2416,
                                        "name": "indexOfResultArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2344,
                                        "src": "29527:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2419,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2417,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2344,
                                          "src": "29546:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2418,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "29565:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "29546:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "29527:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2421,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29527:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2370,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "28911:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2371,
                                      "name": "tradesOfTokensForEthOfAnAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 925,
                                      "src": "28915:31:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2375,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2372,
                                        "name": "dexUsersArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 941,
                                        "src": "28947:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2374,
                                      "indexExpression": {
                                        "id": 2373,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2348,
                                        "src": "28959:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28947:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28915:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "28963:6:5",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "28915:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28911:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2423,
                              "initializationExpression": {
                                "assignments": [
                                  2367
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2367,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "28904:1:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2423,
                                    "src": "28899:6:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2366,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "28899:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2369,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "28908:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "28899:10:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "28971:3:5",
                                  "subExpression": {
                                    "id": 2378,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2367,
                                    "src": "28971:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2380,
                                "nodeType": "ExpressionStatement",
                                "src": "28971:3:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "28894:683:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2351,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "28784:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2352,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "28788:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "28800:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "28788:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28784:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2427,
                  "initializationExpression": {
                    "assignments": [
                      2348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28777:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "28772:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28772:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2350,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28781:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28772:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28808:3:5",
                      "subExpression": {
                        "id": 2355,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2348,
                        "src": "28808:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2357,
                    "nodeType": "ExpressionStatement",
                    "src": "28808:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "28767:824:5"
                },
                {
                  "expression": {
                    "id": 2428,
                    "name": "tradeTokensForEthResultArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2335,
                    "src": "29604:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2290,
                  "id": 2429,
                  "nodeType": "Return",
                  "src": "29597:33:5"
                }
              ]
            },
            "functionSelector": "b25cfc90",
            "id": 2431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForTokensWithEth",
            "nameLocation": "28296:25:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28321:2:5"
            },
            "returnParameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2289,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2431,
                  "src": "28345:33:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeTokensForEthForCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2287,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2286,
                        "name": "TradeTokensForEthForCall",
                        "nameLocations": [
                          "28345:24:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2284,
                        "src": "28345:24:5"
                      },
                      "referencedDeclaration": 2284,
                      "src": "28345:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall"
                      }
                    },
                    "id": 2288,
                    "nodeType": "ArrayTypeName",
                    "src": "28345:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28344:35:5"
            },
            "scope": 2847,
            "src": "28287:1348:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokensForCall",
            "id": 2444,
            "members": [
              {
                "constant": false,
                "id": 2433,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "29685:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29677:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "29677:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2435,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "29702:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29697:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2434,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "29697:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2437,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "29734:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29729:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2436,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "29729:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2439,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "29764:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29756:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2438,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "29756:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2441,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "29797:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29792:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2440,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "29792:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2443,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "29829:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 2444,
                "src": "29824:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2442,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "29824:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokensForCall",
            "nameLocation": "29646:24:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "29639:208:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2590,
              "nodeType": "Block",
              "src": "29944:1258:5",
              "statements": [
                {
                  "assignments": [
                    2452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2452,
                      "mutability": "mutable",
                      "name": "amountOfTrades",
                      "nameLocation": "29956:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2590,
                      "src": "29951:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2451,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29951:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2454,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "29973:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29951:23:5"
                },
                {
                  "body": {
                    "id": 2489,
                    "nodeType": "Block",
                    "src": "30027:150:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2487,
                          "nodeType": "Block",
                          "src": "30117:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2481,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2452,
                                  "src": "30127:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2482,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2452,
                                    "src": "30144:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30161:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "30144:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30127:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2486,
                              "nodeType": "ExpressionStatement",
                              "src": "30127:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2470,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2467,
                            "src": "30052:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2471,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "30056:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2475,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2472,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "30088:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2474,
                                "indexExpression": {
                                  "id": 2473,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2456,
                                  "src": "30100:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "30088:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30056:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "30104:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "30056:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30052:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2488,
                        "initializationExpression": {
                          "assignments": [
                            2467
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2467,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "30045:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2488,
                              "src": "30040:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2466,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "30040:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2469,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30049:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "30040:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "30112:3:5",
                            "subExpression": {
                              "id": 2478,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "30112:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2480,
                          "nodeType": "ExpressionStatement",
                          "src": "30112:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "30035:136:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2459,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "29998:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2460,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "30002:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30014:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "30002:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29998:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2490,
                  "initializationExpression": {
                    "assignments": [
                      2456
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2456,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "29991:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2490,
                        "src": "29986:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2455,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "29986:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2458,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29995:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "29986:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "30022:3:5",
                      "subExpression": {
                        "id": 2463,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2456,
                        "src": "30022:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2465,
                    "nodeType": "ExpressionStatement",
                    "src": "30022:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "29981:196:5"
                },
                {
                  "assignments": [
                    2495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2495,
                      "mutability": "mutable",
                      "name": "tradeEthForTokensResultArr",
                      "nameLocation": "30217:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2590,
                      "src": "30183:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2493,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2492,
                            "name": "TradeEthForTokensForCall",
                            "nameLocations": [
                              "30183:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2444,
                            "src": "30183:24:5"
                          },
                          "referencedDeclaration": 2444,
                          "src": "30183:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall"
                          }
                        },
                        "id": 2494,
                        "nodeType": "ArrayTypeName",
                        "src": "30183:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeEthForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2500,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "30277:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "30246:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeEthForTokensForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2497,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2496,
                            "name": "TradeEthForTokensForCall",
                            "nameLocations": [
                              "30250:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2444,
                            "src": "30250:24:5"
                          },
                          "referencedDeclaration": 2444,
                          "src": "30250:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall"
                          }
                        },
                        "id": 2498,
                        "nodeType": "ArrayTypeName",
                        "src": "30250:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeEthForTokensForCall[]"
                        }
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30246:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30183:109:5"
                },
                {
                  "assignments": [
                    2504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2504,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "30304:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2590,
                      "src": "30299:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2503,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30299:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "30323:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30299:25:5"
                },
                {
                  "body": {
                    "id": 2586,
                    "nodeType": "Block",
                    "src": "30377:781:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2518,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "30389:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$938_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 2522,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2519,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "30405:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2521,
                                "indexExpression": {
                                  "id": 2520,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2508,
                                  "src": "30417:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "30405:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30389:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$938_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 2523,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "30421:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "30389:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 2524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30442:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "30389:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2585,
                        "nodeType": "IfStatement",
                        "src": "30385:767:5",
                        "trueBody": {
                          "id": 2584,
                          "nodeType": "Block",
                          "src": "30448:704:5",
                          "statements": [
                            {
                              "body": {
                                "id": 2582,
                                "nodeType": "Block",
                                "src": "30540:604:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2543
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2543,
                                        "mutability": "mutable",
                                        "name": "tradeEthForTokens",
                                        "nameLocation": "30577:17:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2582,
                                        "src": "30552:42:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokens"
                                        },
                                        "typeName": {
                                          "id": 2542,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2541,
                                            "name": "TradeEthForTokens",
                                            "nameLocations": [
                                              "30552:17:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 913,
                                            "src": "30552:17:5"
                                          },
                                          "referencedDeclaration": 913,
                                          "src": "30552:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                                            "typeString": "struct Dex.TradeEthForTokens"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2551,
                                    "initialValue": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 2544,
                                          "name": "tradesOfEthForTokensOfAnAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 931,
                                          "src": "30597:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 2548,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 2545,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 941,
                                            "src": "30629:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2547,
                                          "indexExpression": {
                                            "id": 2546,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2508,
                                            "src": "30641:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "30629:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "30597:47:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2550,
                                      "indexExpression": {
                                        "id": 2549,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2527,
                                        "src": "30645:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "30597:50:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "30552:95:5"
                                  },
                                  {
                                    "assignments": [
                                      2554
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2554,
                                        "mutability": "mutable",
                                        "name": "tradeEthForTokensForCall",
                                        "nameLocation": "30691:24:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2582,
                                        "src": "30659:56:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall"
                                        },
                                        "typeName": {
                                          "id": 2553,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2552,
                                            "name": "TradeEthForTokensForCall",
                                            "nameLocations": [
                                              "30659:24:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2444,
                                            "src": "30659:24:5"
                                          },
                                          "referencedDeclaration": 2444,
                                          "src": "30659:24:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                                            "typeString": "struct Dex.TradeEthForTokensForCall"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2569,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2556,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 941,
                                            "src": "30757:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2558,
                                          "indexExpression": {
                                            "id": 2557,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2508,
                                            "src": "30769:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "30757:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2559,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2527,
                                          "src": "30785:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2560,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "30800:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2561,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "30818:16:5",
                                          "memberName": "tradingEthAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 906,
                                          "src": "30800:34:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2562,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "30848:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2563,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "30866:22:5",
                                          "memberName": "tradingForTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 908,
                                          "src": "30848:40:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2564,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "30902:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2565,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "30920:21:5",
                                          "memberName": "tradingForTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 910,
                                          "src": "30902:39:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2566,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2543,
                                            "src": "30955:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2567,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "30973:13:5",
                                          "memberName": "alreadyTraded",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 912,
                                          "src": "30955:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 2555,
                                        "name": "TradeEthForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2444,
                                        "src": "30718:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_TradeEthForTokensForCall_$2444_storage_ptr_$",
                                          "typeString": "type(struct Dex.TradeEthForTokensForCall storage pointer)"
                                        }
                                      },
                                      "id": 2568,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "30718:280:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "30659:339:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2574,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2570,
                                          "name": "tradeEthForTokensResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2495,
                                          "src": "31011:26:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                                          }
                                        },
                                        "id": 2572,
                                        "indexExpression": {
                                          "id": 2571,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2504,
                                          "src": "31038:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "31011:44:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2573,
                                        "name": "tradeEthForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2554,
                                        "src": "31058:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                        }
                                      },
                                      "src": "31011:71:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                      }
                                    },
                                    "id": 2575,
                                    "nodeType": "ExpressionStatement",
                                    "src": "31011:71:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2580,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2576,
                                        "name": "indexOfResultArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2504,
                                        "src": "31094:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2579,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2577,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2504,
                                          "src": "31113:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2578,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "31132:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "31113:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "31094:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2581,
                                    "nodeType": "ExpressionStatement",
                                    "src": "31094:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2530,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2527,
                                  "src": "30475:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2531,
                                      "name": "tradesOfEthForTokensOfAnAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 931,
                                      "src": "30479:31:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2535,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2532,
                                        "name": "dexUsersArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 941,
                                        "src": "30511:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2534,
                                      "indexExpression": {
                                        "id": 2533,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2508,
                                        "src": "30523:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "30511:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30479:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                      "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "30527:6:5",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "30479:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30475:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2583,
                              "initializationExpression": {
                                "assignments": [
                                  2527
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2527,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "30468:1:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2583,
                                    "src": "30463:6:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2526,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "30463:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2529,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "30472:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "30463:10:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "30535:3:5",
                                  "subExpression": {
                                    "id": 2538,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2527,
                                    "src": "30535:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2540,
                                "nodeType": "ExpressionStatement",
                                "src": "30535:3:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "30458:686:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2511,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2508,
                      "src": "30348:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2512,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "30352:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "30364:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "30352:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30348:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2587,
                  "initializationExpression": {
                    "assignments": [
                      2508
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2508,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "30341:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2587,
                        "src": "30336:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2507,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "30336:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2510,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30345:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30336:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "30372:3:5",
                      "subExpression": {
                        "id": 2515,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "30372:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2517,
                    "nodeType": "ExpressionStatement",
                    "src": "30372:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "30331:827:5"
                },
                {
                  "expression": {
                    "id": 2588,
                    "name": "tradeEthForTokensResultArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2495,
                    "src": "31171:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2450,
                  "id": 2589,
                  "nodeType": "Return",
                  "src": "31164:33:5"
                }
              ]
            },
            "functionSelector": "4737ab8d",
            "id": 2591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForEthWithTokens",
            "nameLocation": "29860:25:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29885:2:5"
            },
            "returnParameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2591,
                  "src": "29909:33:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeEthForTokensForCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2447,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2446,
                        "name": "TradeEthForTokensForCall",
                        "nameLocations": [
                          "29909:24:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2444,
                        "src": "29909:24:5"
                      },
                      "referencedDeclaration": 2444,
                      "src": "29909:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall"
                      }
                    },
                    "id": 2448,
                    "nodeType": "ArrayTypeName",
                    "src": "29909:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29908:35:5"
            },
            "scope": 2847,
            "src": "29851:1351:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2599,
              "nodeType": "Block",
              "src": "31268:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 2597,
                    "name": "dexUsersArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 941,
                    "src": "31281:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2596,
                  "id": 2598,
                  "nodeType": "Return",
                  "src": "31274:18:5"
                }
              ]
            },
            "functionSelector": "08973378",
            "id": 2600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDexUsers",
            "nameLocation": "31215:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31226:2:5"
            },
            "returnParameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2600,
                  "src": "31250:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2593,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "31250:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2594,
                    "nodeType": "ArrayTypeName",
                    "src": "31250:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31249:18:5"
            },
            "scope": 2847,
            "src": "31206:91:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.AllTradesOfAccount",
            "id": 2613,
            "members": [
              {
                "constant": false,
                "id": 2604,
                "mutability": "mutable",
                "name": "tradeTokensForTokensForCall",
                "nameLocation": "31363:27:5",
                "nodeType": "VariableDeclaration",
                "scope": 2613,
                "src": "31333:57:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2602,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2601,
                      "name": "TradeTokensForTokensForCall",
                      "nameLocations": [
                        "31333:27:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2132,
                      "src": "31333:27:5"
                    },
                    "referencedDeclaration": 2132,
                    "src": "31333:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ArrayTypeName",
                  "src": "31333:29:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2608,
                "mutability": "mutable",
                "name": "tradeTokensForEthForCall",
                "nameLocation": "31423:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2613,
                "src": "31396:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEthForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2606,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2605,
                      "name": "TradeTokensForEthForCall",
                      "nameLocations": [
                        "31396:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2284,
                      "src": "31396:24:5"
                    },
                    "referencedDeclaration": 2284,
                    "src": "31396:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall"
                    }
                  },
                  "id": 2607,
                  "nodeType": "ArrayTypeName",
                  "src": "31396:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEthForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2612,
                "mutability": "mutable",
                "name": "tradeEthForTokensForCall",
                "nameLocation": "31480:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2613,
                "src": "31453:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2609,
                      "name": "TradeEthForTokensForCall",
                      "nameLocations": [
                        "31453:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2444,
                      "src": "31453:24:5"
                    },
                    "referencedDeclaration": 2444,
                    "src": "31453:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ArrayTypeName",
                  "src": "31453:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllTradesOfAccount",
            "nameLocation": "31308:18:5",
            "nodeType": "StructDefinition",
            "scope": 2847,
            "src": "31301:208:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2845,
              "nodeType": "Block",
              "src": "31607:2728:5",
              "statements": [
                {
                  "assignments": [
                    2623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2623,
                      "mutability": "mutable",
                      "name": "allTradesOfAccount",
                      "nameLocation": "31639:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2845,
                      "src": "31613:44:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                        "typeString": "struct Dex.AllTradesOfAccount"
                      },
                      "typeName": {
                        "id": 2622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2621,
                          "name": "AllTradesOfAccount",
                          "nameLocations": [
                            "31613:18:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2613,
                          "src": "31613:18:5"
                        },
                        "referencedDeclaration": 2613,
                        "src": "31613:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_storage_ptr",
                          "typeString": "struct Dex.AllTradesOfAccount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2624,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31613:44:5"
                },
                {
                  "expression": {
                    "id": 2637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2625,
                        "name": "allTradesOfAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "31664:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                          "typeString": "struct Dex.AllTradesOfAccount memory"
                        }
                      },
                      "id": 2627,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "31683:27:5",
                      "memberName": "tradeTokensForTokensForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2604,
                      "src": "31664:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 2632,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "31747:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2634,
                            "indexExpression": {
                              "id": 2633,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "31782:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "31747:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "31790:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "31747:49:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "31713:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForTokensForCall memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2629,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2628,
                              "name": "TradeTokensForTokensForCall",
                              "nameLocations": [
                                "31717:27:5"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2132,
                              "src": "31717:27:5"
                            },
                            "referencedDeclaration": 2132,
                            "src": "31717:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                              "typeString": "struct Dex.TradeTokensForTokensForCall"
                            }
                          },
                          "id": 2630,
                          "nodeType": "ArrayTypeName",
                          "src": "31717:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_storage_$dyn_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                          }
                        }
                      },
                      "id": 2636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31713:84:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                      }
                    },
                    "src": "31664:133:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "id": 2638,
                  "nodeType": "ExpressionStatement",
                  "src": "31664:133:5"
                },
                {
                  "assignments": [
                    2640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2640,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "31809:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2845,
                      "src": "31804:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2639,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31804:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2642,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "31828:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31804:25:5"
                },
                {
                  "body": {
                    "id": 2697,
                    "nodeType": "Block",
                    "src": "31913:645:5",
                    "statements": [
                      {
                        "assignments": [
                          2658
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2658,
                            "mutability": "mutable",
                            "name": "tradeTokensForTokens",
                            "nameLocation": "31949:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "31921:48:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForTokens"
                            },
                            "typeName": {
                              "id": 2657,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2656,
                                "name": "TradeTokensForTokens",
                                "nameLocations": [
                                  "31921:20:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 895,
                                "src": "31921:20:5"
                              },
                              "referencedDeclaration": 895,
                              "src": "31921:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                                "typeString": "struct Dex.TradeTokensForTokens"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2664,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2659,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "31972:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2661,
                            "indexExpression": {
                              "id": 2660,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "32007:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "31972:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2663,
                          "indexExpression": {
                            "id": 2662,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "32015:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31972:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31921:96:5"
                      },
                      {
                        "assignments": [
                          2667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2667,
                            "mutability": "mutable",
                            "name": "tradeTokensForTokensForCall",
                            "nameLocation": "32060:27:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2697,
                            "src": "32025:62:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForTokensForCall"
                            },
                            "typeName": {
                              "id": 2666,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2665,
                                "name": "TradeTokensForTokensForCall",
                                "nameLocations": [
                                  "32025:27:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2132,
                                "src": "32025:27:5"
                              },
                              "referencedDeclaration": 2132,
                              "src": "32025:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr",
                                "typeString": "struct Dex.TradeTokensForTokensForCall"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2682,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2669,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "32128:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2670,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "32144:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2671,
                                "name": "tradeTokensForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2658,
                                "src": "32155:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32176:19:5",
                              "memberName": "tradingTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 886,
                              "src": "32155:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2673,
                                "name": "tradeTokensForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2658,
                                "src": "32205:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 2674,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32226:18:5",
                              "memberName": "tradingTokenAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 888,
                              "src": "32205:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2675,
                                "name": "tradeTokensForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2658,
                                "src": "32254:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 2676,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32275:22:5",
                              "memberName": "tradingForTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 890,
                              "src": "32254:43:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2677,
                                "name": "tradeTokensForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2658,
                                "src": "32307:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 2678,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32328:21:5",
                              "memberName": "tradingForTokenAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 892,
                              "src": "32307:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2679,
                                "name": "tradeTokensForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2658,
                                "src": "32359:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 2680,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32380:13:5",
                              "memberName": "alreadyTraded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 894,
                              "src": "32359:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2668,
                            "name": "TradeTokensForTokensForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "32090:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokensForCall_$2132_storage_ptr_$",
                              "typeString": "type(struct Dex.TradeTokensForTokensForCall storage pointer)"
                            }
                          },
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32090:311:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32025:376:5"
                      },
                      {
                        "expression": {
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 2683,
                                "name": "allTradesOfAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2623,
                                "src": "32410:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                                  "typeString": "struct Dex.AllTradesOfAccount memory"
                                }
                              },
                              "id": 2686,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "32429:27:5",
                              "memberName": "tradeTokensForTokensForCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2604,
                              "src": "32410:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                              }
                            },
                            "id": 2687,
                            "indexExpression": {
                              "id": 2685,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "32457:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "32410:64:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2688,
                            "name": "tradeTokensForTokensForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "32477:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                            }
                          },
                          "src": "32410:94:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$2132_memory_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                          }
                        },
                        "id": 2690,
                        "nodeType": "ExpressionStatement",
                        "src": "32410:94:5"
                      },
                      {
                        "expression": {
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2691,
                            "name": "indexOfResultArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2640,
                            "src": "32512:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2692,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "32531:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32550:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "32531:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32512:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2696,
                        "nodeType": "ExpressionStatement",
                        "src": "32512:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2647,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "31853:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2648,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "31857:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 2650,
                        "indexExpression": {
                          "id": 2649,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2615,
                          "src": "31892:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "31857:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 2651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "31900:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "31857:49:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31853:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2698,
                  "initializationExpression": {
                    "assignments": [
                      2644
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2644,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "31846:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2698,
                        "src": "31841:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2643,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "31841:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2646,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31850:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "31841:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "31908:3:5",
                      "subExpression": {
                        "id": 2653,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "31908:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2655,
                    "nodeType": "ExpressionStatement",
                    "src": "31908:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "31836:722:5"
                },
                {
                  "expression": {
                    "id": 2711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2699,
                        "name": "allTradesOfAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "32564:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                          "typeString": "struct Dex.AllTradesOfAccount memory"
                        }
                      },
                      "id": 2701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "32583:24:5",
                      "memberName": "tradeTokensForEthForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2608,
                      "src": "32564:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 2706,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "32641:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 2708,
                            "indexExpression": {
                              "id": 2707,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "32673:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "32641:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 2709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "32681:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "32641:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "32610:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForEthForCall memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2703,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2702,
                              "name": "TradeTokensForEthForCall",
                              "nameLocations": [
                                "32614:24:5"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2284,
                              "src": "32614:24:5"
                            },
                            "referencedDeclaration": 2284,
                            "src": "32614:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                              "typeString": "struct Dex.TradeTokensForEthForCall"
                            }
                          },
                          "id": 2704,
                          "nodeType": "ArrayTypeName",
                          "src": "32614:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_storage_$dyn_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall[]"
                          }
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "32610:78:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                      }
                    },
                    "src": "32564:124:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                    }
                  },
                  "id": 2712,
                  "nodeType": "ExpressionStatement",
                  "src": "32564:124:5"
                },
                {
                  "expression": {
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2713,
                      "name": "indexOfResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2640,
                      "src": "32695:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32714:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "32695:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "32695:20:5"
                },
                {
                  "body": {
                    "id": 2769,
                    "nodeType": "Block",
                    "src": "32796:554:5",
                    "statements": [
                      {
                        "assignments": [
                          2732
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2732,
                            "mutability": "mutable",
                            "name": "tradeTokensForEth",
                            "nameLocation": "32829:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2769,
                            "src": "32804:42:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForEth"
                            },
                            "typeName": {
                              "id": 2731,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2730,
                                "name": "TradeTokensForEth",
                                "nameLocations": [
                                  "32804:17:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 904,
                                "src": "32804:17:5"
                              },
                              "referencedDeclaration": 904,
                              "src": "32804:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                                "typeString": "struct Dex.TradeTokensForEth"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2738,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2733,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "32849:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 2735,
                            "indexExpression": {
                              "id": 2734,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "32881:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "32849:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 2737,
                          "indexExpression": {
                            "id": 2736,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "32889:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "32849:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32804:87:5"
                      },
                      {
                        "assignments": [
                          2741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2741,
                            "mutability": "mutable",
                            "name": "tradeTokensForEthForCall",
                            "nameLocation": "32931:24:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2769,
                            "src": "32899:56:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForEthForCall"
                            },
                            "typeName": {
                              "id": 2740,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2739,
                                "name": "TradeTokensForEthForCall",
                                "nameLocations": [
                                  "32899:24:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2284,
                                "src": "32899:24:5"
                              },
                              "referencedDeclaration": 2284,
                              "src": "32899:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_storage_ptr",
                                "typeString": "struct Dex.TradeTokensForEthForCall"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2754,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2743,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "32993:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2744,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2718,
                              "src": "33009:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2745,
                                "name": "tradeTokensForEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2732,
                                "src": "33020:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEth memory"
                                }
                              },
                              "id": 2746,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33038:19:5",
                              "memberName": "tradingTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 897,
                              "src": "33020:37:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2747,
                                "name": "tradeTokensForEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2732,
                                "src": "33067:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEth memory"
                                }
                              },
                              "id": 2748,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33085:18:5",
                              "memberName": "tradingTokenAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 899,
                              "src": "33067:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2749,
                                "name": "tradeTokensForEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2732,
                                "src": "33113:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEth memory"
                                }
                              },
                              "id": 2750,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33131:19:5",
                              "memberName": "tradingForEthAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 901,
                              "src": "33113:37:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2751,
                                "name": "tradeTokensForEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2732,
                                "src": "33160:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEth memory"
                                }
                              },
                              "id": 2752,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33178:13:5",
                              "memberName": "alreadyTraded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 903,
                              "src": "33160:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2742,
                            "name": "TradeTokensForEthForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2284,
                            "src": "32958:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeTokensForEthForCall_$2284_storage_ptr_$",
                              "typeString": "type(struct Dex.TradeTokensForEthForCall storage pointer)"
                            }
                          },
                          "id": 2753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32958:241:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32899:300:5"
                      },
                      {
                        "expression": {
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 2755,
                                "name": "allTradesOfAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2623,
                                "src": "33208:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                                  "typeString": "struct Dex.AllTradesOfAccount memory"
                                }
                              },
                              "id": 2758,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33227:24:5",
                              "memberName": "tradeTokensForEthForCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2608,
                              "src": "33208:43:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2284_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                              }
                            },
                            "id": 2759,
                            "indexExpression": {
                              "id": 2757,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "33252:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "33208:61:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForEthForCall memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2760,
                            "name": "tradeTokensForEthForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2741,
                            "src": "33272:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                              "typeString": "struct Dex.TradeTokensForEthForCall memory"
                            }
                          },
                          "src": "33208:88:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2284_memory_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall memory"
                          }
                        },
                        "id": 2762,
                        "nodeType": "ExpressionStatement",
                        "src": "33208:88:5"
                      },
                      {
                        "expression": {
                          "id": 2767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2763,
                            "name": "indexOfResultArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2640,
                            "src": "33304:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2764,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "33323:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33342:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "33323:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "33304:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2768,
                        "nodeType": "ExpressionStatement",
                        "src": "33304:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2721,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2718,
                      "src": "32739:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2722,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "32743:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 2724,
                        "indexExpression": {
                          "id": 2723,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2615,
                          "src": "32775:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "32743:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "32783:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "32743:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32739:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2770,
                  "initializationExpression": {
                    "assignments": [
                      2718
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2718,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "32732:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2770,
                        "src": "32727:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2717,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "32727:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2720,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32736:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "32727:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "32791:3:5",
                      "subExpression": {
                        "id": 2727,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "32791:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2729,
                    "nodeType": "ExpressionStatement",
                    "src": "32791:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "32722:628:5"
                },
                {
                  "expression": {
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2771,
                        "name": "allTradesOfAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "33510:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                          "typeString": "struct Dex.AllTradesOfAccount memory"
                        }
                      },
                      "id": 2773,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "33529:24:5",
                      "memberName": "tradeEthForTokensForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2612,
                      "src": "33510:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 2778,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "33587:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2780,
                            "indexExpression": {
                              "id": 2779,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "33619:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "33587:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "33627:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "33587:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "33556:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Dex.TradeEthForTokensForCall memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2775,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2774,
                              "name": "TradeEthForTokensForCall",
                              "nameLocations": [
                                "33560:24:5"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2444,
                              "src": "33560:24:5"
                            },
                            "referencedDeclaration": 2444,
                            "src": "33560:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                              "typeString": "struct Dex.TradeEthForTokensForCall"
                            }
                          },
                          "id": 2776,
                          "nodeType": "ArrayTypeName",
                          "src": "33560:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_storage_$dyn_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall[]"
                          }
                        }
                      },
                      "id": 2782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33556:78:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                      }
                    },
                    "src": "33510:124:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "33510:124:5"
                },
                {
                  "expression": {
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2785,
                      "name": "indexOfResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2640,
                      "src": "33641:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33660:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "33641:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2788,
                  "nodeType": "ExpressionStatement",
                  "src": "33641:20:5"
                },
                {
                  "body": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "33742:557:5",
                    "statements": [
                      {
                        "assignments": [
                          2804
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2804,
                            "mutability": "mutable",
                            "name": "tradeEthForTokens",
                            "nameLocation": "33775:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "33750:42:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                              "typeString": "struct Dex.TradeEthForTokens"
                            },
                            "typeName": {
                              "id": 2803,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2802,
                                "name": "TradeEthForTokens",
                                "nameLocations": [
                                  "33750:17:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 913,
                                "src": "33750:17:5"
                              },
                              "referencedDeclaration": 913,
                              "src": "33750:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                                "typeString": "struct Dex.TradeEthForTokens"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2810,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2805,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 931,
                              "src": "33795:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 2807,
                            "indexExpression": {
                              "id": 2806,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "33827:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "33795:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 2809,
                          "indexExpression": {
                            "id": 2808,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2790,
                            "src": "33835:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "33795:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33750:87:5"
                      },
                      {
                        "assignments": [
                          2813
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2813,
                            "mutability": "mutable",
                            "name": "tradeEthForTokensForCall",
                            "nameLocation": "33877:24:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "33845:56:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                              "typeString": "struct Dex.TradeEthForTokensForCall"
                            },
                            "typeName": {
                              "id": 2812,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2811,
                                "name": "TradeEthForTokensForCall",
                                "nameLocations": [
                                  "33845:24:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2444,
                                "src": "33845:24:5"
                              },
                              "referencedDeclaration": 2444,
                              "src": "33845:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_storage_ptr",
                                "typeString": "struct Dex.TradeEthForTokensForCall"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2826,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2815,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "33939:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2816,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "33955:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2817,
                                "name": "tradeEthForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2804,
                                "src": "33966:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokens memory"
                                }
                              },
                              "id": 2818,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "33984:16:5",
                              "memberName": "tradingEthAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 906,
                              "src": "33966:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2819,
                                "name": "tradeEthForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2804,
                                "src": "34010:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokens memory"
                                }
                              },
                              "id": 2820,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "34028:22:5",
                              "memberName": "tradingForTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 908,
                              "src": "34010:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2821,
                                "name": "tradeEthForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2804,
                                "src": "34060:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokens memory"
                                }
                              },
                              "id": 2822,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "34078:21:5",
                              "memberName": "tradingForTokenAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 910,
                              "src": "34060:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2823,
                                "name": "tradeEthForTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2804,
                                "src": "34109:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokens memory"
                                }
                              },
                              "id": 2824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "34127:13:5",
                              "memberName": "alreadyTraded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 912,
                              "src": "34109:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2814,
                            "name": "TradeEthForTokensForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2444,
                            "src": "33904:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeEthForTokensForCall_$2444_storage_ptr_$",
                              "typeString": "type(struct Dex.TradeEthForTokensForCall storage pointer)"
                            }
                          },
                          "id": 2825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33904:244:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33845:303:5"
                      },
                      {
                        "expression": {
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 2827,
                                "name": "allTradesOfAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2623,
                                "src": "34157:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                                  "typeString": "struct Dex.AllTradesOfAccount memory"
                                }
                              },
                              "id": 2830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "34176:24:5",
                              "memberName": "tradeEthForTokensForCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2612,
                              "src": "34157:43:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2444_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                              }
                            },
                            "id": 2831,
                            "indexExpression": {
                              "id": 2829,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "34201:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "34157:61:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                              "typeString": "struct Dex.TradeEthForTokensForCall memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2832,
                            "name": "tradeEthForTokensForCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2813,
                            "src": "34221:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                              "typeString": "struct Dex.TradeEthForTokensForCall memory"
                            }
                          },
                          "src": "34157:88:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2444_memory_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall memory"
                          }
                        },
                        "id": 2834,
                        "nodeType": "ExpressionStatement",
                        "src": "34157:88:5"
                      },
                      {
                        "expression": {
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2835,
                            "name": "indexOfResultArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2640,
                            "src": "34253:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2836,
                              "name": "indexOfResultArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "34272:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34291:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "34272:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34253:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2840,
                        "nodeType": "ExpressionStatement",
                        "src": "34253:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2793,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "33685:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2794,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "33689:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 2796,
                        "indexExpression": {
                          "id": 2795,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2615,
                          "src": "33721:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "33689:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 2797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "33729:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "33689:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33685:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2842,
                  "initializationExpression": {
                    "assignments": [
                      2790
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2790,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "33678:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "33673:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "33673:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2792,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33682:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "33673:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "33737:3:5",
                      "subExpression": {
                        "id": 2799,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "33737:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2801,
                    "nodeType": "ExpressionStatement",
                    "src": "33737:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "33668:631:5"
                },
                {
                  "expression": {
                    "id": 2843,
                    "name": "allTradesOfAccount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2623,
                    "src": "34312:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                      "typeString": "struct Dex.AllTradesOfAccount memory"
                    }
                  },
                  "functionReturnParameters": 2620,
                  "id": 2844,
                  "nodeType": "Return",
                  "src": "34305:25:5"
                }
              ]
            },
            "functionSelector": "3c0d2d7b",
            "id": 2846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTradesOfAccount",
            "nameLocation": "31522:21:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "31552:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "31544:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31544:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31543:16:5"
            },
            "returnParameters": {
              "id": 2620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2846,
                  "src": "31580:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_memory_ptr",
                    "typeString": "struct Dex.AllTradesOfAccount"
                  },
                  "typeName": {
                    "id": 2618,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2617,
                      "name": "AllTradesOfAccount",
                      "nameLocations": [
                        "31580:18:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2613,
                      "src": "31580:18:5"
                    },
                    "referencedDeclaration": 2613,
                    "src": "31580:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllTradesOfAccount_$2613_storage_ptr",
                      "typeString": "struct Dex.AllTradesOfAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31579:27:5"
            },
            "scope": 2847,
            "src": "31513:2822:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2848,
        "src": "122:34215:5",
        "usedErrors": [],
        "usedEvents": [
          800,
          810,
          820,
          832,
          842,
          852,
          864,
          874,
          884
        ]
      }
    ],
    "src": "39:34299:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEde6b95D35C7585814E5b972DC47Ab9890D49875",
      "transactionHash": "0x287555cdf804785a0f3171de08193045b00fa5b2082c6794f01b67cbf3493f5d"
    },
    "1727565956386": {
      "events": {},
      "links": {},
      "address": "0x712Dc4b5f2A188D259b06615fC0C2D6bB94a9a9F",
      "transactionHash": "0x4f0e77440864c17eb9919da3315ba9b5de026a90a9d499f68a7c5045e6493bd5"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-30T00:36:34.264Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}