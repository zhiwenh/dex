{
  "contractName": "Dex",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventTradeTokensForTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dexUsersArr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradeEthForTokensArr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradeTokensForEthArr",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradeTokensForTokensArr",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfEthForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForEthOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithOtherTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addEthToDexForTradeWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensFromOtherTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensForEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyEthForTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForEthWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForTokenWithToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tradingTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingForTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingForTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeTokensForTokensForCall[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForTokensWithEth",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tradingTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradingForEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeTokensForEth[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradesForEthWithTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tradingEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tradingForTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tradingForTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "alreadyTraded",
              "type": "bool"
            }
          ],
          "internalType": "struct Dex.TradeEthForTokens[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventTradeTokensForTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addEthToDexForTradeWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithOtherTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyEthForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensForEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensFromOtherTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForEthWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexUsersArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForEthWithTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeEthForTokens[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForTokenWithToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForTokensForCall[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradesForTokensWithEth\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForEth[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradeEthForTokensArr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradeTokensForEthArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradeTokensForTokensArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfEthForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForEthOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/Dex.sol\":{\"keccak256\":\"0x50c74374c1819c1c554871f5b188ea4bde7bcd61c52546f77bbd02251f781d22\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08e17a60adeeb09b8504600f8f2ac22a8ca7a934c574eeb5cd0e3206136d78ab\",\"dweb:/ipfs/QmPC8ZrvtHM76ZMhNnvREYy9X662Vc1uy2HWHdBccPS5RH\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:25324:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:6",
                "type": ""
              }
            ],
            "src": "466:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:6",
                "type": ""
              }
            ],
            "src": "568:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:6",
                "type": ""
              }
            ],
            "src": "696:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:6",
                "type": ""
              }
            ],
            "src": "841:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:6",
                "type": ""
              }
            ],
            "src": "924:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:6",
                "type": ""
              }
            ],
            "src": "1052:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:6",
                "type": ""
              }
            ],
            "src": "1197:474:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1759:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1782:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1764:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1752:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1730:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1737:3:6",
                "type": ""
              }
            ],
            "src": "1677:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1866:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1883:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1906:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1888:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1888:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1876:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1876:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1854:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1861:3:6",
                "type": ""
              }
            ],
            "src": "1801:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1967:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1977:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2002:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1995:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1995:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1988:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1988:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1977:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1949:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1959:7:6",
                "type": ""
              }
            ],
            "src": "1925:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2097:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2117:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2102:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2068:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2075:3:6",
                "type": ""
              }
            ],
            "src": "2021:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2312:365:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2322:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2334:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2330:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2322:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2403:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2416:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2427:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2412:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2412:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2359:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2359:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2359:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2484:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2497:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2508:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2493:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2493:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2440:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2440:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2566:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2579:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2590:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2575:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2575:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2522:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2522:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2522:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2642:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2655:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2666:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2651:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2651:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2604:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2604:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2604:66:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2260:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2272:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2280:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2288:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2296:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2307:4:6",
                "type": ""
              }
            ],
            "src": "2136:541:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2749:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2795:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2797:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2797:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2797:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2770:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2779:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2766:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2766:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2791:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2762:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2762:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2759:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2888:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2903:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2907:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2932:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2967:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2978:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2963:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2963:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2987:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2942:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2942:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2932:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2719:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2730:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2742:6:6",
                "type": ""
              }
            ],
            "src": "2683:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3222:448:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3232:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3244:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3255:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3240:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3232:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3313:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3326:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3337:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3322:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3322:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3269:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3269:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3269:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3394:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3407:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3418:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3403:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3403:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3350:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3350:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3476:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3489:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3500:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3485:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3485:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3432:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3432:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3558:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3571:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3582:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3514:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3514:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3514:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3634:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3647:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3658:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3643:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3596:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3596:67:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3162:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3174:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3182:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3190:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3198:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3206:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3217:4:6",
                "type": ""
              }
            ],
            "src": "3018:652:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3784:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3795:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3811:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3805:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3805:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3795:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3767:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3777:6:6",
                "type": ""
              }
            ],
            "src": "3676:148:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3975:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3992:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3997:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3985:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3985:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4013:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4032:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4037:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4028:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4013:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3947:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3952:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3963:11:6",
                "type": ""
              }
            ],
            "src": "3830:218:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4160:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4170:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "4178:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4170:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4191:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "4203:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4208:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4199:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4191:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "4147:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4155:4:6",
                "type": ""
              }
            ],
            "src": "4054:166:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4281:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4298:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4321:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4303:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4303:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4291:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4291:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4269:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4276:3:6",
                "type": ""
              }
            ],
            "src": "4226:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4395:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4412:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4435:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4417:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4417:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4405:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4405:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4405:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4383:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4390:3:6",
                "type": ""
              }
            ],
            "src": "4340:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4503:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4520:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4540:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4525:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4513:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4513:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4491:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4498:3:6",
                "type": ""
              }
            ],
            "src": "4454:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4751:789:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4761:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4777:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4782:4:6",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4773:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4773:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4765:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4797:176:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4844:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4874:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4881:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4870:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4870:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4864:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4864:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4848:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4934:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4952:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4957:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4948:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4948:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4900:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4900:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4900:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4983:182:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5036:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5066:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5073:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5062:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5062:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5056:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5056:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5040:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5126:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5144:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5149:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5140:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5140:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5092:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5092:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5092:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5175:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5227:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5257:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5264:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5253:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5253:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5247:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5231:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5317:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5335:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5340:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5331:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5331:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5283:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5283:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5283:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5366:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5410:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5440:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5447:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5436:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5436:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5430:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5430:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5414:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5494:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5512:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5517:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5508:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5508:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5466:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5466:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5466:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4738:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4745:3:6",
                "type": ""
              }
            ],
            "src": "4627:913:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5694:167:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5806:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5814:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5704:101:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5704:114:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5704:114:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5827:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5845:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5850:4:6",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5841:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5841:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "5827:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5667:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5675:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "5683:10:6",
                "type": ""
              }
            ],
            "src": "5546:315:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5976:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5986:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5998:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6003:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5994:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5994:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "5986:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5963:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "5971:4:6",
                "type": ""
              }
            ],
            "src": "5867:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6284:812:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6294:102:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6390:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6308:81:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6308:88:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6298:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6405:127:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6520:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6525:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6412:107:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6412:120:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6405:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6541:105:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6640:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6556:83:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6556:90:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "6545:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6655:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "6669:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6659:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6745:326:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6759:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6786:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6780:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6780:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "6763:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6806:138:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "6925:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6940:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "6813:111:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6813:131:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6806:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6957:104:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7054:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "6967:86:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6967:94:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6957:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6707:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6710:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6704:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6704:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6718:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6720:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6729:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6732:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6725:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6725:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6720:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6689:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6691:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6700:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "6695:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "6685:386:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7080:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7087:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7080:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6263:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6270:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6279:3:6",
                "type": ""
              }
            ],
            "src": "6092:1004:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7318:293:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7328:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7340:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7351:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7336:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7336:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7328:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7375:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7386:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7371:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7371:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7394:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7400:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7390:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7390:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7364:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7364:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7364:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7420:184:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7590:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7599:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7428:161:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7428:176:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7420:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7290:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7302:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7313:4:6",
                "type": ""
              }
            ],
            "src": "7102:509:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7736:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7747:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7763:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7757:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7747:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7719:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7729:6:6",
                "type": ""
              }
            ],
            "src": "7617:159:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7938:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7955:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7960:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7948:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7948:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7948:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7976:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7995:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8000:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7991:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7976:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7910:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7915:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7926:11:6",
                "type": ""
              }
            ],
            "src": "7782:229:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8134:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8144:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8152:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8144:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8165:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8177:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8182:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8173:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8173:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8165:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8121:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8129:4:6",
                "type": ""
              }
            ],
            "src": "8017:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8434:1156:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8444:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8460:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8465:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8456:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8456:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8448:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8480:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8517:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8547:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8554:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8543:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8543:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8537:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8537:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8521:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8607:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8625:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8630:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8621:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8621:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8573:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8573:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8573:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8656:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8706:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8736:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8743:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8732:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8732:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8726:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8726:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8710:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8796:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8814:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8819:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8810:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8810:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8762:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8762:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8762:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8845:178:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8894:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8924:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8931:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8920:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8920:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8914:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8914:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8898:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8984:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9002:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9007:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8998:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8998:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8950:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8950:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8950:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9033:182:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9086:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9116:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9123:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9112:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9112:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9106:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9106:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9090:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9176:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9194:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9199:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9190:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9190:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9142:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9142:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9142:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9225:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9277:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9307:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9314:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9303:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9303:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9297:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9297:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9281:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9367:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9385:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9390:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9381:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9381:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9333:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9333:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9333:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9416:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9460:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9490:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9497:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9486:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9486:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9480:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9480:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9464:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9544:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9562:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9567:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9558:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9558:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "9516:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9516:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9516:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8421:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8428:3:6",
                "type": ""
              }
            ],
            "src": "8288:1302:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9766:189:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9900:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9908:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "9776:123:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9776:136:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9776:136:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9921:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9939:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9944:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9935:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9935:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "9921:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9739:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9747:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "9755:10:6",
                "type": ""
              }
            ],
            "src": "9596:359:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10081:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10091:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10103:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10108:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10099:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10099:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "10091:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10068:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "10076:4:6",
                "type": ""
              }
            ],
            "src": "9961:158:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10431:878:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10441:113:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10548:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10455:92:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10455:99:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10445:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10563:138:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10689:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10694:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10570:118:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10570:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10563:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10710:116:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10820:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10725:94:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10725:101:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "10714:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10835:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "10849:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "10839:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10925:359:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10939:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "10966:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10960:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10960:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "10943:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10986:160:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "11127:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11142:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "10993:133:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10993:153:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10986:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11159:115:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11267:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11169:97:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11169:105:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11159:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10887:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10890:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10884:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10884:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10898:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10900:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10909:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10912:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10905:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10905:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10900:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10869:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10871:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10880:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "10875:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "10865:419:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11293:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11300:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11293:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10410:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10417:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10426:3:6",
                "type": ""
              }
            ],
            "src": "10217:1092:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11553:315:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11563:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11575:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11586:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11571:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11571:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11563:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11610:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11621:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11606:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11606:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11629:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11635:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11625:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11625:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11599:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11599:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11599:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11655:206:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11847:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11856:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11663:183:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11663:198:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11655:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11525:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11537:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11548:4:6",
                "type": ""
              }
            ],
            "src": "11315:553:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11974:519:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12020:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12022:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12022:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12022:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11995:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12004:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11991:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11991:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12016:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11987:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11987:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11984:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12113:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12128:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12142:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12132:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12157:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12192:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12203:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12188:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12188:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12212:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12167:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12167:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12157:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12240:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12255:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12269:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12259:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12285:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12320:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12331:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12316:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12316:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12340:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12295:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12295:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "12285:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12368:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12383:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12397:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12387:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12413:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12448:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12459:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12444:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12444:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12468:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12423:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12423:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "12413:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11928:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11939:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11951:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11959:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11967:6:6",
                "type": ""
              }
            ],
            "src": "11874:619:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12616:648:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12663:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12665:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12665:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12665:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12637:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12646:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12633:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12633:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12658:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12629:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12629:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "12626:120:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12756:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12771:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12785:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12775:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12800:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12835:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12846:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12831:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12831:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12855:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12810:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12810:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12800:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12883:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12898:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12912:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12902:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12928:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12963:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12974:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12959:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12959:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12983:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12938:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12938:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "12928:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13011:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13026:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13040:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13030:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13056:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13091:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13102:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13087:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13087:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13111:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "13066:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13066:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "13056:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13139:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13154:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13168:2:6",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13158:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13184:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13219:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13230:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13215:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13215:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13239:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13194:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13194:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "13184:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12562:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12573:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12585:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12593:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12601:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12609:6:6",
                "type": ""
              }
            ],
            "src": "12499:765:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13370:519:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13416:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "13418:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13418:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13418:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13391:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13400:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13387:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13387:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13412:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13383:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13383:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "13380:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13509:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13524:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13538:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13528:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13553:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13588:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13599:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13584:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13584:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13608:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13563:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13563:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13553:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13636:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13651:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13665:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13655:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13681:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13716:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13727:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13712:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13712:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13736:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "13691:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13691:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "13681:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13764:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13779:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13793:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13783:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13809:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13844:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13855:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13840:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13840:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13864:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13819:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13819:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "13809:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13324:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13335:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13347:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13355:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13363:6:6",
                "type": ""
              }
            ],
            "src": "13270:619:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14003:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14014:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14030:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14024:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14024:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14014:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13986:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13996:6:6",
                "type": ""
              }
            ],
            "src": "13895:148:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14194:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14211:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14216:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14204:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14204:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14204:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14232:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14251:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14256:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14247:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14247:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "14232:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14166:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14171:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "14182:11:6",
                "type": ""
              }
            ],
            "src": "14049:218:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14379:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14389:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "14397:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "14389:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14410:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "14422:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14427:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14418:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14418:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "14410:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "14366:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14374:4:6",
                "type": ""
              }
            ],
            "src": "14273:166:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14637:786:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14647:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14663:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14668:4:6",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14659:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14659:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "14651:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "14683:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14733:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14763:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14770:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14759:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14759:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "14753:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14753:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "14737:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "14823:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14841:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14846:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14837:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14837:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "14789:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14789:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14789:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "14872:178:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14921:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14951:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14958:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14947:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14947:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "14941:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14941:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "14925:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15011:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15029:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15034:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15025:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15025:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "14977:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14977:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14977:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15060:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15110:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15140:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15147:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15136:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15136:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "15130:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15130:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "15114:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15200:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15218:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15223:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15214:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15214:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15166:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15166:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15166:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15249:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15293:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15323:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15330:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15319:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15319:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "15313:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15313:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "15297:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15377:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15395:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15400:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15391:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15391:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "15349:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15349:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15349:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14624:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14631:3:6",
                "type": ""
              }
            ],
            "src": "14513:910:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15577:167:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15689:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15697:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "15587:101:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15587:114:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15587:114:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15710:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15728:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15733:4:6",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15724:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15724:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "15710:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15550:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15558:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "15566:10:6",
                "type": ""
              }
            ],
            "src": "15429:315:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15859:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15869:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "15881:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15886:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15877:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15877:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "15869:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "15846:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "15854:4:6",
                "type": ""
              }
            ],
            "src": "15750:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16167:812:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16177:102:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16273:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "16191:81:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16191:88:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "16181:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16288:127:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16403:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16408:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16295:107:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16295:120:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16288:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16424:105:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16523:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "16439:83:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16439:90:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "16428:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16538:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "16552:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "16542:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16628:326:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16642:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "16669:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16663:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16663:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "16646:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16689:138:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "16808:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "16823:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "16696:111:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16696:131:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16689:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16840:104:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "16937:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "16850:86:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16850:94:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16840:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16590:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16593:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16587:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16587:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "16601:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16603:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "16612:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16615:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16608:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16608:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "16603:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "16572:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16574:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16583:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "16578:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "16568:386:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16963:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "16970:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16963:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16146:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16153:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16162:3:6",
                "type": ""
              }
            ],
            "src": "15975:1004:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17201:293:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17211:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17223:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17234:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17219:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17219:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17211:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17258:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17269:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17254:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17254:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17277:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17283:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17273:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17273:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17247:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17247:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17247:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17303:184:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17473:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17482:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17311:161:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17311:176:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17303:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17173:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17185:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17196:4:6",
                "type": ""
              }
            ],
            "src": "16985:509:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17676:365:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17686:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17698:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17709:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17694:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17694:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17686:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17767:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17780:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17791:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17776:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17776:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17723:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17723:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17723:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17848:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17861:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17872:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17857:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17857:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17804:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17804:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17804:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17930:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17943:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17954:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17939:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17939:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17886:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17886:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17886:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18006:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18019:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18030:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18015:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18015:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17968:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17968:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17968:66:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17624:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17636:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17644:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17652:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17660:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17671:4:6",
                "type": ""
              }
            ],
            "src": "17500:541:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18145:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18155:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18167:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18178:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18163:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18163:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18155:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18235:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18248:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18259:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18244:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18244:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18191:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18191:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18191:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18117:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18129:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18140:4:6",
                "type": ""
              }
            ],
            "src": "18047:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18303:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18320:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18323:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18313:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18313:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18313:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18417:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18420:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18410:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18410:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18410:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18441:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18444:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18434:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18434:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18434:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "18275:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18524:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18534:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "18549:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18543:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18543:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "18534:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18592:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18565:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18565:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18565:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "18502:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18510:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18518:5:6",
                "type": ""
              }
            ],
            "src": "18461:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18687:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18733:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "18735:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18735:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18735:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18708:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18717:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18704:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18704:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18729:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18700:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18700:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "18697:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "18826:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18841:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18855:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18845:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18870:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18916:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18927:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18912:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18912:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18936:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18880:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18880:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "18870:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18657:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18668:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18680:6:6",
                "type": ""
              }
            ],
            "src": "18610:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19093:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19103:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19115:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19126:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19111:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19103:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19183:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19196:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19207:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19192:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19192:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19139:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19139:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19139:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19264:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19277:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19288:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19273:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19273:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19220:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19220:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19220:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19057:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19069:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19077:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19088:4:6",
                "type": ""
              }
            ],
            "src": "18967:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19345:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19399:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19408:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19411:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19401:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19401:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19401:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19368:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19390:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "19375:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19375:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19365:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19365:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19358:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19358:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "19355:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19338:5:6",
                "type": ""
              }
            ],
            "src": "19305:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19487:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19497:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "19512:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19506:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19506:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "19497:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19552:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "19528:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19528:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19528:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "19465:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19473:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19481:5:6",
                "type": ""
              }
            ],
            "src": "19427:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19644:271:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19690:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "19692:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19692:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19692:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19665:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19674:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19661:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19661:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19686:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19657:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19657:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "19654:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19783:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19798:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19812:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "19802:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19827:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19870:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "19881:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19866:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19866:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19890:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "19837:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19837:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "19827:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19614:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19625:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19637:6:6",
                "type": ""
              }
            ],
            "src": "19570:345:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20047:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20057:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20069:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20080:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20065:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20065:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20057:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20137:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20150:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20161:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20146:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20146:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20093:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20093:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20093:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20218:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20231:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20242:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20227:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20227:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20174:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20174:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20174:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20011:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20023:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20031:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20042:4:6",
                "type": ""
              }
            ],
            "src": "19921:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20413:288:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20423:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20435:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20446:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20431:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20431:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20423:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20503:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20516:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20527:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20512:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20512:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20459:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20459:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20459:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20584:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20597:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20608:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20593:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20593:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20540:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20540:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20540:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "20666:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20679:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20690:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20675:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20675:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20622:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20622:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20622:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20369:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "20381:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20389:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20397:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20408:4:6",
                "type": ""
              }
            ],
            "src": "20259:442:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20820:34:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20830:18:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "20845:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "20830:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20792:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "20797:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "20808:11:6",
                "type": ""
              }
            ],
            "src": "20707:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20966:8:6",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20958:6:6",
                "type": ""
              }
            ],
            "src": "20860:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21143:235:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21153:90:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21236:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21241:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21160:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21160:83:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21153:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21341:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "21252:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21252:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21252:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21354:18:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21365:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21370:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21361:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21361:11:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21354:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21131:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21139:3:6",
                "type": ""
              }
            ],
            "src": "20980:398:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21572:191:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21583:154:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21733:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21590:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21590:147:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21583:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21747:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "21754:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21747:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21559:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21568:3:6",
                "type": ""
              }
            ],
            "src": "21384:379:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21865:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21882:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21887:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21875:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21875:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21875:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21903:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21922:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21927:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21918:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21918:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "21903:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21837:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21842:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "21853:11:6",
                "type": ""
              }
            ],
            "src": "21769:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22050:64:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22072:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22080:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22068:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22068:14:6"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22084:22:6",
                        "type": "",
                        "value": "Failed to send Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22061:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22061:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22061:46:6"
                }
              ]
            },
            "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22042:6:6",
                "type": ""
              }
            ],
            "src": "21944:170:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22266:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22276:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22342:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22347:2:6",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22283:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22283:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22276:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22448:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                      "nodeType": "YulIdentifier",
                      "src": "22359:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22359:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22359:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22461:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22472:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22477:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22468:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22468:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22461:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22254:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22262:3:6",
                "type": ""
              }
            ],
            "src": "22120:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22663:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22673:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22685:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22696:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22681:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22681:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22673:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22720:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22731:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22716:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22716:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22739:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22745:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22735:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22735:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22709:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22709:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22709:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22765:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22899:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22773:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22773:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22765:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22643:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22658:4:6",
                "type": ""
              }
            ],
            "src": "22492:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23099:371:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23109:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23121:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23132:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23117:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23117:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23109:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23190:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23203:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23214:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23199:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23199:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23146:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23146:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23146:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "23271:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23284:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23295:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23280:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23280:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23227:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23227:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23227:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "23353:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23366:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23377:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23362:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23362:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23309:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23309:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23309:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "23435:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23448:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23459:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23444:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23444:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23391:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23391:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23391:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23047:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "23059:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "23067:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23075:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23083:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23094:4:6",
                "type": ""
              }
            ],
            "src": "22917:553:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23504:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23521:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23524:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23514:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23514:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23514:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23618:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23621:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23611:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23611:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23611:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23642:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23645:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23635:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23635:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23635:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "23476:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23706:147:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23716:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23739:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23721:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23721:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "23716:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23750:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23773:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23755:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23755:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "23750:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23784:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23795:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23798:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23791:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23791:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "23784:3:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23824:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23826:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23826:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23826:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23816:1:6"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "23819:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "23813:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23813:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "23810:36:6"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "23693:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "23696:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "23702:3:6",
                "type": ""
              }
            ],
            "src": "23662:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23902:190:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23912:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23939:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23921:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23921:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "23912:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24035:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "24037:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24037:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24037:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23960:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23967:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "23957:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23957:77:6"
                  },
                  "nodeType": "YulIf",
                  "src": "23954:103:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24066:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "24077:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24084:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24073:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24073:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "24066:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23888:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "23898:3:6",
                "type": ""
              }
            ],
            "src": "23859:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24280:371:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24290:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24302:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24313:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24298:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24298:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24290:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24371:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24384:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24395:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24380:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24380:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24327:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24327:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24327:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "24452:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24465:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24476:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24461:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24461:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24408:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24408:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24408:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "24534:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24547:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24558:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24543:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24543:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24490:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24490:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24490:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "24616:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24629:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24640:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24625:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24625:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24572:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24572:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24572:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24228:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "24240:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "24248:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24256:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24264:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24275:4:6",
                "type": ""
              }
            ],
            "src": "24098:553:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24867:454:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24877:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24889:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24900:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24885:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24885:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24877:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24958:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24971:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24982:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24967:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24967:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24914:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24914:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24914:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "25039:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25052:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25063:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25048:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25048:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24995:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24995:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24995:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "25121:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25134:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25145:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25130:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25130:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25077:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25077:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25077:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "25203:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25216:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25227:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25212:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25212:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25159:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25159:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25159:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "25285:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25298:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25309:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25294:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25294:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25241:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25241:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25241:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24807:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "24819:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "24827:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "24835:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24843:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24851:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24862:4:6",
                "type": ""
              }
            ],
            "src": "24657:664:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_length_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Dex.TradeEthForTokens -> struct Dex.TradeEthForTokens\n    function abi_encode_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // tradingEthAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeEthForTokens[] -> struct Dex.TradeEthForTokens[]\n    function abi_encode_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeEthForTokens_$913_memory_ptr_to_t_struct$_TradeEthForTokens_$913_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeTokensForTokensForCall -> struct Dex.TradeTokensForTokensForCall\n    function abi_encode_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForTokensForCall[] -> struct Dex.TradeTokensForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeTokensForEth -> struct Dex.TradeTokensForEth\n    function abi_encode_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingForEthAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForEth[] -> struct Dex.TradeTokensForEth[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForEth_$904_memory_ptr_to_t_struct$_TradeTokensForEth_$904_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "121:19079:5:-:0;;;2819:43;;;;;;;;;;2847:10;2839:5;;:18;;;;;;;;;;;;;;;;;;121:19079;;;;;;",
  "deployedSourceMap": "121:19079:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2411:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;10760:1277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2220:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2323:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;18157:1041;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13263:662;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15413:1165;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12252:834;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4850:1672;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9430:975;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2866:1980;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6526:986;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16759:1038;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2493:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2271:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7727:1311;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14108:721;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2163:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2704:28;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2411:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10760:1277::-;10920:4;10849:75;;:31;:39;10881:6;10849:39;;;;;;;;;;;;;;;10889:12;10849:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;10841:84;;;;;;10931:21;10955:31;:39;10987:6;10955:39;;;;;;;;;;;;;;;10995:12;10955:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;10931:94;;11031:30;11064:31;:39;11096:6;11064:39;;;;;;;;;;;;;;;11104:12;11064:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;11031:109;;11146:26;11175:31;:39;11207:6;11175:39;;;;;;;;;;;;;;;11215:12;11175:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;11146:104;;11257:21;11287:22;11257:53;;11365:21;11324:15;:25;;;11350:10;11324:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;11316:71;;;;;;11393:15;:24;;;11418:6;11426:21;11393:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11504:21;11463:15;:25;;;11489:10;11463:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;11455:71;;;;;;11596:21;11540:15;:25;;;11566:10;11586:4;11540:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:77;;11532:86;;;;;;11625:15;:28;;;11654:10;11666:6;11674:21;11625:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11704:9;11726:10;11718:24;;11750:16;11718:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11703:68;;;11785:4;11777:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;11891:4;11821:31;:39;11853:6;11821:39;;;;;;;;;;;;;;;11861:12;11821:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;11907:125;11937:6;11951:16;11975:22;12005:21;11907:125;;;;;;;;;:::i;:::-;;;;;;;;10835:1202;;;;;10760:1277;;:::o;2220:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2323:84::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18157:1041::-;18215:26;18249:60;18316:21;18353:6;18348:812;18369:11;:18;;;;18365:1;:22;18348:812;;;18459:4;18406:57;;:15;:31;18422:11;18434:1;18422:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18406:31;;;;;;;;;;;;;;;:49;;;;;;;;;;;;:57;;;18402:752;;18480:6;18475:671;18496:31;:47;18528:11;18540:1;18528:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18496:47;;;;;;;;;;;;;;;:54;;;;18492:1;:58;18475:671;;;18569:42;18614:31;:47;18646:11;18658:1;18646:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18614:47;;;;;;;;;;;;;;;18662:1;18614:50;;;;;;;;:::i;:::-;;;;;;;;;;;;18569:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18676:56;18735:265;;;;;;;;18774:11;18786:1;18774:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18735:265;;;;;;18802:17;:34;;;18735:265;;;;18850:17;:40;;;18735:265;;;;;;18904:17;:39;;;18735:265;;;;18957:17;:31;;;18735:265;;;;;18676:324;;19060:24;19013:26;19040:16;19013:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;19134:1;19115:16;:20;;;;:::i;:::-;19096:39;;18557:589;;18552:3;;;;;:::i;:::-;;;;18475:671;;;;18402:752;18389:3;;;;;:::i;:::-;;;;18348:812;;;;19173:20;19166:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18157:1041;:::o;13263:662::-;13418:4;13348:31;:39;13380:6;13348:39;;;;;;;;;;;;;;;13388:12;13348:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;13451:6;13437:20;;:10;:20;;;13429:29;;;;;;13465:27;13495:31;:39;13527:6;13495:39;;;;;;;;;;;;;;;13535:12;13495:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;13465:103;;13574:23;13600:31;:39;13632:6;13600:39;;;;;;;;;;;;;;;13640:12;13600:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;13574:98;;13678:24;13705:31;:39;13737:6;13705:39;;;;;;;;;;;;;;;13745:12;13705:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;13678:100;;13790:130;13828:6;13842:19;13869:18;13895:19;13790:130;;;;;;;;;:::i;:::-;;;;;;;;13342:583;;;13263:662;;:::o;15413:1165::-;15472:36;15516:66;15589:21;15626:6;15621:910;15642:11;:18;;;;15638:1;:22;15621:910;;;15735:4;15679:60;;:15;:31;15695:11;15707:1;15695:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15679:31;;;;;;;;;;;;;;;:52;;;;;;;;;;;;:60;;;15675:850;;15756:6;15751:766;15772:34;:50;15807:11;15819:1;15807:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15772:50;;;;;;;;;;;;;;;:57;;;;15768:1;:61;15751:766;;;15848:48;15899:34;:50;15934:11;15946:1;15934:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15899:50;;;;;;;;;;;;;;;15950:1;15899:53;;;;;;;;:::i;:::-;;;;;;;;;;;;15848:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15964:62;16029:336;;;;;;;;16071:11;16083:1;16071:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16029:336;;;;;;16099:20;:40;;;16029:336;;;;;;16153:20;:39;;;16029:336;;;;16206:20;:43;;;16029:336;;;;;;16263:20;:42;;;16029:336;;;;16319:20;:34;;;16029:336;;;;;15964:401;;16428:27;16378:29;16408:16;16378:47;;;;;;;;:::i;:::-;;;;;;;:77;;;;16505:1;16486:16;:20;;;;:::i;:::-;16467:39;;15836:681;;15831:3;;;;;:::i;:::-;;;;15751:766;;;;15675:850;15662:3;;;;;:::i;:::-;;;;15621:910;;;;16544:29;16537:36;;;;15413:1165;:::o;12252:834::-;12413:4;12340:34;:42;12375:6;12340:42;;;;;;;;;;;;;;;12383:12;12340:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;12446:6;12432:20;;:10;:20;;;12424:29;;;;;;12460:27;12490:34;:42;12525:6;12490:42;;;;;;;;;;;;;;;12533:12;12490:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;12460:106;;12572:23;12598:34;:42;12633:6;12598:42;;;;;;;;;;;;;;;12641:12;12598:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;12572:101;;12679:30;12712:34;:42;12747:6;12712:42;;;;;;;;;;;;;;;12755:12;12712:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;12679:112;;12797:26;12826:34;:42;12861:6;12826:42;;;;;;;;;;;;;;;12869:12;12826:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;12797:107;;12916:165;12957:6;12971:19;12998:18;13024:22;13054:21;12916:165;;;;;;;;;;:::i;:::-;;;;;;;;12334:752;;;;12252:834;;:::o;4850:1672::-;5052:5;5000:57;;:15;:27;5016:10;5000:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;5118:5;5069:54;;:15;:27;5085:10;5069:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5000:123;:189;;;;;5184:5;5135:54;;:15;:27;5151:10;5135:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5000:189;4996:440;;;5203:11;5220:10;5203:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5291:4;5243:15;:27;5259:10;5243:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;4996:440;;;5362:5;5313:54;;:15;:27;5329:10;5313:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5309:127;;5425:4;5377:15;:27;5393:10;5377:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;5309:127;4996:440;5442:18;5469:19;5442:47;;5496:27;5526:18;5496:48;;5550:57;5616:31;:43;5648:10;5616:43;;;;;;;;;;;;;;;5550:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5671:6;5666:352;5687:30;:37;5683:1;:41;5666:352;;;5800:19;5743:76;;:30;5774:1;5743:33;;;;;;;;:::i;:::-;;;;;;;;:53;;;:76;;;5739:273;;5831:31;5865:30;5896:1;5865:33;;;;;;;;:::i;:::-;;;;;;;;:52;;;5831:86;;5981:22;5952:26;:51;;;;:::i;:::-;5927:76;;5821:191;5739:273;5726:3;;;;;:::i;:::-;;;;5666:352;;;;6085:22;6032:12;:22;;;6055:10;6075:4;6032:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;6024:84;;;;;;6160:22;6122:12;:22;;;6145:10;6122:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6114:69;;;;;;6190:31;:43;6222:10;6190:43;;;;;;;;;;;;;;;6246:124;;;;;;;;6273:19;6246:124;;;;;;6302:18;6246:124;;;;6330:19;6246:124;;;;6359:5;6246:124;;;;;6190:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6383:134;6421:10;6439:19;6466:18;6492:19;6383:134;;;;;;;;;:::i;:::-;;;;;;;;4989:1533;;;4850:1672;;;:::o;9430:975::-;9590:4;9519:75;;:31;:39;9551:6;9519:39;;;;;;;;;;;;;;;9559:12;9519:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;9511:84;;;;;;9601:27;9631:31;:39;9663:6;9631:39;;;;;;;;;;;;;;;9671:12;9631:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;9601:103;;9710:23;9736:31;:39;9768:6;9736:39;;;;;;;;;;;;;;;9776:12;9736:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;9710:98;;9814:24;9841:31;:39;9873:6;9841:39;;;;;;;;;;;;;;;9881:12;9841:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;9814:100;;9921:18;9948:19;9921:47;;9974:12;:25;;;10000:6;10008:10;10020:18;9974:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10067:19;10054:9;:32;10046:41;;;;;;10095:9;10109:6;:11;;10128:9;10109:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10094:48;;;10156:4;10148:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;10262:4;10192:31;:39;10224:6;10192:39;;;;;;;;;;;;;;;10232:12;10192:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;10278:122;10308:6;10322:19;10349:18;10375:19;10278:122;;;;;;;;;:::i;:::-;;;;;;;;9505:900;;;;;9430:975;;:::o;2866:1980::-;3114:5;3062:57;;:15;:27;3078:10;3062:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;3180:5;3131:54;;:15;:27;3147:10;3131:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;3062:123;:189;;;;;3246:5;3197:54;;:15;:27;3213:10;3197:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;3062:189;3058:449;;;3265:11;3282:10;3265:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:4;3305:15;:27;3321:10;3305:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;3058:449;;;3430:5;3378:57;;:15;:27;3394:10;3378:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;3374:133;;3496:4;3445:15;:27;3461:10;3445:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;3374:133;3058:449;3513:18;3540:19;3513:47;;3567:27;3597:18;3567:48;;3621:63;3693:34;:46;3728:10;3693:46;;;;;;;;;;;;;;;3621:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:6;3746:434;3767:33;:40;3763:1;:44;3746:434;;;3886:19;3826:79;;:33;3860:1;3826:36;;;;;;;;:::i;:::-;;;;;;;;:56;;;:79;;;:152;;;;;3973:5;3919:59;;:33;3953:1;3919:36;;;;;;;;:::i;:::-;;;;;;;;:50;;;:59;;;3826:152;3822:352;;;3990:31;4024:33;4058:1;4024:36;;;;;;;;:::i;:::-;;;;;;;;:55;;;3990:89;;4143:22;4114:26;:51;;;;:::i;:::-;4089:76;;3980:194;3822:352;3809:3;;;;;:::i;:::-;;;;3746:434;;;;4247:22;4194:12;:22;;;4217:10;4237:4;4194:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;4186:84;;;;;;4322:22;4284:12;:22;;;4307:10;4284:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4276:69;;;;;;4439:34;:46;4474:10;4439:46;;;;;;;;;;;;;;;4498:161;;;;;;;;4528:19;4498:161;;;;;;4557:18;4498:161;;;;4585:22;4498:161;;;;;;4617:21;4498:161;;;;4648:5;4498:161;;;;;4439:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4672:169;4713:10;4731:19;4758:18;4784:22;4814:21;4672:169;;;;;;;;;;:::i;:::-;;;;;;;;3051:1795;;;2866:1980;;;;:::o;6526:986::-;6739:5;6687:57;;:15;:27;6703:10;6687:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;6805:5;6756:54;;:15;:27;6772:10;6756:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6687:123;:189;;;;;6871:5;6822:54;;:15;:27;6838:10;6822:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6687:189;6683:440;;;6890:11;6907:10;6890:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6978:4;6930:15;:27;6946:10;6930:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6683:440;;;7049:5;7000:54;;:15;:27;7016:10;7000:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6996:127;;7112:4;7064:15;:27;7080:10;7064:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6996:127;6683:440;7150:16;7137:9;:29;7129:38;;;;;;7174:31;:43;7206:10;7174:43;;;;;;;;;;;;;;;7230:127;;;;;;;;7257:16;7230:127;;;;7283:22;7230:127;;;;;;7315:21;7230:127;;;;7346:5;7230:127;;;;;7174:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7370:137;7408:10;7426:16;7450:22;7480:21;7370:137;;;;;;;;;:::i;:::-;;;;;;;;6526:986;;;:::o;16759:1038::-;16817:26;16851:60;16918:21;16955:6;16950:809;16971:11;:18;;;;16967:1;:22;16950:809;;;17061:4;17008:57;;:15;:31;17024:11;17036:1;17024:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17008:31;;;;;;;;;;;;;;;:49;;;;;;;;;;;;:57;;;17004:749;;17082:6;17077:668;17098:31;:47;17130:11;17142:1;17130:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17098:47;;;;;;;;;;;;;;;:54;;;;17094:1;:58;17077:668;;;17171:42;17216:31;:47;17248:11;17260:1;17248:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17216:47;;;;;;;;;;;;;;;17264:1;17216:50;;;;;;;;:::i;:::-;;;;;;;;;;;;17171:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17278:56;17337:262;;;;;;;;17376:11;17388:1;17376:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17337:262;;;;;;17404:17;:37;;;17337:262;;;;;;17455:17;:36;;;17337:262;;;;17505:17;:37;;;17337:262;;;;17556:17;:31;;;17337:262;;;;;17278:321;;17659:24;17612:26;17639:16;17612:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;17733:1;17714:16;:20;;;;:::i;:::-;17695:39;;17159:586;;17154:3;;;;;:::i;:::-;;;;17077:668;;;;17004:749;16991:3;;;;;:::i;:::-;;;;16950:809;;;;17772:20;17765:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16759:1038;:::o;2493:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2271:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7727:1311::-;7891:4;7817:78;;:34;:42;7852:6;7817:42;;;;;;;;;;;;;;;7860:12;7817:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;;;;;;;;;;:78;;;7809:87;;;;;;7902:27;7932:34;:42;7967:6;7932:42;;;;;;;;;;;;;;;7975:12;7932:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;7902:106;;8014:23;8040:34;:42;8075:6;8040:42;;;;;;;;;;;;;;;8083:12;8040:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;8014:101;;8122:18;8149:19;8122:47;;8175:12;:25;;;8201:6;8209:10;8221:18;8175:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8247:30;8280:34;:42;8315:6;8280:42;;;;;;;;;;;;;;;8323:12;8280:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;8247:112;;8365:26;8394:34;:42;8429:6;8394:42;;;;;;;;;;;;;;;8437:12;8394:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;8365:107;;8479:21;8509:22;8479:53;;8588:21;8547:15;:25;;;8573:10;8547:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;8539:71;;;;;;8680:21;8624:15;:25;;;8650:10;8670:4;8624:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:77;;8616:86;;;;;;8709:15;:28;;;8738:10;8750:6;8758:21;8709:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8860:4;8787:34;:42;8822:6;8787:42;;;;;;;;;;;;;;;8830:12;8787:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;8876:157;8909:6;8923:19;8950:18;8976:22;9006:21;8876:157;;;;;;;;;;:::i;:::-;;;;;;;;7803:1235;;;;;;7727:1311;;:::o;14108:721::-;14252:4;14201:20;14222:12;14201:34;;;;;;;;:::i;:::-;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;14285:6;14271:20;;:10;:20;;;14263:29;;;;;;14299:21;14323:20;14344:12;14323:34;;;;;;;;:::i;:::-;;;;;;;;;;;;:51;;;14299:75;;14380:30;14413:20;14434:12;14413:34;;;;;;;;:::i;:::-;;;;;;;;;;;;:57;;;;;;;;;;;;14380:90;;14476:26;14505:20;14526:12;14505:34;;;;;;;;:::i;:::-;;;;;;;;;;;;:56;;;14476:85;;14569:9;14591:10;14583:24;;14615:16;14583:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14568:68;;;14650:4;14642:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;14691:133;14729:6;14743:16;14767:22;14797:21;14691:133;;;;;;;;;:::i;:::-;;;;;;;;14195:634;;;;14108:721;;:::o;2163:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2704:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:::-;1888:24;1906:5;1888:24;:::i;:::-;1883:3;1876:37;1801:118;;:::o;1925:90::-;1959:7;2002:5;1995:13;1988:21;1977:32;;1925:90;;;:::o;2021:109::-;2102:21;2117:5;2102:21;:::i;:::-;2097:3;2090:34;2021:109;;:::o;2136:541::-;2307:4;2345:3;2334:9;2330:19;2322:27;;2359:71;2427:1;2416:9;2412:17;2403:6;2359:71;:::i;:::-;2440:72;2508:2;2497:9;2493:18;2484:6;2440:72;:::i;:::-;2522;2590:2;2579:9;2575:18;2566:6;2522:72;:::i;:::-;2604:66;2666:2;2655:9;2651:18;2642:6;2604:66;:::i;:::-;2136:541;;;;;;;:::o;2683:329::-;2742:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:119;;;2797:79;;:::i;:::-;2759:119;2917:1;2942:53;2987:7;2978:6;2967:9;2963:22;2942:53;:::i;:::-;2932:63;;2888:117;2683:329;;;;:::o;3018:652::-;3217:4;3255:3;3244:9;3240:19;3232:27;;3269:71;3337:1;3326:9;3322:17;3313:6;3269:71;:::i;:::-;3350:72;3418:2;3407:9;3403:18;3394:6;3350:72;:::i;:::-;3432;3500:2;3489:9;3485:18;3476:6;3432:72;:::i;:::-;3514;3582:2;3571:9;3567:18;3558:6;3514:72;:::i;:::-;3596:67;3658:3;3647:9;3643:19;3634:6;3596:67;:::i;:::-;3018:652;;;;;;;;:::o;3676:148::-;3777:6;3811:5;3805:12;3795:22;;3676:148;;;:::o;3830:218::-;3963:11;3997:6;3992:3;3985:19;4037:4;4032:3;4028:14;4013:29;;3830:218;;;;:::o;4054:166::-;4155:4;4178:3;4170:11;;4208:4;4203:3;4199:14;4191:22;;4054:166;;;:::o;4226:108::-;4303:24;4321:5;4303:24;:::i;:::-;4298:3;4291:37;4226:108;;:::o;4340:::-;4417:24;4435:5;4417:24;:::i;:::-;4412:3;4405:37;4340:108;;:::o;4454:99::-;4525:21;4540:5;4525:21;:::i;:::-;4520:3;4513:34;4454:99;;:::o;4627:913::-;4782:4;4777:3;4773:14;4881:4;4874:5;4870:16;4864:23;4900:63;4957:4;4952:3;4948:14;4934:12;4900:63;:::i;:::-;4797:176;5073:4;5066:5;5062:16;5056:23;5092:63;5149:4;5144:3;5140:14;5126:12;5092:63;:::i;:::-;4983:182;5264:4;5257:5;5253:16;5247:23;5283:63;5340:4;5335:3;5331:14;5317:12;5283:63;:::i;:::-;5175:181;5447:4;5440:5;5436:16;5430:23;5466:57;5517:4;5512:3;5508:14;5494:12;5466:57;:::i;:::-;5366:167;4751:789;4627:913;;:::o;5546:315::-;5683:10;5704:114;5814:3;5806:6;5704:114;:::i;:::-;5850:4;5845:3;5841:14;5827:28;;5546:315;;;;:::o;5867:147::-;5971:4;6003;5998:3;5994:14;5986:22;;5867:147;;;:::o;6092:1004::-;6279:3;6308:88;6390:5;6308:88;:::i;:::-;6412:120;6525:6;6520:3;6412:120;:::i;:::-;6405:127;;6556:90;6640:5;6556:90;:::i;:::-;6669:7;6700:1;6685:386;6710:6;6707:1;6704:13;6685:386;;;6786:6;6780:13;6813:131;6940:3;6925:13;6813:131;:::i;:::-;6806:138;;6967:94;7054:6;6967:94;:::i;:::-;6957:104;;6745:326;6732:1;6729;6725:9;6720:14;;6685:386;;;6689:14;7087:3;7080:10;;6284:812;;;6092:1004;;;;:::o;7102:509::-;7313:4;7351:2;7340:9;7336:18;7328:26;;7400:9;7394:4;7390:20;7386:1;7375:9;7371:17;7364:47;7428:176;7599:4;7590:6;7428:176;:::i;:::-;7420:184;;7102:509;;;;:::o;7617:159::-;7729:6;7763:5;7757:12;7747:22;;7617:159;;;:::o;7782:229::-;7926:11;7960:6;7955:3;7948:19;8000:4;7995:3;7991:14;7976:29;;7782:229;;;;:::o;8017:177::-;8129:4;8152:3;8144:11;;8182:4;8177:3;8173:14;8165:22;;8017:177;;;:::o;8288:1302::-;8465:4;8460:3;8456:14;8554:4;8547:5;8543:16;8537:23;8573:63;8630:4;8625:3;8621:14;8607:12;8573:63;:::i;:::-;8480:166;8743:4;8736:5;8732:16;8726:23;8762:63;8819:4;8814:3;8810:14;8796:12;8762:63;:::i;:::-;8656:179;8931:4;8924:5;8920:16;8914:23;8950:63;9007:4;9002:3;8998:14;8984:12;8950:63;:::i;:::-;8845:178;9123:4;9116:5;9112:16;9106:23;9142:63;9199:4;9194:3;9190:14;9176:12;9142:63;:::i;:::-;9033:182;9314:4;9307:5;9303:16;9297:23;9333:63;9390:4;9385:3;9381:14;9367:12;9333:63;:::i;:::-;9225:181;9497:4;9490:5;9486:16;9480:23;9516:57;9567:4;9562:3;9558:14;9544:12;9516:57;:::i;:::-;9416:167;8434:1156;8288:1302;;:::o;9596:359::-;9755:10;9776:136;9908:3;9900:6;9776:136;:::i;:::-;9944:4;9939:3;9935:14;9921:28;;9596:359;;;;:::o;9961:158::-;10076:4;10108;10103:3;10099:14;10091:22;;9961:158;;;:::o;10217:1092::-;10426:3;10455:99;10548:5;10455:99;:::i;:::-;10570:131;10694:6;10689:3;10570:131;:::i;:::-;10563:138;;10725:101;10820:5;10725:101;:::i;:::-;10849:7;10880:1;10865:419;10890:6;10887:1;10884:13;10865:419;;;10966:6;10960:13;10993:153;11142:3;11127:13;10993:153;:::i;:::-;10986:160;;11169:105;11267:6;11169:105;:::i;:::-;11159:115;;10925:359;10912:1;10909;10905:9;10900:14;;10865:419;;;10869:14;11300:3;11293:10;;10431:878;;;10217:1092;;;;:::o;11315:553::-;11548:4;11586:2;11575:9;11571:18;11563:26;;11635:9;11629:4;11625:20;11621:1;11610:9;11606:17;11599:47;11663:198;11856:4;11847:6;11663:198;:::i;:::-;11655:206;;11315:553;;;;:::o;11874:619::-;11951:6;11959;11967;12016:2;12004:9;11995:7;11991:23;11987:32;11984:119;;;12022:79;;:::i;:::-;11984:119;12142:1;12167:53;12212:7;12203:6;12192:9;12188:22;12167:53;:::i;:::-;12157:63;;12113:117;12269:2;12295:53;12340:7;12331:6;12320:9;12316:22;12295:53;:::i;:::-;12285:63;;12240:118;12397:2;12423:53;12468:7;12459:6;12448:9;12444:22;12423:53;:::i;:::-;12413:63;;12368:118;11874:619;;;;;:::o;12499:765::-;12585:6;12593;12601;12609;12658:3;12646:9;12637:7;12633:23;12629:33;12626:120;;;12665:79;;:::i;:::-;12626:120;12785:1;12810:53;12855:7;12846:6;12835:9;12831:22;12810:53;:::i;:::-;12800:63;;12756:117;12912:2;12938:53;12983:7;12974:6;12963:9;12959:22;12938:53;:::i;:::-;12928:63;;12883:118;13040:2;13066:53;13111:7;13102:6;13091:9;13087:22;13066:53;:::i;:::-;13056:63;;13011:118;13168:2;13194:53;13239:7;13230:6;13219:9;13215:22;13194:53;:::i;:::-;13184:63;;13139:118;12499:765;;;;;;;:::o;13270:619::-;13347:6;13355;13363;13412:2;13400:9;13391:7;13387:23;13383:32;13380:119;;;13418:79;;:::i;:::-;13380:119;13538:1;13563:53;13608:7;13599:6;13588:9;13584:22;13563:53;:::i;:::-;13553:63;;13509:117;13665:2;13691:53;13736:7;13727:6;13716:9;13712:22;13691:53;:::i;:::-;13681:63;;13636:118;13793:2;13819:53;13864:7;13855:6;13844:9;13840:22;13819:53;:::i;:::-;13809:63;;13764:118;13270:619;;;;;:::o;13895:148::-;13996:6;14030:5;14024:12;14014:22;;13895:148;;;:::o;14049:218::-;14182:11;14216:6;14211:3;14204:19;14256:4;14251:3;14247:14;14232:29;;14049:218;;;;:::o;14273:166::-;14374:4;14397:3;14389:11;;14427:4;14422:3;14418:14;14410:22;;14273:166;;;:::o;14513:910::-;14668:4;14663:3;14659:14;14770:4;14763:5;14759:16;14753:23;14789:63;14846:4;14841:3;14837:14;14823:12;14789:63;:::i;:::-;14683:179;14958:4;14951:5;14947:16;14941:23;14977:63;15034:4;15029:3;15025:14;15011:12;14977:63;:::i;:::-;14872:178;15147:4;15140:5;15136:16;15130:23;15166:63;15223:4;15218:3;15214:14;15200:12;15166:63;:::i;:::-;15060:179;15330:4;15323:5;15319:16;15313:23;15349:57;15400:4;15395:3;15391:14;15377:12;15349:57;:::i;:::-;15249:167;14637:786;14513:910;;:::o;15429:315::-;15566:10;15587:114;15697:3;15689:6;15587:114;:::i;:::-;15733:4;15728:3;15724:14;15710:28;;15429:315;;;;:::o;15750:147::-;15854:4;15886;15881:3;15877:14;15869:22;;15750:147;;;:::o;15975:1004::-;16162:3;16191:88;16273:5;16191:88;:::i;:::-;16295:120;16408:6;16403:3;16295:120;:::i;:::-;16288:127;;16439:90;16523:5;16439:90;:::i;:::-;16552:7;16583:1;16568:386;16593:6;16590:1;16587:13;16568:386;;;16669:6;16663:13;16696:131;16823:3;16808:13;16696:131;:::i;:::-;16689:138;;16850:94;16937:6;16850:94;:::i;:::-;16840:104;;16628:326;16615:1;16612;16608:9;16603:14;;16568:386;;;16572:14;16970:3;16963:10;;16167:812;;;15975:1004;;;;:::o;16985:509::-;17196:4;17234:2;17223:9;17219:18;17211:26;;17283:9;17277:4;17273:20;17269:1;17258:9;17254:17;17247:47;17311:176;17482:4;17473:6;17311:176;:::i;:::-;17303:184;;16985:509;;;;:::o;17500:541::-;17671:4;17709:3;17698:9;17694:19;17686:27;;17723:71;17791:1;17780:9;17776:17;17767:6;17723:71;:::i;:::-;17804:72;17872:2;17861:9;17857:18;17848:6;17804:72;:::i;:::-;17886;17954:2;17943:9;17939:18;17930:6;17886:72;:::i;:::-;17968:66;18030:2;18019:9;18015:18;18006:6;17968:66;:::i;:::-;17500:541;;;;;;;:::o;18047:222::-;18140:4;18178:2;18167:9;18163:18;18155:26;;18191:71;18259:1;18248:9;18244:17;18235:6;18191:71;:::i;:::-;18047:222;;;;:::o;18275:180::-;18323:77;18320:1;18313:88;18420:4;18417:1;18410:15;18444:4;18441:1;18434:15;18461:143;18518:5;18549:6;18543:13;18534:22;;18565:33;18592:5;18565:33;:::i;:::-;18461:143;;;;:::o;18610:351::-;18680:6;18729:2;18717:9;18708:7;18704:23;18700:32;18697:119;;;18735:79;;:::i;:::-;18697:119;18855:1;18880:64;18936:7;18927:6;18916:9;18912:22;18880:64;:::i;:::-;18870:74;;18826:128;18610:351;;;;:::o;18967:332::-;19088:4;19126:2;19115:9;19111:18;19103:26;;19139:71;19207:1;19196:9;19192:17;19183:6;19139:71;:::i;:::-;19220:72;19288:2;19277:9;19273:18;19264:6;19220:72;:::i;:::-;18967:332;;;;;:::o;19305:116::-;19375:21;19390:5;19375:21;:::i;:::-;19368:5;19365:32;19355:60;;19411:1;19408;19401:12;19355:60;19305:116;:::o;19427:137::-;19481:5;19512:6;19506:13;19497:22;;19528:30;19552:5;19528:30;:::i;:::-;19427:137;;;;:::o;19570:345::-;19637:6;19686:2;19674:9;19665:7;19661:23;19657:32;19654:119;;;19692:79;;:::i;:::-;19654:119;19812:1;19837:61;19890:7;19881:6;19870:9;19866:22;19837:61;:::i;:::-;19827:71;;19783:125;19570:345;;;;:::o;19921:332::-;20042:4;20080:2;20069:9;20065:18;20057:26;;20093:71;20161:1;20150:9;20146:17;20137:6;20093:71;:::i;:::-;20174:72;20242:2;20231:9;20227:18;20218:6;20174:72;:::i;:::-;19921:332;;;;;:::o;20259:442::-;20408:4;20446:2;20435:9;20431:18;20423:26;;20459:71;20527:1;20516:9;20512:17;20503:6;20459:71;:::i;:::-;20540:72;20608:2;20597:9;20593:18;20584:6;20540:72;:::i;:::-;20622;20690:2;20679:9;20675:18;20666:6;20622:72;:::i;:::-;20259:442;;;;;;:::o;20707:147::-;20808:11;20845:3;20830:18;;20707:147;;;;:::o;20860:114::-;;:::o;20980:398::-;21139:3;21160:83;21241:1;21236:3;21160:83;:::i;:::-;21153:90;;21252:93;21341:3;21252:93;:::i;:::-;21370:1;21365:3;21361:11;21354:18;;20980:398;;;:::o;21384:379::-;21568:3;21590:147;21733:3;21590:147;:::i;:::-;21583:154;;21754:3;21747:10;;21384:379;;;:::o;21769:169::-;21853:11;21887:6;21882:3;21875:19;21927:4;21922:3;21918:14;21903:29;;21769:169;;;;:::o;21944:170::-;22084:22;22080:1;22072:6;22068:14;22061:46;21944:170;:::o;22120:366::-;22262:3;22283:67;22347:2;22342:3;22283:67;:::i;:::-;22276:74;;22359:93;22448:3;22359:93;:::i;:::-;22477:2;22472:3;22468:12;22461:19;;22120:366;;;:::o;22492:419::-;22658:4;22696:2;22685:9;22681:18;22673:26;;22745:9;22739:4;22735:20;22731:1;22720:9;22716:17;22709:47;22773:131;22899:4;22773:131;:::i;:::-;22765:139;;22492:419;;;:::o;22917:553::-;23094:4;23132:3;23121:9;23117:19;23109:27;;23146:71;23214:1;23203:9;23199:17;23190:6;23146:71;:::i;:::-;23227:72;23295:2;23284:9;23280:18;23271:6;23227:72;:::i;:::-;23309;23377:2;23366:9;23362:18;23353:6;23309:72;:::i;:::-;23391;23459:2;23448:9;23444:18;23435:6;23391:72;:::i;:::-;22917:553;;;;;;;:::o;23476:180::-;23524:77;23521:1;23514:88;23621:4;23618:1;23611:15;23645:4;23642:1;23635:15;23662:191;23702:3;23721:20;23739:1;23721:20;:::i;:::-;23716:25;;23755:20;23773:1;23755:20;:::i;:::-;23750:25;;23798:1;23795;23791:9;23784:16;;23819:3;23816:1;23813:10;23810:36;;;23826:18;;:::i;:::-;23810:36;23662:191;;;;:::o;23859:233::-;23898:3;23921:24;23939:5;23921:24;:::i;:::-;23912:33;;23967:66;23960:5;23957:77;23954:103;;24037:18;;:::i;:::-;23954:103;24084:1;24077:5;24073:13;24066:20;;23859:233;;;:::o;24098:553::-;24275:4;24313:3;24302:9;24298:19;24290:27;;24327:71;24395:1;24384:9;24380:17;24371:6;24327:71;:::i;:::-;24408:72;24476:2;24465:9;24461:18;24452:6;24408:72;:::i;:::-;24490;24558:2;24547:9;24543:18;24534:6;24490:72;:::i;:::-;24572;24640:2;24629:9;24625:18;24616:6;24572:72;:::i;:::-;24098:553;;;;;;;:::o;24657:664::-;24862:4;24900:3;24889:9;24885:19;24877:27;;24914:71;24982:1;24971:9;24967:17;24958:6;24914:71;:::i;:::-;24995:72;25063:2;25052:9;25048:18;25039:6;24995:72;:::i;:::-;25077;25145:2;25134:9;25130:18;25121:6;25077:72;:::i;:::-;25159;25227:2;25216:9;25212:18;25203:6;25159:72;:::i;:::-;25241:73;25309:3;25298:9;25294:19;25285:6;25241:73;:::i;:::-;24657:664;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Dex {\n\n  event EventAddToDexTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventAddToDexTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventAddToDexTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventCanceledTradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventCanceledTradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventCanceledTradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  struct TradeTokensForTokens {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeTokensForEth {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeEthForTokens {\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  TradeTokensForTokens[] public tradeTokensForTokensArr;\n  TradeTokensForEth[] public tradeTokensForEthArr;\n  TradeEthForTokens[] public tradeEthForTokensArr;\n\n  mapping(address => TradeTokensForTokens[]) public tradesOfTokensForTokensOfAnAddress;\n  mapping(address => TradeTokensForEth[]) public tradesOfTokensForEthOfAnAddress;\n  mapping(address => TradeEthForTokens[]) public tradesOfEthForTokensOfAnAddress;\n\n  struct TradeCategoriesOfDexUser {\n    bool tradeTokensForTokens;\n    bool tradeTokensForEth;\n    bool tradeEthForTokens;\n  }\n\n  address[] public dexUsersArr;\n  mapping(address => TradeCategoriesOfDexUser) dexUsersMapping;\n\n  address owner;\n\n  constructor() {\n    owner = msg.sender;\n  }\n\n  function addTokensToDexForTradeWithOtherTokens(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public {\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForTokens == false) {\n      dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n    }\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n    TradeTokensForTokens[] memory tradeTokensForTokensArrForAddress\n      = tradesOfTokensForTokensOfAnAddress[msg.sender];\n\n    for (uint i = 0; i < tradeTokensForTokensArrForAddress.length; i++) {\n      if (tradeTokensForTokensArrForAddress[i].tradingTokenAddress == tradingTokenAddress\n          && tradeTokensForTokensArrForAddress[i].alreadyTraded == false) {\n        uint tradingTokenAmountForTrade = tradeTokensForTokensArrForAddress[i].tradingTokenAmount;\n        totalAllowanceRequired = tradingTokenAmountForTrade + totalAllowanceRequired;\n      }\n    }\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    /* require(tradingErc20.allowance(msg.sender, address(this)) == newAllowance); */\n\n    tradesOfTokensForTokensOfAnAddress[msg.sender].push(\n      TradeTokensForTokens(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForTokens(\n      msg.sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  function addTokensToDexForTradeWithEth(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount) public {\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForEth = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForEth == false) {\n      dexUsersMapping[msg.sender].tradeTokensForEth = true;\n    }\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n\n    uint totalAllowanceRequired = tradingTokenAmount;\n    TradeTokensForEth[] memory tradeTokensForEthArrForAddress\n      = tradesOfTokensForEthOfAnAddress[msg.sender];\n\n    for (uint i = 0; i < tradeTokensForEthArrForAddress.length; i++) {\n      if (tradeTokensForEthArrForAddress[i].tradingTokenAddress == tradingTokenAddress) {\n        uint tradingTokenAmountForTrade = tradeTokensForEthArrForAddress[i].tradingTokenAmount;\n        totalAllowanceRequired = tradingTokenAmountForTrade + totalAllowanceRequired;\n      }\n    }\n\n    require(tradingErc20.allowance(msg.sender, address(this)) >= totalAllowanceRequired);\n    require(tradingErc20.balanceOf(msg.sender) >= totalAllowanceRequired);\n\n    tradesOfTokensForEthOfAnAddress[msg.sender].push(\n      TradeTokensForEth(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForEthAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForEth(\n      msg.sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForEthAmount\n    );\n  }\n\n  function addEthToDexForTradeWithTokens(\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public payable {\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeEthForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n      dexUsersMapping[msg.sender].tradeEthForTokens = true;\n    }\n\n    require(msg.value == tradingEthAmount);\n\n    tradesOfEthForTokensOfAnAddress[msg.sender].push(\n      TradeEthForTokens(\n        tradingEthAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeEthForTokens(\n      msg.sender,\n      tradingEthAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  /* struct TradeTokensForTokens {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  function buyTokensFromOtherTokens(address sender, uint indexOfTrade) public {\n    require(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n    address tradingTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n    uint tradingTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradingTokenAmount);\n\n    address tradingForTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n    uint tradingForTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount;\n\n    ERC20 tradingForErc20 = ERC20(tradingForTokenAddress);\n\n    require(tradingForErc20.balanceOf(msg.sender) >= tradingForTokenAmount);\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradingForTokenAmount);\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradingForTokenAmount);\n\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForTokens(\n      sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  /* event TradeTokensForTokens (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  ) */\n\n  // TradeTokensForEth\n\n  /* struct TradeTokensForEth {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  } */\n\n  function buyTokensForEth(address sender, uint indexOfTrade) public payable {\n    require(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n    address tradingTokenAddress = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n    uint tradingTokenAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n    uint tradingForEthAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount;\n\n    ERC20 tradingErc20 = ERC20(tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradingTokenAmount);\n\n    require(msg.value == tradingForEthAmount);\n\n    (bool sent,) = sender.call{value: msg.value}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForEth(\n      sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForEthAmount\n    );\n  }\n\n  /* event TradeTokensForEth (\n    address sender,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  ); */\n\n  // TradeEthForTokens\n\n  /* struct TradeEthForTokens {\n    address sender;\n    uint tradingEthAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  function buyEthForTokens(address sender, uint indexOfTrade) public payable {\n    require(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n    uint tradingEthAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount;\n    address tradingForTokenAddress = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n    uint tradingForTokenAmount = tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount;\n\n    ERC20 tradingForErc20 = ERC20(tradingForTokenAddress);\n    require(tradingForErc20.balanceOf(msg.sender) >= tradingForTokenAmount);\n    tradingForErc20.transfer(sender, tradingForTokenAmount);\n\n    require(tradingForErc20.balanceOf(msg.sender) >= tradingForTokenAmount);\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradingForTokenAmount);\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradingForTokenAmount);\n\n    (bool sent,) = payable(msg.sender).call{value: tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeEthForTokens(\n      sender,\n      tradingEthAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  /* struct TradeTokensForTokens {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  function cancelTradeForTokensWithTokens(address sender, uint indexOfTrade) public {\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    require(msg.sender == sender);\n\n    address tradingTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n    uint tradingTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n    address tradingForTokenAddress = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress;\n    uint tradingForTokenAmount = tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount;\n\n    emit EventCanceledTradeTokensForTokens(\n      sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  /* struct TradeTokensForEth {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  } */\n\n  function cancelTradeForTokensWithEth(address sender, uint indexOfTrade) public {\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    require(msg.sender == sender);\n\n    address tradingTokenAddress = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress;\n    uint tradingTokenAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount;\n    uint tradingForEthAmount = tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount;\n\n    emit EventCanceledTradeTokensForEth(\n      sender,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForEthAmount\n    );\n  }\n\n  /* struct TradeEthForTokens {\n    address sender;\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  function cancelTradeForEthWithTokens(address sender, uint indexOfTrade) public payable {\n    tradeEthForTokensArr[indexOfTrade].alreadyTraded = true;\n\n    require(msg.sender == sender);\n\n    uint tradingEthAmount = tradeEthForTokensArr[indexOfTrade].tradingEthAmount;\n    address tradingForTokenAddress = tradeEthForTokensArr[indexOfTrade].tradingForTokenAddress;\n    uint tradingForTokenAmount = tradeEthForTokensArr[indexOfTrade].tradingForTokenAmount;\n\n    (bool sent,) = payable(msg.sender).call{value: tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    emit EventCanceledTradeEthForTokens(\n      sender,\n      tradingEthAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n  }\n\n  /* event TradeEthForTokens (\n    address sender,\n    uint tradingEthAmount,\n    uint tradingForTokenAddress,\n    uint tradingForTokenAmount\n  ); */\n\n  /* struct TradeTokensForTokens {\n    address sender;\n    uint tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  struct TradeTokensForTokensForCall {\n    address sender;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForTokenWithToken() public view returns (TradeTokensForTokensForCall[] memory) {\n    TradeTokensForTokensForCall[] memory tradeTokensForTokensResultArr;\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForTokens == true) {\n        for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeTokensForTokens memory tradeTokensForTokens = tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]][j];\n          TradeTokensForTokensForCall memory tradeTokensForTokensForCall = TradeTokensForTokensForCall (\n            dexUsersArr[i],\n            tradeTokensForTokens.tradingTokenAddress,\n            tradeTokensForTokens.tradingTokenAmount,\n            tradeTokensForTokens.tradingForTokenAddress,\n            tradeTokensForTokens.tradingForTokenAmount,\n            tradeTokensForTokens.alreadyTraded\n          );\n\n          tradeTokensForTokensResultArr[indexOfResultArr] = tradeTokensForTokensForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    return tradeTokensForTokensResultArr;\n  }\n\n  struct TradeTokensForEthForCall {\n    address sender;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForTokensWithEth() public view returns (TradeTokensForEth[] memory) {\n    TradeTokensForEthForCall[] memory tradeTokensForEthResultArr;\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeTokensForEth memory tradeTokensForEth = tradesOfTokensForEthOfAnAddress[dexUsersArr[i]][j];\n          TradeTokensForEthForCall memory tradeTokensForEthForCall = TradeTokensForEthForCall (\n            dexUsersArr[i],\n            tradeTokensForEth.tradingTokenAddress,\n            tradeTokensForEth.tradingTokenAmount,\n            tradeTokensForEth.tradingForEthAmount,\n            tradeTokensForEth.alreadyTraded\n          );\n\n          tradeTokensForEthResultArr[indexOfResultArr] = tradeTokensForEthForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    return tradeTokensForEthArr;\n  }\n\n  /* struct TradeEthForTokens {\n    address sender;\n    uint tradingEthAmount;\n    uint tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  } */\n\n  struct TradeEthForTokensForCall {\n    address sender;\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  function getTradesForEthWithTokens() public view returns (TradeEthForTokens[] memory) {\n    TradeEthForTokensForCall[] memory tradeEthForTokensResultArr;\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      if (dexUsersMapping[dexUsersArr[i]].tradeTokensForEth == true) {\n        for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n          TradeEthForTokens memory tradeEthForTokens = tradesOfEthForTokensOfAnAddress[dexUsersArr[i]][j];\n          TradeEthForTokensForCall memory tradeEthForTokensForCall = TradeEthForTokensForCall (\n            dexUsersArr[i],\n            tradeEthForTokens.tradingEthAmount,\n            tradeEthForTokens.tradingForTokenAddress,\n            tradeEthForTokens.tradingForTokenAmount,\n            tradeEthForTokens.alreadyTraded\n          );\n\n          tradeEthForTokensResultArr[indexOfResultArr] = tradeEthForTokensForCall;\n          indexOfResultArr = indexOfResultArr + 1;\n        }\n      }\n    }\n\n    return tradeEthForTokensArr;\n  }\n}\n",
  "sourcePath": "/Users/zhiwen/code/dex/contracts/contracts/Dex.sol",
  "ast": {
    "absolutePath": "project:/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        785
      ],
      "Dex": [
        2306
      ],
      "ERC20": [
        651
      ],
      "IERC20": [
        729
      ],
      "IERC20Errors": [
        41
      ],
      "IERC20Metadata": [
        755
      ]
    },
    "id": 2307,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 788,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2307,
        "sourceUnit": 652,
        "src": "64:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2306,
        "linearizedBaseContracts": [
          2306
        ],
        "name": "Dex",
        "nameLocation": "130:3:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "b31b008e8a12db47dae24bda793ea0d4e1039d4e74c334ec8fed59d8a4e80529",
            "id": 800,
            "name": "EventAddToDexTradeTokensForTokens",
            "nameLocation": "145:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "193:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "185:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "213:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "205:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "243:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "238:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "275:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "267:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "308:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "303:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:154:5"
            },
            "src": "139:195:5"
          },
          {
            "anonymous": false,
            "eventSelector": "4b3224748748339deab55aa5a1514e7f3d791c195a9594935c30a84d882f540f",
            "id": 810,
            "name": "EventAddToDexTradeTokensForEth",
            "nameLocation": "344:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "389:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "381:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "409:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "401:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "439:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "434:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "468:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "463:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:116:5"
            },
            "src": "338:154:5"
          },
          {
            "anonymous": false,
            "eventSelector": "5e91b5fb353347b0d4c78463cbf33c353331235f1f40327ca164bd540d164697",
            "id": 820,
            "name": "EventAddToDexTradeEthForTokens",
            "nameLocation": "502:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "547:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "539:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "564:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "559:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "594:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "586:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "627:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "622:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:119:5"
            },
            "src": "496:157:5"
          },
          {
            "anonymous": false,
            "eventSelector": "aef3fec0890a84ad1cfab292c8504f17278c9b35213257cbc2c572cc622ae015",
            "id": 832,
            "name": "EventTradeTokensForTokens",
            "nameLocation": "663:25:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "703:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "695:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "723:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "715:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "753:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "748:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "785:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "777:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "818:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "813:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:154:5"
            },
            "src": "657:187:5"
          },
          {
            "anonymous": false,
            "eventSelector": "08b8b3ffc165e69d2aa56bf6924a289c74530a36570b042b279ede424a0f7c18",
            "id": 842,
            "name": "EventTradeTokensForEth",
            "nameLocation": "854:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "891:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "883:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "911:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "903:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "941:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "936:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "970:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "965:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:116:5"
            },
            "src": "848:146:5"
          },
          {
            "anonymous": false,
            "eventSelector": "90737823f8fc9fbb28385683bca84d56edc8a1d49a2ad7faeb6391da5e38d99b",
            "id": 852,
            "name": "EventTradeEthForTokens",
            "nameLocation": "1004:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1041:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1033:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1058:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1053:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1088:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1080:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1121:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "1116:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:119:5"
            },
            "src": "998:149:5"
          },
          {
            "anonymous": false,
            "eventSelector": "c086f5b7a83e015dcc4ec82fa3f4de6c895b32824a682d0d3002b1277cbb7dc7",
            "id": 864,
            "name": "EventCanceledTradeTokensForTokens",
            "nameLocation": "1157:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1205:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1197:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1225:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1217:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1255:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1250:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1287:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1279:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1320:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1315:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:154:5"
            },
            "src": "1151:195:5"
          },
          {
            "anonymous": false,
            "eventSelector": "ee62066e68ea020a72ab8850191057c02d81798cef76e90508db15b2f47368c7",
            "id": 874,
            "name": "EventCanceledTradeTokensForEth",
            "nameLocation": "1356:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1401:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1393:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1421:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1413:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1451:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1446:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "1480:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1475:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:116:5"
            },
            "src": "1350:154:5"
          },
          {
            "anonymous": false,
            "eventSelector": "6fd78ca7acca4f76ea5834af9a37b74bbd249dbadf5360eeecb4a3a9b762dfff",
            "id": 884,
            "name": "EventCanceledTradeEthForTokens",
            "nameLocation": "1514:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1559:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1551:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1576:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1571:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1606:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1598:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1639:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1634:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:119:5"
            },
            "src": "1508:157:5"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokens",
            "id": 895,
            "members": [
              {
                "constant": false,
                "id": 886,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "1711:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1703:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 885,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1703:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 888,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "1741:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1736:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 887,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1736:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 890,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "1773:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1765:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 889,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1765:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 892,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "1806:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1801:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 891,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1801:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 894,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "1838:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 895,
                "src": "1833:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 893,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1833:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokens",
            "nameLocation": "1676:20:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "1669:187:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEth",
            "id": 904,
            "members": [
              {
                "constant": false,
                "id": 897,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "1899:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1891:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 896,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1891:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 899,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "1929:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1924:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 898,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1924:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 901,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "1958:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1953:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 900,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1953:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 903,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "1988:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 904,
                "src": "1983:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 902,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1983:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEth",
            "nameLocation": "1867:17:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "1860:146:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokens",
            "id": 913,
            "members": [
              {
                "constant": false,
                "id": 906,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "2046:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2041:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 905,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2041:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 908,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "2076:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2068:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 907,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2068:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "2109:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2104:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 909,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2104:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 912,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2141:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 913,
                "src": "2136:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 911,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2136:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokens",
            "nameLocation": "2017:17:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "2010:149:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ea9acbb4",
            "id": 917,
            "mutability": "mutable",
            "name": "tradeTokensForTokensArr",
            "nameLocation": "2193:23:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2163:53:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
              "typeString": "struct Dex.TradeTokensForTokens[]"
            },
            "typeName": {
              "baseType": {
                "id": 915,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 914,
                  "name": "TradeTokensForTokens",
                  "nameLocations": [
                    "2163:20:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "2163:20:5"
                },
                "referencedDeclaration": 895,
                "src": "2163:20:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokens"
                }
              },
              "id": 916,
              "nodeType": "ArrayTypeName",
              "src": "2163:22:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                "typeString": "struct Dex.TradeTokensForTokens[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f691d8d",
            "id": 921,
            "mutability": "mutable",
            "name": "tradeTokensForEthArr",
            "nameLocation": "2247:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2220:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
              "typeString": "struct Dex.TradeTokensForEth[]"
            },
            "typeName": {
              "baseType": {
                "id": 919,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 918,
                  "name": "TradeTokensForEth",
                  "nameLocations": [
                    "2220:17:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 904,
                  "src": "2220:17:5"
                },
                "referencedDeclaration": 904,
                "src": "2220:17:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEth"
                }
              },
              "id": 920,
              "nodeType": "ArrayTypeName",
              "src": "2220:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                "typeString": "struct Dex.TradeTokensForEth[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9112d8",
            "id": 925,
            "mutability": "mutable",
            "name": "tradeEthForTokensArr",
            "nameLocation": "2298:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2271:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
              "typeString": "struct Dex.TradeEthForTokens[]"
            },
            "typeName": {
              "baseType": {
                "id": 923,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 922,
                  "name": "TradeEthForTokens",
                  "nameLocations": [
                    "2271:17:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 913,
                  "src": "2271:17:5"
                },
                "referencedDeclaration": 913,
                "src": "2271:17:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokens"
                }
              },
              "id": 924,
              "nodeType": "ArrayTypeName",
              "src": "2271:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr",
                "typeString": "struct Dex.TradeEthForTokens[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b66082a",
            "id": 931,
            "mutability": "mutable",
            "name": "tradesOfTokensForTokensOfAnAddress",
            "nameLocation": "2373:34:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2323:84:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
            },
            "typeName": {
              "id": 930,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 926,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2331:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2323:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 928,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 927,
                    "name": "TradeTokensForTokens",
                    "nameLocations": [
                      "2342:20:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 895,
                    "src": "2342:20:5"
                  },
                  "referencedDeclaration": 895,
                  "src": "2342:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokens"
                  }
                },
                "id": 929,
                "nodeType": "ArrayTypeName",
                "src": "2342:22:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bc07cef",
            "id": 937,
            "mutability": "mutable",
            "name": "tradesOfTokensForEthOfAnAddress",
            "nameLocation": "2458:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2411:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
            },
            "typeName": {
              "id": 936,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 932,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2419:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2411:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 934,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 933,
                    "name": "TradeTokensForEth",
                    "nameLocations": [
                      "2430:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 904,
                    "src": "2430:17:5"
                  },
                  "referencedDeclaration": 904,
                  "src": "2430:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEth"
                  }
                },
                "id": 935,
                "nodeType": "ArrayTypeName",
                "src": "2430:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEth[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be532109",
            "id": 943,
            "mutability": "mutable",
            "name": "tradesOfEthForTokensOfAnAddress",
            "nameLocation": "2540:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2493:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
            },
            "typeName": {
              "id": 942,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 938,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2501:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2493:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 940,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 939,
                    "name": "TradeEthForTokens",
                    "nameLocations": [
                      "2512:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 913,
                    "src": "2512:17:5"
                  },
                  "referencedDeclaration": 913,
                  "src": "2512:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokens"
                  }
                },
                "id": 941,
                "nodeType": "ArrayTypeName",
                "src": "2512:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeCategoriesOfDexUser",
            "id": 950,
            "members": [
              {
                "constant": false,
                "id": 945,
                "mutability": "mutable",
                "name": "tradeTokensForTokens",
                "nameLocation": "2619:20:5",
                "nodeType": "VariableDeclaration",
                "scope": 950,
                "src": "2614:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 944,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2614:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 947,
                "mutability": "mutable",
                "name": "tradeTokensForEth",
                "nameLocation": "2650:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 950,
                "src": "2645:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 946,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2645:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 949,
                "mutability": "mutable",
                "name": "tradeEthForTokens",
                "nameLocation": "2678:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 950,
                "src": "2673:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 948,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2673:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeCategoriesOfDexUser",
            "nameLocation": "2583:24:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "2576:124:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd9c8853",
            "id": 953,
            "mutability": "mutable",
            "name": "dexUsersArr",
            "nameLocation": "2721:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2704:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 951,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2704:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 952,
              "nodeType": "ArrayTypeName",
              "src": "2704:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 958,
            "mutability": "mutable",
            "name": "dexUsersMapping",
            "nameLocation": "2781:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2736:60:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
            },
            "typeName": {
              "id": 957,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 954,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2744:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2736:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 956,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 955,
                  "name": "TradeCategoriesOfDexUser",
                  "nameLocations": [
                    "2755:24:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 950,
                  "src": "2755:24:5"
                },
                "referencedDeclaration": 950,
                "src": "2755:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage_ptr",
                  "typeString": "struct Dex.TradeCategoriesOfDexUser"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 960,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "2809:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 2306,
            "src": "2801:13:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2801:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "2833:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 963,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 960,
                      "src": "2839:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 964,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2847:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2851:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2847:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2839:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:18:5"
                }
              ]
            },
            "id": 969,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:2:5"
            },
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2833:0:5"
            },
            "scope": 2306,
            "src": "2819:43:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "3051:1795:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 980,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "3062:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 983,
                            "indexExpression": {
                              "expression": {
                                "id": 981,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3078:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3082:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3078:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3062:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3090:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 945,
                          "src": "3062:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3114:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3062:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 987,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "3131:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 990,
                            "indexExpression": {
                              "expression": {
                                "id": 988,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3147:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3151:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3147:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3131:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3159:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 947,
                          "src": "3131:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3180:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3131:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3062:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 995,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "3197:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 998,
                          "indexExpression": {
                            "expression": {
                              "id": 996,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3213:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3217:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3213:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3197:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3225:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 949,
                        "src": "3197:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3246:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "3197:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3062:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1019,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "3378:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1022,
                          "indexExpression": {
                            "expression": {
                              "id": 1020,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3394:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3398:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3394:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3378:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3406:20:5",
                        "memberName": "tradeTokensForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 945,
                        "src": "3378:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "3378:57:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1035,
                    "nodeType": "IfStatement",
                    "src": "3374:133:5",
                    "trueBody": {
                      "id": 1034,
                      "nodeType": "Block",
                      "src": "3437:70:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1026,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "3445:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1029,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1027,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3461:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3465:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3461:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3445:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "3473:20:5",
                              "memberName": "tradeTokensForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "3445:48:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3496:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "3445:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1033,
                          "nodeType": "ExpressionStatement",
                          "src": "3445:55:5"
                        }
                      ]
                    }
                  },
                  "id": 1036,
                  "nodeType": "IfStatement",
                  "src": "3058:449:5",
                  "trueBody": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "3253:115:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1006,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3282:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3286:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3282:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1003,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "3265:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3277:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3265:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:28:5"
                      },
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1010,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "3305:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1013,
                              "indexExpression": {
                                "expression": {
                                  "id": 1011,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3321:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3325:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3321:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3305:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3333:20:5",
                            "memberName": "tradeTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "3305:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3356:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3305:55:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "3305:55:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1039,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "3519:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1146,
                      "src": "3513:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1038,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1037,
                          "name": "ERC20",
                          "nameLocations": [
                            "3513:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "3513:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "3513:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1043,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1041,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "3540:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1040,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "3534:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3534:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3513:47:5"
                },
                {
                  "assignments": [
                    1045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "totalAllowanceRequired",
                      "nameLocation": "3572:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1146,
                      "src": "3567:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1044,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3567:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1047,
                  "initialValue": {
                    "id": 1046,
                    "name": "tradingTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 973,
                    "src": "3597:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3567:48:5"
                },
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensArrForAddress",
                      "nameLocation": "3651:33:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1146,
                      "src": "3621:63:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokens[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1050,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1049,
                            "name": "TradeTokensForTokens",
                            "nameLocations": [
                              "3621:20:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 895,
                            "src": "3621:20:5"
                          },
                          "referencedDeclaration": 895,
                          "src": "3621:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokens"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ArrayTypeName",
                        "src": "3621:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1057,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1053,
                      "name": "tradesOfTokensForTokensOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "3693:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                      }
                    },
                    "id": 1056,
                    "indexExpression": {
                      "expression": {
                        "id": 1054,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3728:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3732:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3728:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3693:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3621:118:5"
                },
                {
                  "body": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "3814:366:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1069,
                                  "name": "tradeTokensForTokensArrForAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1052,
                                  "src": "3826:33:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                  }
                                },
                                "id": 1071,
                                "indexExpression": {
                                  "id": 1070,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "3860:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3826:36:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3863:19:5",
                              "memberName": "tradingTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 886,
                              "src": "3826:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1073,
                              "name": "tradingTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "3886:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3826:79:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1075,
                                  "name": "tradeTokensForTokensArrForAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1052,
                                  "src": "3919:33:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                  }
                                },
                                "id": 1077,
                                "indexExpression": {
                                  "id": 1076,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "3953:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3919:36:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokens memory"
                                }
                              },
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3956:13:5",
                              "memberName": "alreadyTraded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 894,
                              "src": "3919:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "66616c7365",
                              "id": 1079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3973:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "3919:59:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3826:152:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1096,
                        "nodeType": "IfStatement",
                        "src": "3822:352:5",
                        "trueBody": {
                          "id": 1095,
                          "nodeType": "Block",
                          "src": "3980:194:5",
                          "statements": [
                            {
                              "assignments": [
                                1083
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1083,
                                  "mutability": "mutable",
                                  "name": "tradingTokenAmountForTrade",
                                  "nameLocation": "3995:26:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1095,
                                  "src": "3990:31:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1082,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3990:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1088,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1084,
                                    "name": "tradeTokensForTokensArrForAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1052,
                                    "src": "4024:33:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                                    }
                                  },
                                  "id": 1086,
                                  "indexExpression": {
                                    "id": 1085,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1059,
                                    "src": "4058:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4024:36:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokens memory"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4061:18:5",
                                "memberName": "tradingTokenAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 888,
                                "src": "4024:55:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3990:89:5"
                            },
                            {
                              "expression": {
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1089,
                                  "name": "totalAllowanceRequired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "4089:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1090,
                                    "name": "tradingTokenAmountForTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1083,
                                    "src": "4114:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1091,
                                    "name": "totalAllowanceRequired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "4143:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4114:51:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4089:76:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1094,
                              "nodeType": "ExpressionStatement",
                              "src": "4089:76:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1062,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "3763:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1063,
                        "name": "tradeTokensForTokensArrForAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "3767:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory[] memory"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3801:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3767:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3763:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1098,
                  "initializationExpression": {
                    "assignments": [
                      1059
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3756:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1098,
                        "src": "3751:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3751:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1061,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3751:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3809:3:5",
                      "subExpression": {
                        "id": 1066,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3809:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1068,
                    "nodeType": "ExpressionStatement",
                    "src": "3809:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3746:434:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1102,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4217:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4221:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4217:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1106,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4237:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4229:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1104,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4229:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4229:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1100,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "4194:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4207:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "4194:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4194:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1109,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "4247:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4194:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4186:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4186:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "4186:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4307:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4311:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4307:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1114,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "4284:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4297:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "4284:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4284:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1119,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "4322:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4284:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4276:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:69:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1129,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "4528:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1130,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "4557:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1131,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "4585:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1132,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "4617:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4648:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1128,
                          "name": "TradeTokensForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 895,
                          "src": "4498:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokens_$895_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForTokens storage pointer)"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4498:161:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1123,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "4439:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1126,
                        "indexExpression": {
                          "expression": {
                            "id": 1124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4474:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4478:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4474:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4439:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4486:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4439:51:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForTokens_$895_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForTokens storage ref[] storage pointer,struct Dex.TradeTokensForTokens storage ref)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4439:221:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "4439:221:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4713:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4717:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4713:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1140,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "4731:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1141,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "4758:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1142,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "4784:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1143,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "4814:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1137,
                      "name": "EventAddToDexTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "4672:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4672:169:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "EmitStatement",
                  "src": "4667:174:5"
                }
              ]
            },
            "functionSelector": "a1179c72",
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithOtherTokens",
            "nameLocation": "2875:37:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "2926:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "2918:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "2956:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "2951:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "2988:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "2980:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2980:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "3021:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "3016:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2912:131:5"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3051:0:5"
            },
            "scope": 2306,
            "src": "2866:1980:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "4989:1533:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1156,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "5000:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1159,
                            "indexExpression": {
                              "expression": {
                                "id": 1157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5016:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5020:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5016:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5000:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5028:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 945,
                          "src": "5000:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5052:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5000:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1163,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "5069:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1166,
                            "indexExpression": {
                              "expression": {
                                "id": 1164,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5085:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5089:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5085:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5069:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5097:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 947,
                          "src": "5069:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5118:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5069:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5000:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1171,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "5135:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1174,
                          "indexExpression": {
                            "expression": {
                              "id": 1172,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5151:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5155:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5151:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5135:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5163:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 949,
                        "src": "5135:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5184:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5135:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5000:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1195,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "5313:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1198,
                          "indexExpression": {
                            "expression": {
                              "id": 1196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5329:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5333:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5329:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5313:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5341:17:5",
                        "memberName": "tradeTokensForEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 947,
                        "src": "5313:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5362:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5313:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1211,
                    "nodeType": "IfStatement",
                    "src": "5309:127:5",
                    "trueBody": {
                      "id": 1210,
                      "nodeType": "Block",
                      "src": "5369:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1202,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "5377:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1205,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1203,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5393:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5397:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5393:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5377:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "5405:17:5",
                              "memberName": "tradeTokensForEth",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 947,
                              "src": "5377:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5425:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "5377:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1209,
                          "nodeType": "ExpressionStatement",
                          "src": "5377:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1212,
                  "nodeType": "IfStatement",
                  "src": "4996:440:5",
                  "trueBody": {
                    "id": 1194,
                    "nodeType": "Block",
                    "src": "5191:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5220:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5224:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5220:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1179,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "5203:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5215:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5203:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5203:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1185,
                        "nodeType": "ExpressionStatement",
                        "src": "5203:28:5"
                      },
                      {
                        "expression": {
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1186,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "5243:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1189,
                              "indexExpression": {
                                "expression": {
                                  "id": 1187,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5259:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5263:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5259:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5243:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5271:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 947,
                            "src": "5243:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5291:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5243:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "5243:52:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1215,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "5448:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "5442:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1213,
                          "name": "ERC20",
                          "nameLocations": [
                            "5442:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "5442:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "5442:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1217,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "5469:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1216,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "5463:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5442:47:5"
                },
                {
                  "assignments": [
                    1221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1221,
                      "mutability": "mutable",
                      "name": "totalAllowanceRequired",
                      "nameLocation": "5501:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "5496:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1220,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5496:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1223,
                  "initialValue": {
                    "id": 1222,
                    "name": "tradingTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "5526:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5496:48:5"
                },
                {
                  "assignments": [
                    1228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1228,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthArrForAddress",
                      "nameLocation": "5577:30:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "5550:57:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEth[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1226,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1225,
                            "name": "TradeTokensForEth",
                            "nameLocations": [
                              "5550:17:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 904,
                            "src": "5550:17:5"
                          },
                          "referencedDeclaration": 904,
                          "src": "5550:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEth"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ArrayTypeName",
                        "src": "5550:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEth[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1233,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1229,
                      "name": "tradesOfTokensForEthOfAnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "5616:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                      }
                    },
                    "id": 1232,
                    "indexExpression": {
                      "expression": {
                        "id": 1230,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5648:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5652:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5648:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5616:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5550:109:5"
                },
                {
                  "body": {
                    "id": 1266,
                    "nodeType": "Block",
                    "src": "5731:287:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1245,
                                "name": "tradeTokensForEthArrForAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1228,
                                "src": "5743:30:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                }
                              },
                              "id": 1247,
                              "indexExpression": {
                                "id": 1246,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "5774:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5743:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                "typeString": "struct Dex.TradeTokensForEth memory"
                              }
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5777:19:5",
                            "memberName": "tradingTokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 897,
                            "src": "5743:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1249,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "5800:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5743:76:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1265,
                        "nodeType": "IfStatement",
                        "src": "5739:273:5",
                        "trueBody": {
                          "id": 1264,
                          "nodeType": "Block",
                          "src": "5821:191:5",
                          "statements": [
                            {
                              "assignments": [
                                1252
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1252,
                                  "mutability": "mutable",
                                  "name": "tradingTokenAmountForTrade",
                                  "nameLocation": "5836:26:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1264,
                                  "src": "5831:31:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1251,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5831:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1257,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1253,
                                    "name": "tradeTokensForEthArrForAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1228,
                                    "src": "5865:30:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                                    }
                                  },
                                  "id": 1255,
                                  "indexExpression": {
                                    "id": 1254,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1235,
                                    "src": "5896:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5865:33:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForEth memory"
                                  }
                                },
                                "id": 1256,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5899:18:5",
                                "memberName": "tradingTokenAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 899,
                                "src": "5865:52:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5831:86:5"
                            },
                            {
                              "expression": {
                                "id": 1262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1258,
                                  "name": "totalAllowanceRequired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1221,
                                  "src": "5927:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1259,
                                    "name": "tradingTokenAmountForTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1252,
                                    "src": "5952:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1260,
                                    "name": "totalAllowanceRequired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1221,
                                    "src": "5981:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5952:51:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5927:76:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1263,
                              "nodeType": "ExpressionStatement",
                              "src": "5927:76:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1238,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "5683:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1239,
                        "name": "tradeTokensForEthArrForAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "5687:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory[] memory"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5718:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5687:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5683:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1267,
                  "initializationExpression": {
                    "assignments": [
                      1235
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5676:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "5671:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5671:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1237,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5680:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5671:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5726:3:5",
                      "subExpression": {
                        "id": 1242,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "5726:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1244,
                    "nodeType": "ExpressionStatement",
                    "src": "5726:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5666:352:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6055:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6059:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6055:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1275,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6075:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6067:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1273,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6067:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6067:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1269,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "6032:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6045:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "6032:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6032:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1278,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "6085:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6032:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6024:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6024:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "6024:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1285,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6145:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6149:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6145:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1283,
                              "name": "tradingErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "6122:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6135:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "6122:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1288,
                          "name": "totalAllowanceRequired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "6160:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6122:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6114:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6114:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "6114:69:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1298,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "6273:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1299,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "6302:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1300,
                            "name": "tradingForEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1153,
                            "src": "6330:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6359:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1297,
                          "name": "TradeTokensForEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "6246:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForEth_$904_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForEth storage pointer)"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6246:124:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1292,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "6190:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1295,
                        "indexExpression": {
                          "expression": {
                            "id": 1293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6222:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6226:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6222:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6190:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6234:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6190:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForEth_$904_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForEth storage ref[] storage pointer,struct Dex.TradeTokensForEth storage ref)"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6190:181:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "6190:181:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6421:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6425:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6421:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1308,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "6439:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1309,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "6466:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "tradingForEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1153,
                        "src": "6492:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1305,
                      "name": "EventAddToDexTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "6383:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6383:134:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1312,
                  "nodeType": "EmitStatement",
                  "src": "6378:139:5"
                }
              ]
            },
            "functionSelector": "7f1ca38b",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithEth",
            "nameLocation": "4859:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "4902:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "4894:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "4932:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "4927:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1153,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "4961:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "4956:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4888:93:5"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4989:0:5"
            },
            "scope": 2306,
            "src": "4850:1672:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "6676:836:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1323,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "6687:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1326,
                            "indexExpression": {
                              "expression": {
                                "id": 1324,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6703:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6707:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6703:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6687:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6715:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 945,
                          "src": "6687:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6739:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6687:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1330,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "6756:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1333,
                            "indexExpression": {
                              "expression": {
                                "id": 1331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6772:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6776:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6772:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6756:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6784:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 947,
                          "src": "6756:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6805:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6756:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6687:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1338,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "6822:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1341,
                          "indexExpression": {
                            "expression": {
                              "id": 1339,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6838:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6842:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6838:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6822:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6850:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 949,
                        "src": "6822:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6871:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "6822:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6687:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1362,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "7000:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1365,
                          "indexExpression": {
                            "expression": {
                              "id": 1363,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7016:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7020:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7016:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7000:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7028:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 949,
                        "src": "7000:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7049:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "7000:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1378,
                    "nodeType": "IfStatement",
                    "src": "6996:127:5",
                    "trueBody": {
                      "id": 1377,
                      "nodeType": "Block",
                      "src": "7056:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1369,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "7064:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1372,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1370,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "7080:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7084:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7080:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7064:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "7092:17:5",
                              "memberName": "tradeEthForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 949,
                              "src": "7064:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7112:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "7064:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1376,
                          "nodeType": "ExpressionStatement",
                          "src": "7064:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1379,
                  "nodeType": "IfStatement",
                  "src": "6683:440:5",
                  "trueBody": {
                    "id": 1361,
                    "nodeType": "Block",
                    "src": "6878:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1349,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6907:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6911:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6907:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1346,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "6890:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6902:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6890:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6890:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1352,
                        "nodeType": "ExpressionStatement",
                        "src": "6890:28:5"
                      },
                      {
                        "expression": {
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1353,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "6930:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1356,
                              "indexExpression": {
                                "expression": {
                                  "id": 1354,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6946:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6950:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6946:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6930:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6958:17:5",
                            "memberName": "tradeEthForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 949,
                            "src": "6930:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6978:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6930:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "6930:52:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7137:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7141:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7137:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1383,
                          "name": "tradingEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "7150:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7137:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7129:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7129:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1386,
                  "nodeType": "ExpressionStatement",
                  "src": "7129:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1393,
                            "name": "tradingEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "7257:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1394,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "7283:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1395,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "7315:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7346:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1392,
                          "name": "TradeEthForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 913,
                          "src": "7230:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeEthForTokens_$913_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeEthForTokens storage pointer)"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7230:127:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1387,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "7174:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1390,
                        "indexExpression": {
                          "expression": {
                            "id": 1388,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7206:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7210:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7206:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7174:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7218:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7174:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr_$_t_struct$_TradeEthForTokens_$913_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeEthForTokens storage ref[] storage pointer,struct Dex.TradeEthForTokens storage ref)"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7174:184:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "7174:184:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7408:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7412:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7408:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1403,
                        "name": "tradingEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "7426:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1404,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1318,
                        "src": "7450:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1405,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "7480:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1400,
                      "name": "EventAddToDexTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "7370:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7370:137:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1407,
                  "nodeType": "EmitStatement",
                  "src": "7365:142:5"
                }
              ]
            },
            "functionSelector": "a306802f",
            "id": 1409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEthToDexForTradeWithTokens",
            "nameLocation": "6535:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "6575:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "6570:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "6605:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "6597:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6597:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "6638:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "6633:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6564:96:5"
            },
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6676:0:5"
            },
            "scope": 2306,
            "src": "6526:986:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "7803:1235:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1417,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "7817:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1419,
                              "indexExpression": {
                                "id": 1418,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1411,
                                "src": "7852:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7817:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1421,
                            "indexExpression": {
                              "id": 1420,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "7860:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7817:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7874:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 894,
                          "src": "7817:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7891:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7817:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7809:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:87:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:87:5"
                },
                {
                  "assignments": [
                    1428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1428,
                      "mutability": "mutable",
                      "name": "tradingTokenAddress",
                      "nameLocation": "7910:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "7902:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1427,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7902:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1435,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1429,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "7932:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1431,
                        "indexExpression": {
                          "id": 1430,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "7967:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7932:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1433,
                      "indexExpression": {
                        "id": 1432,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "7975:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7932:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7989:19:5",
                    "memberName": "tradingTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 886,
                    "src": "7932:76:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7902:106:5"
                },
                {
                  "assignments": [
                    1437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "tradingTokenAmount",
                      "nameLocation": "8019:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "8014:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8014:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1444,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1438,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "8040:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1440,
                        "indexExpression": {
                          "id": 1439,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "8075:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8040:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1442,
                      "indexExpression": {
                        "id": 1441,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "8083:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8040:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8097:18:5",
                    "memberName": "tradingTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 888,
                    "src": "8040:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8014:101:5"
                },
                {
                  "assignments": [
                    1447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1447,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "8128:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "8122:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1445,
                          "name": "ERC20",
                          "nameLocations": [
                            "8122:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "8122:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "8122:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1449,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1428,
                        "src": "8149:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1448,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "8143:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8143:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8122:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1455,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "8201:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8209:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8213:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8209:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1458,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "8221:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1452,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "8175:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8188:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "8175:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8175:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "8175:65:5"
                },
                {
                  "assignments": [
                    1462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1462,
                      "mutability": "mutable",
                      "name": "tradingForTokenAddress",
                      "nameLocation": "8255:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "8247:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8247:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1469,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1463,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "8280:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1465,
                        "indexExpression": {
                          "id": 1464,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "8315:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8280:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1467,
                      "indexExpression": {
                        "id": 1466,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "8323:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8280:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8337:22:5",
                    "memberName": "tradingForTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 890,
                    "src": "8280:79:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8247:112:5"
                },
                {
                  "assignments": [
                    1471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1471,
                      "mutability": "mutable",
                      "name": "tradingForTokenAmount",
                      "nameLocation": "8370:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "8365:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1470,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8365:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1478,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1472,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "8394:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1474,
                        "indexExpression": {
                          "id": 1473,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "8429:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8394:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1476,
                      "indexExpression": {
                        "id": 1475,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "8437:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8394:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8451:21:5",
                    "memberName": "tradingForTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 892,
                    "src": "8394:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8365:107:5"
                },
                {
                  "assignments": [
                    1481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1481,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "8485:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "8479:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1480,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1479,
                          "name": "ERC20",
                          "nameLocations": [
                            "8479:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "8479:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "8479:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1483,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "8509:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1482,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "8503:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8503:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8479:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1489,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8573:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8577:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8573:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1487,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "8547:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8563:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "8547:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8547:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1492,
                          "name": "tradingForTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "8588:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8547:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8539:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8539:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "8539:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1499,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8650:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8654:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8650:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1503,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8670:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8662:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1501,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8662:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8662:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1497,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "8624:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8640:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "8624:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8624:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1506,
                          "name": "tradingForTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "8680:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8624:77:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8616:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8616:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "8616:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1513,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8738:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8742:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8738:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1515,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "8750:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1516,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "8758:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1510,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "8709:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8725:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "8709:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8709:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "8709:71:5"
                },
                {
                  "expression": {
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1519,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "8787:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1522,
                          "indexExpression": {
                            "id": 1520,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "8822:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8787:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1523,
                        "indexExpression": {
                          "id": 1521,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "8830:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8787:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8844:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 894,
                      "src": "8787:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8860:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8787:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "8787:77:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1529,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "8909:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1530,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1428,
                        "src": "8923:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1531,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "8950:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1532,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "8976:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "9006:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1528,
                      "name": "EventTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "8876:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:157:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "EmitStatement",
                  "src": "8871:162:5"
                }
              ]
            },
            "functionSelector": "d74f378c",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensFromOtherTokens",
            "nameLocation": "7736:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7769:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "7761:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "7782:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "7777:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7777:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7760:35:5"
            },
            "returnParameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7803:0:5"
            },
            "scope": 2306,
            "src": "7727:1311:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1636,
              "nodeType": "Block",
              "src": "9505:900:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1545,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 937,
                                "src": "9519:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1547,
                              "indexExpression": {
                                "id": 1546,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1539,
                                "src": "9551:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9519:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1549,
                            "indexExpression": {
                              "id": 1548,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1541,
                              "src": "9559:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9519:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9573:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 903,
                          "src": "9519:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9590:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9519:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9511:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9511:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "9511:84:5"
                },
                {
                  "assignments": [
                    1556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1556,
                      "mutability": "mutable",
                      "name": "tradingTokenAddress",
                      "nameLocation": "9609:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1636,
                      "src": "9601:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1555,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9601:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1563,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1557,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "9631:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1559,
                        "indexExpression": {
                          "id": 1558,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "9663:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9631:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1561,
                      "indexExpression": {
                        "id": 1560,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "9671:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9631:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9685:19:5",
                    "memberName": "tradingTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 897,
                    "src": "9631:73:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9601:103:5"
                },
                {
                  "assignments": [
                    1565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1565,
                      "mutability": "mutable",
                      "name": "tradingTokenAmount",
                      "nameLocation": "9715:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1636,
                      "src": "9710:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1564,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9710:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1572,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1566,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "9736:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1568,
                        "indexExpression": {
                          "id": 1567,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "9768:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9736:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1570,
                      "indexExpression": {
                        "id": 1569,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "9776:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9736:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9790:18:5",
                    "memberName": "tradingTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 899,
                    "src": "9736:72:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9710:98:5"
                },
                {
                  "assignments": [
                    1574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1574,
                      "mutability": "mutable",
                      "name": "tradingForEthAmount",
                      "nameLocation": "9819:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1636,
                      "src": "9814:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1573,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9814:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1581,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1575,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "9841:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1577,
                        "indexExpression": {
                          "id": 1576,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "9873:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9841:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1579,
                      "indexExpression": {
                        "id": 1578,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "9881:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9841:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9895:19:5",
                    "memberName": "tradingForEthAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 901,
                    "src": "9841:73:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9814:100:5"
                },
                {
                  "assignments": [
                    1584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1584,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "9927:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1636,
                      "src": "9921:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1583,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1582,
                          "name": "ERC20",
                          "nameLocations": [
                            "9921:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "9921:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "9921:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1588,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1586,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "9948:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1585,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "9942:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9942:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9921:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1592,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "10000:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1593,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10008:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10012:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10008:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1595,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1565,
                        "src": "10020:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1589,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "9974:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9987:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "9974:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9974:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "9974:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1599,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10054:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10058:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10054:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1601,
                          "name": "tradingForEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "10067:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10054:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10046:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10046:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "10046:41:5"
                },
                {
                  "assignments": [
                    1606,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1606,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "10100:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1636,
                      "src": "10095:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1605,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10095:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1614,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10139:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1607,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "10109:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10116:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "10109:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10128:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10132:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10128:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "10109:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10109:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10094:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1616,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "10156:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10162:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10148:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10148:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "10148:37:5"
                },
                {
                  "expression": {
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1620,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "10192:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1623,
                          "indexExpression": {
                            "id": 1621,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "10224:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10192:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1624,
                        "indexExpression": {
                          "id": 1622,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1541,
                          "src": "10232:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10192:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10246:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "10192:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10262:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10192:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1628,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1630,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "10308:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1631,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "10322:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1632,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1565,
                        "src": "10349:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1633,
                        "name": "tradingForEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "10375:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1629,
                      "name": "EventTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "10278:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10278:122:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1635,
                  "nodeType": "EmitStatement",
                  "src": "10273:127:5"
                }
              ]
            },
            "functionSelector": "8c69cd84",
            "id": 1637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensForEth",
            "nameLocation": "9439:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9463:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1637,
                  "src": "9455:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9455:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "9476:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1637,
                  "src": "9471:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9471:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9454:35:5"
            },
            "returnParameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9505:0:5"
            },
            "scope": 2306,
            "src": "9430:975:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1773,
              "nodeType": "Block",
              "src": "10835:1202:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1645,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "10849:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1647,
                              "indexExpression": {
                                "id": 1646,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "10881:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10849:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1649,
                            "indexExpression": {
                              "id": 1648,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "10889:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10849:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10903:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "10849:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10920:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "10849:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10841:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10841:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "10841:84:5"
                },
                {
                  "assignments": [
                    1656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1656,
                      "mutability": "mutable",
                      "name": "tradingEthAmount",
                      "nameLocation": "10936:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "10931:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1655,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10931:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1663,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1657,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "10955:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1659,
                        "indexExpression": {
                          "id": 1658,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "10987:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10955:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1661,
                      "indexExpression": {
                        "id": 1660,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "10995:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10955:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11009:16:5",
                    "memberName": "tradingEthAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 906,
                    "src": "10955:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10931:94:5"
                },
                {
                  "assignments": [
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1665,
                      "mutability": "mutable",
                      "name": "tradingForTokenAddress",
                      "nameLocation": "11039:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "11031:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1664,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11031:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1672,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1666,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "11064:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1668,
                        "indexExpression": {
                          "id": 1667,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "11096:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11064:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1670,
                      "indexExpression": {
                        "id": 1669,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "11104:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11064:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11118:22:5",
                    "memberName": "tradingForTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 908,
                    "src": "11064:76:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11031:109:5"
                },
                {
                  "assignments": [
                    1674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1674,
                      "mutability": "mutable",
                      "name": "tradingForTokenAmount",
                      "nameLocation": "11151:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "11146:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1673,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11146:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1681,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1675,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "11175:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1677,
                        "indexExpression": {
                          "id": 1676,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "11207:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11175:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1679,
                      "indexExpression": {
                        "id": 1678,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "11215:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11175:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11229:21:5",
                    "memberName": "tradingForTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 910,
                    "src": "11175:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11146:104:5"
                },
                {
                  "assignments": [
                    1684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "11263:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "11257:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1683,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1682,
                          "name": "ERC20",
                          "nameLocations": [
                            "11257:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "11257:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "11257:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1686,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "11287:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1685,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "11281:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11281:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11257:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1692,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11350:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11354:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11350:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1690,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "11324:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11340:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "11324:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11324:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1695,
                          "name": "tradingForTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "11365:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11324:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11316:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11316:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "11316:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1702,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "11418:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1703,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "11426:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1699,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "11393:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11409:8:5",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 261,
                      "src": "11393:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11393:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "11393:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1709,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11489:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11493:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11489:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1707,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "11463:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11479:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "11463:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11463:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1712,
                          "name": "tradingForTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "11504:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11463:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11455:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11455:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "11455:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1719,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11566:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11570:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11566:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1723,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "11586:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2306",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11578:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1721,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11578:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11578:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1717,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "11540:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11556:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "11540:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11540:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1726,
                          "name": "tradingForTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "11596:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11540:77:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11532:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11532:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "ExpressionStatement",
                  "src": "11532:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11654:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11658:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11654:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "11666:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1736,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "11674:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1730,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "11625:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11641:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "11625:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11625:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "11625:71:5"
                },
                {
                  "assignments": [
                    1740,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1740,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "11709:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "11704:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1739,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11704:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1751,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11768:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1743,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11726:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11730:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11726:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11718:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11718:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11718:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11738:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "11718:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1747,
                          "name": "tradingEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "11750:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "11718:49:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11718:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11703:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1753,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "11785:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11791:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11777:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11777:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "11777:37:5"
                },
                {
                  "expression": {
                    "id": 1764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1757,
                            "name": "tradesOfEthForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "11821:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1760,
                          "indexExpression": {
                            "id": 1758,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "11853:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11821:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1761,
                        "indexExpression": {
                          "id": 1759,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "11861:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11821:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11875:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "11821:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11891:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11821:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1765,
                  "nodeType": "ExpressionStatement",
                  "src": "11821:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1767,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "11937:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1768,
                        "name": "tradingEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "11951:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1769,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "11975:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1770,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "12005:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1766,
                      "name": "EventTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "11907:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11907:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1772,
                  "nodeType": "EmitStatement",
                  "src": "11902:130:5"
                }
              ]
            },
            "functionSelector": "1cdec042",
            "id": 1774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyEthForTokens",
            "nameLocation": "10769:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "10793:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "10785:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10785:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1641,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "10806:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "10801:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10801:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10784:35:5"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10835:0:5"
            },
            "scope": 2306,
            "src": "10760:1277:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1841,
              "nodeType": "Block",
              "src": "12334:752:5",
              "statements": [
                {
                  "expression": {
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1781,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "12340:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1784,
                          "indexExpression": {
                            "id": 1782,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1776,
                            "src": "12375:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12340:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1785,
                        "indexExpression": {
                          "id": 1783,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "12383:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12340:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12397:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 894,
                      "src": "12340:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12413:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12340:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1789,
                  "nodeType": "ExpressionStatement",
                  "src": "12340:77:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1791,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12432:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12436:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12432:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1793,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "12446:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12432:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12424:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12424:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "12424:29:5"
                },
                {
                  "assignments": [
                    1798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1798,
                      "mutability": "mutable",
                      "name": "tradingTokenAddress",
                      "nameLocation": "12468:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "12460:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12460:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1805,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1799,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "12490:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1801,
                        "indexExpression": {
                          "id": 1800,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "12525:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12490:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1803,
                      "indexExpression": {
                        "id": 1802,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "12533:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12490:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12547:19:5",
                    "memberName": "tradingTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 886,
                    "src": "12490:76:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12460:106:5"
                },
                {
                  "assignments": [
                    1807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1807,
                      "mutability": "mutable",
                      "name": "tradingTokenAmount",
                      "nameLocation": "12577:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "12572:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1806,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12572:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1814,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1808,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "12598:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1810,
                        "indexExpression": {
                          "id": 1809,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "12633:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12598:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1812,
                      "indexExpression": {
                        "id": 1811,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "12641:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12598:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12655:18:5",
                    "memberName": "tradingTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 888,
                    "src": "12598:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12572:101:5"
                },
                {
                  "assignments": [
                    1816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1816,
                      "mutability": "mutable",
                      "name": "tradingForTokenAddress",
                      "nameLocation": "12687:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "12679:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1815,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12679:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1823,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1817,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "12712:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1819,
                        "indexExpression": {
                          "id": 1818,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "12747:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12712:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1821,
                      "indexExpression": {
                        "id": 1820,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "12755:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12712:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12769:22:5",
                    "memberName": "tradingForTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 890,
                    "src": "12712:79:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12679:112:5"
                },
                {
                  "assignments": [
                    1825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1825,
                      "mutability": "mutable",
                      "name": "tradingForTokenAmount",
                      "nameLocation": "12802:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1841,
                      "src": "12797:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1824,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12797:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1832,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1826,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "12826:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1828,
                        "indexExpression": {
                          "id": 1827,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "12861:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12826:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1830,
                      "indexExpression": {
                        "id": 1829,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "12869:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12826:56:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                      }
                    },
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12883:21:5",
                    "memberName": "tradingForTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 892,
                    "src": "12826:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12797:107:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1834,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1776,
                        "src": "12957:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1835,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1798,
                        "src": "12971:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1836,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "12998:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1837,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "13024:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1838,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "13054:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1833,
                      "name": "EventCanceledTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "12916:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12916:165:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1840,
                  "nodeType": "EmitStatement",
                  "src": "12911:170:5"
                }
              ]
            },
            "functionSelector": "748d6a74",
            "id": 1842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithTokens",
            "nameLocation": "12261:30:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12300:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "12292:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12292:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "12313:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "12308:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12308:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12291:35:5"
            },
            "returnParameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12334:0:5"
            },
            "scope": 2306,
            "src": "12252:834:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1899,
              "nodeType": "Block",
              "src": "13342:583:5",
              "statements": [
                {
                  "expression": {
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1849,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "13348:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1852,
                          "indexExpression": {
                            "id": 1850,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1844,
                            "src": "13380:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13348:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1853,
                        "indexExpression": {
                          "id": 1851,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "13388:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13348:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13402:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "13348:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13418:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13348:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1857,
                  "nodeType": "ExpressionStatement",
                  "src": "13348:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1859,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13437:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13441:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13437:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1861,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "13451:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13437:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13429:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13429:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "13429:29:5"
                },
                {
                  "assignments": [
                    1866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1866,
                      "mutability": "mutable",
                      "name": "tradingTokenAddress",
                      "nameLocation": "13473:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1899,
                      "src": "13465:27:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1865,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13465:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1873,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1867,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "13495:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1869,
                        "indexExpression": {
                          "id": 1868,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "13527:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13495:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1871,
                      "indexExpression": {
                        "id": 1870,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "13535:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13495:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13549:19:5",
                    "memberName": "tradingTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 897,
                    "src": "13495:73:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13465:103:5"
                },
                {
                  "assignments": [
                    1875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1875,
                      "mutability": "mutable",
                      "name": "tradingTokenAmount",
                      "nameLocation": "13579:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1899,
                      "src": "13574:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1874,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13574:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1876,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "13600:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1878,
                        "indexExpression": {
                          "id": 1877,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "13632:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13600:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1880,
                      "indexExpression": {
                        "id": 1879,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "13640:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13600:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13654:18:5",
                    "memberName": "tradingTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 899,
                    "src": "13600:72:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13574:98:5"
                },
                {
                  "assignments": [
                    1884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1884,
                      "mutability": "mutable",
                      "name": "tradingForEthAmount",
                      "nameLocation": "13683:19:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1899,
                      "src": "13678:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1883,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13678:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1891,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1885,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "13705:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1887,
                        "indexExpression": {
                          "id": 1886,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "13737:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13705:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1889,
                      "indexExpression": {
                        "id": 1888,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "13745:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13705:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                      }
                    },
                    "id": 1890,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13759:19:5",
                    "memberName": "tradingForEthAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 901,
                    "src": "13705:73:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13678:100:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1893,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "13828:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1894,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "13842:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1895,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1875,
                        "src": "13869:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1896,
                        "name": "tradingForEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "13895:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1892,
                      "name": "EventCanceledTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "13790:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13790:130:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1898,
                  "nodeType": "EmitStatement",
                  "src": "13785:135:5"
                }
              ]
            },
            "functionSelector": "59560382",
            "id": 1900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithEth",
            "nameLocation": "13272:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13308:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1900,
                  "src": "13300:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13300:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "13321:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1900,
                  "src": "13316:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13316:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13299:35:5"
            },
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13342:0:5"
            },
            "scope": 2306,
            "src": "13263:662:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1967,
              "nodeType": "Block",
              "src": "14195:634:5",
              "statements": [
                {
                  "expression": {
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1907,
                          "name": "tradeEthForTokensArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "14201:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1909,
                        "indexExpression": {
                          "id": 1908,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "14222:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14201:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14236:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "14201:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14252:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14201:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1913,
                  "nodeType": "ExpressionStatement",
                  "src": "14201:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1915,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "14271:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14275:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14271:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1917,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1902,
                          "src": "14285:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14271:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14263:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14263:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1920,
                  "nodeType": "ExpressionStatement",
                  "src": "14263:29:5"
                },
                {
                  "assignments": [
                    1922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1922,
                      "mutability": "mutable",
                      "name": "tradingEthAmount",
                      "nameLocation": "14304:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1967,
                      "src": "14299:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1921,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14299:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1927,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1923,
                        "name": "tradeEthForTokensArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "14323:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1925,
                      "indexExpression": {
                        "id": 1924,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1904,
                        "src": "14344:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14323:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14358:16:5",
                    "memberName": "tradingEthAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 906,
                    "src": "14323:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14299:75:5"
                },
                {
                  "assignments": [
                    1929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1929,
                      "mutability": "mutable",
                      "name": "tradingForTokenAddress",
                      "nameLocation": "14388:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1967,
                      "src": "14380:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1928,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14380:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1934,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1930,
                        "name": "tradeEthForTokensArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "14413:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1932,
                      "indexExpression": {
                        "id": 1931,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1904,
                        "src": "14434:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14413:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14448:22:5",
                    "memberName": "tradingForTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 908,
                    "src": "14413:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14380:90:5"
                },
                {
                  "assignments": [
                    1936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1936,
                      "mutability": "mutable",
                      "name": "tradingForTokenAmount",
                      "nameLocation": "14481:21:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1967,
                      "src": "14476:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1935,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14476:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1941,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1937,
                        "name": "tradeEthForTokensArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "14505:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1939,
                      "indexExpression": {
                        "id": 1938,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1904,
                        "src": "14526:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14505:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14540:21:5",
                    "memberName": "tradingForTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 910,
                    "src": "14505:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14476:85:5"
                },
                {
                  "assignments": [
                    1943,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1943,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "14574:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1967,
                      "src": "14569:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1942,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14569:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1954,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14633:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1946,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14591:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14595:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14591:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14583:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14583:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14583:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14603:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "14583:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1950,
                          "name": "tradingEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1922,
                          "src": "14615:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "14583:49:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14583:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14568:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1956,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "14650:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14656:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14642:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "14642:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1961,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "14729:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1962,
                        "name": "tradingEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "14743:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1963,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "14767:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1964,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "14797:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1960,
                      "name": "EventCanceledTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "14691:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 1965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14691:133:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1966,
                  "nodeType": "EmitStatement",
                  "src": "14686:138:5"
                }
              ]
            },
            "functionSelector": "e39c40fc",
            "id": 1968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForEthWithTokens",
            "nameLocation": "14117:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14153:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1968,
                  "src": "14145:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14145:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "14166:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1968,
                  "src": "14161:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14161:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14144:35:5"
            },
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14195:0:5"
            },
            "scope": 2306,
            "src": "14108:721:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokensForCall",
            "id": 1981,
            "members": [
              {
                "constant": false,
                "id": 1970,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "15244:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15236:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1969,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15236:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1972,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "15264:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15256:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1971,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15256:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1974,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "15294:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15289:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1973,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "15289:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1976,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "15326:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15318:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1975,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15318:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1978,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "15359:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15354:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1977,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "15354:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1980,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "15391:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 1981,
                "src": "15386:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1979,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "15386:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokensForCall",
            "nameLocation": "15202:27:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "15195:214:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "15510:1068:5",
              "statements": [
                {
                  "assignments": [
                    1992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1992,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensResultArr",
                      "nameLocation": "15553:29:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "15516:66:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1990,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1989,
                            "name": "TradeTokensForTokensForCall",
                            "nameLocations": [
                              "15516:27:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1981,
                            "src": "15516:27:5"
                          },
                          "referencedDeclaration": 1981,
                          "src": "15516:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                          }
                        },
                        "id": 1991,
                        "nodeType": "ArrayTypeName",
                        "src": "15516:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1993,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15516:66:5"
                },
                {
                  "assignments": [
                    1995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1995,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "15594:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "15589:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1994,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15589:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1997,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15613:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15589:25:5"
                },
                {
                  "body": {
                    "id": 2078,
                    "nodeType": "Block",
                    "src": "15667:864:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2009,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "15679:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 2013,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2010,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 953,
                                  "src": "15695:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2012,
                                "indexExpression": {
                                  "id": 2011,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1999,
                                  "src": "15707:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15695:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15679:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 2014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15711:20:5",
                            "memberName": "tradeTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "15679:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 2015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15735:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15679:60:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2077,
                        "nodeType": "IfStatement",
                        "src": "15675:850:5",
                        "trueBody": {
                          "id": 2076,
                          "nodeType": "Block",
                          "src": "15741:784:5",
                          "statements": [
                            {
                              "body": {
                                "id": 2074,
                                "nodeType": "Block",
                                "src": "15836:681:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2034
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2034,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForTokens",
                                        "nameLocation": "15876:20:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2074,
                                        "src": "15848:48:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokens"
                                        },
                                        "typeName": {
                                          "id": 2033,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2032,
                                            "name": "TradeTokensForTokens",
                                            "nameLocations": [
                                              "15848:20:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 895,
                                            "src": "15848:20:5"
                                          },
                                          "referencedDeclaration": 895,
                                          "src": "15848:20:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForTokens"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2042,
                                    "initialValue": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 2035,
                                          "name": "tradesOfTokensForTokensOfAnAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 931,
                                          "src": "15899:34:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 2039,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 2036,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "15934:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2038,
                                          "indexExpression": {
                                            "id": 2037,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1999,
                                            "src": "15946:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15934:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15899:50:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2041,
                                      "indexExpression": {
                                        "id": 2040,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2018,
                                        "src": "15950:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15899:53:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_storage",
                                        "typeString": "struct Dex.TradeTokensForTokens storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "15848:104:5"
                                  },
                                  {
                                    "assignments": [
                                      2045
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2045,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForTokensForCall",
                                        "nameLocation": "15999:27:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2074,
                                        "src": "15964:62:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokensForCall"
                                        },
                                        "typeName": {
                                          "id": 2044,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2043,
                                            "name": "TradeTokensForTokensForCall",
                                            "nameLocations": [
                                              "15964:27:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1981,
                                            "src": "15964:27:5"
                                          },
                                          "referencedDeclaration": 1981,
                                          "src": "15964:27:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2061,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2047,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "16071:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2049,
                                          "indexExpression": {
                                            "id": 2048,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1999,
                                            "src": "16083:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16071:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2050,
                                            "name": "tradeTokensForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2034,
                                            "src": "16099:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 2051,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16120:19:5",
                                          "memberName": "tradingTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 886,
                                          "src": "16099:40:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2052,
                                            "name": "tradeTokensForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2034,
                                            "src": "16153:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 2053,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16174:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 888,
                                          "src": "16153:39:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2054,
                                            "name": "tradeTokensForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2034,
                                            "src": "16206:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 2055,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16227:22:5",
                                          "memberName": "tradingForTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 890,
                                          "src": "16206:43:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2056,
                                            "name": "tradeTokensForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2034,
                                            "src": "16263:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 2057,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16284:21:5",
                                          "memberName": "tradingForTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 892,
                                          "src": "16263:42:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2058,
                                            "name": "tradeTokensForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2034,
                                            "src": "16319:20:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$895_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForTokens memory"
                                            }
                                          },
                                          "id": 2059,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16340:13:5",
                                          "memberName": "alreadyTraded",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 894,
                                          "src": "16319:34:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 2046,
                                        "name": "TradeTokensForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1981,
                                        "src": "16029:27:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokensForCall_$1981_storage_ptr_$",
                                          "typeString": "type(struct Dex.TradeTokensForTokensForCall storage pointer)"
                                        }
                                      },
                                      "id": 2060,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16029:336:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "15964:401:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2066,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2062,
                                          "name": "tradeTokensForTokensResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "16378:29:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                                          }
                                        },
                                        "id": 2064,
                                        "indexExpression": {
                                          "id": 2063,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1995,
                                          "src": "16408:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16378:47:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2065,
                                        "name": "tradeTokensForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2045,
                                        "src": "16428:27:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                        }
                                      },
                                      "src": "16378:77:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                      }
                                    },
                                    "id": 2067,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16378:77:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2072,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2068,
                                        "name": "indexOfResultArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1995,
                                        "src": "16467:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2071,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2069,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1995,
                                          "src": "16486:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2070,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16505:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16486:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16467:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2073,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16467:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2021,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2018,
                                  "src": "15768:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2022,
                                      "name": "tradesOfTokensForTokensOfAnAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 931,
                                      "src": "15772:34:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2026,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2023,
                                        "name": "dexUsersArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 953,
                                        "src": "15807:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2025,
                                      "indexExpression": {
                                        "id": 2024,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1999,
                                        "src": "15819:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15807:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15772:50:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$895_storage_$dyn_storage",
                                      "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15823:6:5",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "15772:57:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15768:61:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2075,
                              "initializationExpression": {
                                "assignments": [
                                  2018
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2018,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "15761:1:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2075,
                                    "src": "15756:6:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2017,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15756:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2020,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15765:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "15756:10:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "15831:3:5",
                                  "subExpression": {
                                    "id": 2029,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2018,
                                    "src": "15831:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2031,
                                "nodeType": "ExpressionStatement",
                                "src": "15831:3:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "15751:766:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2002,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1999,
                      "src": "15638:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2003,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "15642:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15654:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15642:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15638:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2079,
                  "initializationExpression": {
                    "assignments": [
                      1999
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1999,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15631:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2079,
                        "src": "15626:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1998,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15626:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2001,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15635:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15626:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15662:3:5",
                      "subExpression": {
                        "id": 2006,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "15662:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2008,
                    "nodeType": "ExpressionStatement",
                    "src": "15662:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "15621:910:5"
                },
                {
                  "expression": {
                    "id": 2080,
                    "name": "tradeTokensForTokensResultArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1992,
                    "src": "16544:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1987,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "16537:36:5"
                }
              ]
            },
            "functionSelector": "5e295abe",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForTokenWithToken",
            "nameLocation": "15422:26:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15448:2:5"
            },
            "returnParameters": {
              "id": 1987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "15472:36:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1984,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1983,
                        "name": "TradeTokensForTokensForCall",
                        "nameLocations": [
                          "15472:27:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1981,
                        "src": "15472:27:5"
                      },
                      "referencedDeclaration": 1981,
                      "src": "15472:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$1981_storage_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall"
                      }
                    },
                    "id": 1985,
                    "nodeType": "ArrayTypeName",
                    "src": "15472:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$1981_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15471:38:5"
            },
            "scope": 2306,
            "src": "15413:1165:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEthForCall",
            "id": 2094,
            "members": [
              {
                "constant": false,
                "id": 2085,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "16628:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2094,
                "src": "16620:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2084,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "16620:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2087,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "16648:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 2094,
                "src": "16640:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2086,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "16640:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2089,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "16678:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 2094,
                "src": "16673:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2088,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "16673:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2091,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "16707:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 2094,
                "src": "16702:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2090,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "16702:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2093,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "16737:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 2094,
                "src": "16732:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2092,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "16732:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEthForCall",
            "nameLocation": "16589:24:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "16582:173:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2193,
              "nodeType": "Block",
              "src": "16845:952:5",
              "statements": [
                {
                  "assignments": [
                    2105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2105,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthResultArr",
                      "nameLocation": "16885:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "16851:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2094_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2103,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2102,
                            "name": "TradeTokensForEthForCall",
                            "nameLocations": [
                              "16851:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2094,
                            "src": "16851:24:5"
                          },
                          "referencedDeclaration": 2094,
                          "src": "16851:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall"
                          }
                        },
                        "id": 2104,
                        "nodeType": "ArrayTypeName",
                        "src": "16851:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2094_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEthForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2106,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16851:60:5"
                },
                {
                  "assignments": [
                    2108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2108,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "16923:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "16918:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2107,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16918:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2110,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16942:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16918:25:5"
                },
                {
                  "body": {
                    "id": 2189,
                    "nodeType": "Block",
                    "src": "16996:763:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2122,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "17008:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 2126,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2123,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 953,
                                  "src": "17024:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2125,
                                "indexExpression": {
                                  "id": 2124,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "17036:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17024:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17008:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 2127,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17040:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 947,
                            "src": "17008:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17061:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "17008:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2188,
                        "nodeType": "IfStatement",
                        "src": "17004:749:5",
                        "trueBody": {
                          "id": 2187,
                          "nodeType": "Block",
                          "src": "17067:686:5",
                          "statements": [
                            {
                              "body": {
                                "id": 2185,
                                "nodeType": "Block",
                                "src": "17159:586:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2147
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2147,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForEth",
                                        "nameLocation": "17196:17:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2185,
                                        "src": "17171:42:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEth"
                                        },
                                        "typeName": {
                                          "id": 2146,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2145,
                                            "name": "TradeTokensForEth",
                                            "nameLocations": [
                                              "17171:17:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 904,
                                            "src": "17171:17:5"
                                          },
                                          "referencedDeclaration": 904,
                                          "src": "17171:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForEth"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2155,
                                    "initialValue": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 2148,
                                          "name": "tradesOfTokensForEthOfAnAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 937,
                                          "src": "17216:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 2152,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 2149,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "17248:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2151,
                                          "indexExpression": {
                                            "id": 2150,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2112,
                                            "src": "17260:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17248:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "17216:47:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2154,
                                      "indexExpression": {
                                        "id": 2153,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2131,
                                        "src": "17264:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17216:50:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage",
                                        "typeString": "struct Dex.TradeTokensForEth storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "17171:95:5"
                                  },
                                  {
                                    "assignments": [
                                      2158
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2158,
                                        "mutability": "mutable",
                                        "name": "tradeTokensForEthForCall",
                                        "nameLocation": "17310:24:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2185,
                                        "src": "17278:56:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall"
                                        },
                                        "typeName": {
                                          "id": 2157,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2156,
                                            "name": "TradeTokensForEthForCall",
                                            "nameLocations": [
                                              "17278:24:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2094,
                                            "src": "17278:24:5"
                                          },
                                          "referencedDeclaration": 2094,
                                          "src": "17278:24:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_storage_ptr",
                                            "typeString": "struct Dex.TradeTokensForEthForCall"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2172,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2160,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "17376:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2162,
                                          "indexExpression": {
                                            "id": 2161,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2112,
                                            "src": "17388:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17376:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2163,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2147,
                                            "src": "17404:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2164,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "17422:19:5",
                                          "memberName": "tradingTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 897,
                                          "src": "17404:37:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2165,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2147,
                                            "src": "17455:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2166,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "17473:18:5",
                                          "memberName": "tradingTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 899,
                                          "src": "17455:36:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2167,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2147,
                                            "src": "17505:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2168,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "17523:19:5",
                                          "memberName": "tradingForEthAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 901,
                                          "src": "17505:37:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2169,
                                            "name": "tradeTokensForEth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2147,
                                            "src": "17556:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeTokensForEth_$904_memory_ptr",
                                              "typeString": "struct Dex.TradeTokensForEth memory"
                                            }
                                          },
                                          "id": 2170,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "17574:13:5",
                                          "memberName": "alreadyTraded",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 903,
                                          "src": "17556:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 2159,
                                        "name": "TradeTokensForEthForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2094,
                                        "src": "17337:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_TradeTokensForEthForCall_$2094_storage_ptr_$",
                                          "typeString": "type(struct Dex.TradeTokensForEthForCall storage pointer)"
                                        }
                                      },
                                      "id": 2171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17337:262:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "17278:321:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2173,
                                          "name": "tradeTokensForEthResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2105,
                                          "src": "17612:26:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$2094_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                                          }
                                        },
                                        "id": 2175,
                                        "indexExpression": {
                                          "id": 2174,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2108,
                                          "src": "17639:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "17612:44:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2176,
                                        "name": "tradeTokensForEthForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2158,
                                        "src": "17659:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_memory_ptr",
                                          "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                        }
                                      },
                                      "src": "17612:71:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$2094_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                      }
                                    },
                                    "id": 2178,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17612:71:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2179,
                                        "name": "indexOfResultArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2108,
                                        "src": "17695:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2180,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2108,
                                          "src": "17714:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2181,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17733:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "17714:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17695:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2184,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17695:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2134,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2131,
                                  "src": "17094:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2135,
                                      "name": "tradesOfTokensForEthOfAnAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 937,
                                      "src": "17098:31:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2139,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2136,
                                        "name": "dexUsersArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 953,
                                        "src": "17130:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2138,
                                      "indexExpression": {
                                        "id": 2137,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2112,
                                        "src": "17142:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17130:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17098:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17146:6:5",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17098:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17094:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2186,
                              "initializationExpression": {
                                "assignments": [
                                  2131
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2131,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "17087:1:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2186,
                                    "src": "17082:6:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2130,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17082:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2133,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17091:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "17082:10:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "17154:3:5",
                                  "subExpression": {
                                    "id": 2142,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2131,
                                    "src": "17154:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2144,
                                "nodeType": "ExpressionStatement",
                                "src": "17154:3:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "17077:668:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2115,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2112,
                      "src": "16967:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2116,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "16971:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16983:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16971:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16967:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2190,
                  "initializationExpression": {
                    "assignments": [
                      2112
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16960:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "16955:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16955:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2114,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16964:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16955:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16991:3:5",
                      "subExpression": {
                        "id": 2119,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "16991:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2121,
                    "nodeType": "ExpressionStatement",
                    "src": "16991:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "16950:809:5"
                },
                {
                  "expression": {
                    "id": 2191,
                    "name": "tradeTokensForEthArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 921,
                    "src": "17772:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2100,
                  "id": 2192,
                  "nodeType": "Return",
                  "src": "17765:27:5"
                }
              ]
            },
            "functionSelector": "b25cfc90",
            "id": 2194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForTokensWithEth",
            "nameLocation": "16768:25:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16793:2:5"
            },
            "returnParameters": {
              "id": 2100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "16817:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeTokensForEth[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2097,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2096,
                        "name": "TradeTokensForEth",
                        "nameLocations": [
                          "16817:17:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 904,
                        "src": "16817:17:5"
                      },
                      "referencedDeclaration": 904,
                      "src": "16817:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokensForEth_$904_storage_ptr",
                        "typeString": "struct Dex.TradeTokensForEth"
                      }
                    },
                    "id": 2098,
                    "nodeType": "ArrayTypeName",
                    "src": "16817:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$904_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEth[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16816:28:5"
            },
            "scope": 2306,
            "src": "16759:1038:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokensForCall",
            "id": 2205,
            "members": [
              {
                "constant": false,
                "id": 2196,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "18023:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2205,
                "src": "18015:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2195,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "18015:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2198,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "18040:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 2205,
                "src": "18035:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2197,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18035:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2200,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "18070:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 2205,
                "src": "18062:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2199,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "18062:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2202,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "18103:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 2205,
                "src": "18098:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2201,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "18098:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2204,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "18135:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 2205,
                "src": "18130:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2203,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "18130:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokensForCall",
            "nameLocation": "17984:24:5",
            "nodeType": "StructDefinition",
            "scope": 2306,
            "src": "17977:176:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "18243:955:5",
              "statements": [
                {
                  "assignments": [
                    2216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2216,
                      "mutability": "mutable",
                      "name": "tradeEthForTokensResultArr",
                      "nameLocation": "18283:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "18249:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2205_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2214,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2213,
                            "name": "TradeEthForTokensForCall",
                            "nameLocations": [
                              "18249:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2205,
                            "src": "18249:24:5"
                          },
                          "referencedDeclaration": 2205,
                          "src": "18249:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall"
                          }
                        },
                        "id": 2215,
                        "nodeType": "ArrayTypeName",
                        "src": "18249:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2205_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeEthForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2217,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18249:60:5"
                },
                {
                  "assignments": [
                    2219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2219,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "18321:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2304,
                      "src": "18316:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2218,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18316:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2221,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18340:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18316:25:5"
                },
                {
                  "body": {
                    "id": 2300,
                    "nodeType": "Block",
                    "src": "18394:766:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2233,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "18406:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$950_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 2237,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2234,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 953,
                                  "src": "18422:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2236,
                                "indexExpression": {
                                  "id": 2235,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2223,
                                  "src": "18434:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18422:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18406:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$950_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18438:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 947,
                            "src": "18406:49:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 2239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18459:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "18406:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2299,
                        "nodeType": "IfStatement",
                        "src": "18402:752:5",
                        "trueBody": {
                          "id": 2298,
                          "nodeType": "Block",
                          "src": "18465:689:5",
                          "statements": [
                            {
                              "body": {
                                "id": 2296,
                                "nodeType": "Block",
                                "src": "18557:589:5",
                                "statements": [
                                  {
                                    "assignments": [
                                      2258
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2258,
                                        "mutability": "mutable",
                                        "name": "tradeEthForTokens",
                                        "nameLocation": "18594:17:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2296,
                                        "src": "18569:42:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokens"
                                        },
                                        "typeName": {
                                          "id": 2257,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2256,
                                            "name": "TradeEthForTokens",
                                            "nameLocations": [
                                              "18569:17:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 913,
                                            "src": "18569:17:5"
                                          },
                                          "referencedDeclaration": 913,
                                          "src": "18569:17:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                                            "typeString": "struct Dex.TradeEthForTokens"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2266,
                                    "initialValue": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 2259,
                                          "name": "tradesOfEthForTokensOfAnAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 943,
                                          "src": "18614:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 2263,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 2260,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "18646:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2262,
                                          "indexExpression": {
                                            "id": 2261,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2223,
                                            "src": "18658:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18646:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18614:47:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2265,
                                      "indexExpression": {
                                        "id": 2264,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2242,
                                        "src": "18662:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18614:50:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage",
                                        "typeString": "struct Dex.TradeEthForTokens storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "18569:95:5"
                                  },
                                  {
                                    "assignments": [
                                      2269
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2269,
                                        "mutability": "mutable",
                                        "name": "tradeEthForTokensForCall",
                                        "nameLocation": "18708:24:5",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2296,
                                        "src": "18676:56:5",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall"
                                        },
                                        "typeName": {
                                          "id": 2268,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 2267,
                                            "name": "TradeEthForTokensForCall",
                                            "nameLocations": [
                                              "18676:24:5"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 2205,
                                            "src": "18676:24:5"
                                          },
                                          "referencedDeclaration": 2205,
                                          "src": "18676:24:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_storage_ptr",
                                            "typeString": "struct Dex.TradeEthForTokensForCall"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2283,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2271,
                                            "name": "dexUsersArr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "18774:11:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 2273,
                                          "indexExpression": {
                                            "id": 2272,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2223,
                                            "src": "18786:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18774:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2274,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2258,
                                            "src": "18802:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2275,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "18820:16:5",
                                          "memberName": "tradingEthAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 906,
                                          "src": "18802:34:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2276,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2258,
                                            "src": "18850:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2277,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "18868:22:5",
                                          "memberName": "tradingForTokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 908,
                                          "src": "18850:40:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2278,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2258,
                                            "src": "18904:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2279,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "18922:21:5",
                                          "memberName": "tradingForTokenAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 910,
                                          "src": "18904:39:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2280,
                                            "name": "tradeEthForTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2258,
                                            "src": "18957:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeEthForTokens_$913_memory_ptr",
                                              "typeString": "struct Dex.TradeEthForTokens memory"
                                            }
                                          },
                                          "id": 2281,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "18975:13:5",
                                          "memberName": "alreadyTraded",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 912,
                                          "src": "18957:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 2270,
                                        "name": "TradeEthForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2205,
                                        "src": "18735:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_TradeEthForTokensForCall_$2205_storage_ptr_$",
                                          "typeString": "type(struct Dex.TradeEthForTokensForCall storage pointer)"
                                        }
                                      },
                                      "id": 2282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18735:265:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "18676:324:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2284,
                                          "name": "tradeEthForTokensResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2216,
                                          "src": "19013:26:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$2205_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                                          }
                                        },
                                        "id": 2286,
                                        "indexExpression": {
                                          "id": 2285,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2219,
                                          "src": "19040:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "19013:44:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2287,
                                        "name": "tradeEthForTokensForCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2269,
                                        "src": "19060:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_memory_ptr",
                                          "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                        }
                                      },
                                      "src": "19013:71:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$2205_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                      }
                                    },
                                    "id": 2289,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19013:71:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 2294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2290,
                                        "name": "indexOfResultArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2219,
                                        "src": "19096:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2293,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2291,
                                          "name": "indexOfResultArr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2219,
                                          "src": "19115:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2292,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "19134:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "19115:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19096:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2295,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19096:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2245,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2242,
                                  "src": "18492:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2246,
                                      "name": "tradesOfEthForTokensOfAnAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 943,
                                      "src": "18496:31:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 2250,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2247,
                                        "name": "dexUsersArr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 953,
                                        "src": "18528:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2249,
                                      "indexExpression": {
                                        "id": 2248,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2223,
                                        "src": "18540:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18528:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18496:47:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                                      "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                                    }
                                  },
                                  "id": 2251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18544:6:5",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "18496:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18492:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2297,
                              "initializationExpression": {
                                "assignments": [
                                  2242
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 2242,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "18485:1:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2297,
                                    "src": "18480:6:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 2241,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18480:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 2244,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 2243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18489:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18480:10:5"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 2254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "18552:3:5",
                                  "subExpression": {
                                    "id": 2253,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "18552:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2255,
                                "nodeType": "ExpressionStatement",
                                "src": "18552:3:5"
                              },
                              "nodeType": "ForStatement",
                              "src": "18475:671:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2226,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "18365:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2227,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "18369:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18381:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18369:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18365:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2301,
                  "initializationExpression": {
                    "assignments": [
                      2223
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2223,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18358:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "18353:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2222,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18353:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2225,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18362:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18353:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "18389:3:5",
                      "subExpression": {
                        "id": 2230,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "18389:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2232,
                    "nodeType": "ExpressionStatement",
                    "src": "18389:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "18348:812:5"
                },
                {
                  "expression": {
                    "id": 2302,
                    "name": "tradeEthForTokensArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 925,
                    "src": "19173:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage",
                      "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2211,
                  "id": 2303,
                  "nodeType": "Return",
                  "src": "19166:27:5"
                }
              ]
            },
            "functionSelector": "4737ab8d",
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradesForEthWithTokens",
            "nameLocation": "18166:25:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18191:2:5"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "18215:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.TradeEthForTokens[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2208,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2207,
                        "name": "TradeEthForTokens",
                        "nameLocations": [
                          "18215:17:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 913,
                        "src": "18215:17:5"
                      },
                      "referencedDeclaration": 913,
                      "src": "18215:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeEthForTokens_$913_storage_ptr",
                        "typeString": "struct Dex.TradeEthForTokens"
                      }
                    },
                    "id": 2209,
                    "nodeType": "ArrayTypeName",
                    "src": "18215:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$913_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokens[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18214:28:5"
            },
            "scope": 2306,
            "src": "18157:1041:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2307,
        "src": "121:19079:5",
        "usedErrors": [],
        "usedEvents": [
          800,
          810,
          820,
          832,
          842,
          852,
          864,
          874,
          884
        ]
      }
    ],
    "src": "39:19162:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9acA813AA1f8494ac5247A719B6F62E2C808fd12",
      "transactionHash": "0xfbaf2f7ccead5f44d536c77e56aa983e5abdde7247cc67022dea2586e9b71504"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-27T22:03:57.897Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}