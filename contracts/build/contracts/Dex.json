{
  "contractName": "Dex",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventAddToDexTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EventCanceledTradeTokensForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "orderCompletedBy",
          "type": "address"
        }
      ],
      "name": "EventTradeEthForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "orderCompletedBy",
          "type": "address"
        }
      ],
      "name": "EventTradeTokensForEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "orderCompletedBy",
          "type": "address"
        }
      ],
      "name": "EventTradeTokensForTokens",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dexUsersArr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfEthForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForEthOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesOfTokensForTokensOfAnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadyTraded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithOtherTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tradingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradingForEthAmount",
          "type": "uint256"
        }
      ],
      "name": "addTokensToDexForTradeWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tradingEthAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tradingForTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tradingForTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "addEthToDexForTradeWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensFromTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyTokensForEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "buyEthForTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForTokensWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfTrade",
          "type": "uint256"
        }
      ],
      "name": "cancelTradeForEthWithTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getAllTrades",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingForTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeTokensForTokensForCall[]",
              "name": "tradeTokensForTokensForCall",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForEthAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeTokensForEthForCall[]",
              "name": "tradeTokensForEthForCall",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "indexOfTradeOfAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingEthAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tradingForTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tradingForTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "alreadyTraded",
                  "type": "bool"
                }
              ],
              "internalType": "struct Dex.TradeEthForTokensForCall[]",
              "name": "tradeEthForTokensForCall",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Dex.AllTrades",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDexUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventAddToDexTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"EventCanceledTradeTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"orderCompletedBy\",\"type\":\"address\"}],\"name\":\"EventTradeEthForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"orderCompletedBy\",\"type\":\"address\"}],\"name\":\"EventTradeTokensForEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"orderCompletedBy\",\"type\":\"address\"}],\"name\":\"EventTradeTokensForTokens\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addEthToDexForTradeWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"}],\"name\":\"addTokensToDexForTradeWithOtherTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyEthForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensForEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"buyTokensFromTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForEthWithTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTrade\",\"type\":\"uint256\"}],\"name\":\"cancelTradeForTokensWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexUsersArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTrades\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForTokensForCall[]\",\"name\":\"tradeTokensForTokensForCall\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeTokensForEthForCall[]\",\"name\":\"tradeTokensForEthForCall\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"indexOfTradeOfAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"internalType\":\"struct Dex.TradeEthForTokensForCall[]\",\"name\":\"tradeEthForTokensForCall\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Dex.AllTrades\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDexUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfEthForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForEthOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradingForEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesOfTokensForTokensOfAnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tradingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tradingForTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingForTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyTraded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/Dex.sol\":{\"keccak256\":\"0x195ba0bfc6c6805850de209edaabcd5d45709a1f6ef35480a574c1fd4f93df19\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7b6b1f05c8695a5af771d619175ffbfbe509622e2ccd929314cb87f87c6bf746\",\"dweb:/ipfs/QmZGwcsuC9ih9pSmTFVGB7XisdByiCZQfdjeLdo39hkM5a\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614bb18061005d5f395ff3fe6080604052600436106100eb575f3560e01c80637f1ca38b11610089578063be53210911610058578063be532109146102b3578063ce99c0ce146102f2578063e39c40fc1461031c578063fd9c885314610338576100ec565b80637f1ca38b1461022b5780638c69cd8414610253578063a1179c721461026f578063a306802f14610297576100ec565b80633b66082a116100c55780633b66082a1461017357806359560382146101b35780636a3c34f1146101db578063748d6a7414610203576100ec565b806308973378146100ee5780630bc07cef146101185780631cdec04214610157576100ec565b5b005b3480156100f9575f80fd5b50610102610374565b60405161010f9190613e7d565b60405180910390f35b348015610123575f80fd5b5061013e60048036038101906101399190613efe565b6103ff565b60405161014e9493929190613f74565b60405180910390f35b610171600480360381019061016c9190613efe565b610470565b005b34801561017e575f80fd5b5061019960048036038101906101949190613efe565b610b3c565b6040516101aa959493929190613fb7565b60405180910390f35b3480156101be575f80fd5b506101d960048036038101906101d49190613efe565b610bd1565b005b3480156101e6575f80fd5b5061020160048036038101906101fc9190613efe565b610e71565b005b34801561020e575f80fd5b5061022960048036038101906102249190613efe565b611675565b005b348015610236575f80fd5b50610251600480360381019061024c9190614008565b61198f565b005b61026d60048036038101906102689190613efe565b611dae565b005b34801561027a575f80fd5b5061029560048036038101906102909190614058565b6122c0565b005b6102b160048036038101906102ac91906140bc565b612777565b005b3480156102be575f80fd5b506102d960048036038101906102d49190613efe565b612ba2565b6040516102e9949392919061410c565b60405180910390f35b3480156102fd575f80fd5b50610306612c13565b604051610313919061453e565b60405180910390f35b61033660048036038101906103319190613efe565b61385d565b005b348015610343575f80fd5b5061035e6004803603810190610359919061455e565b613c04565b60405161036b9190614589565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103f557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ac575b5050505050905090565b6001602052815f5260405f208181548110610418575f80fd5b905f5260205f2090600402015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a7575f80fd5b6001151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106104fa576104f96145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503610521575f80fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610571576105706145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106105f1576105f06145a2565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161063a9190614589565b602060405180830381865afa158015610655573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067991906145e3565b1015610683575f80fd5b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106106d2576106d16145a2565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161071d92919061460e565b602060405180830381865afa158015610738573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075c91906145e3565b1015610766575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd338560025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106107d3576107d26145a2565b5b905f5260205f209060040201600201546040518463ffffffff1660e01b815260040161080193929190614635565b6020604051808303815f875af115801561081d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108419190614694565b505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106108a9576108a86145a2565b5b905f5260205f2090600402015f01546040516108c4906146ec565b5f6040518083038185875af1925050503d805f81146108fe576040519150601f19603f3d011682016040523d82523d5f602084013e610903565b606091505b5050905080610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061475a565b60405180910390fd5b600160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610998576109976145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f939bddfc94723dfe1a94b37a7828c73e510a1069f02bbef1058db8680fc9b737848460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610a2f57610a2e6145a2565b5b905f5260205f2090600402015f015460025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610a8d57610a8c6145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208881548110610b0b57610b0a6145a2565b5b905f5260205f2090600402016002015433604051610b2e96959493929190614778565b60405180910390a150505050565b5f602052815f5260405f208181548110610b54575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16905085565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c08575f80fd5b5f151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610c5a57610c596145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514610c81575f80fd5b6001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610cd157610cd06145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f39512ac5e172c09a82461ef4eb9469d1dd9e84b90d14af11b1494c5830f8be30828260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610d6857610d676145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110610de557610de46145a2565b5b905f5260205f2090600402016001015460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610e4457610e436145a2565b5b905f5260205f20906004020160020154604051610e659594939291906147d7565b60405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea8575f80fd5b600115155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610efa57610ef96145a2565b5b905f5260205f2090600502016004015f9054906101000a900460ff16151503610f21575f80fd5b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610f7057610f6f6145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd84335f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20868154811061100c5761100b6145a2565b5b905f5260205f209060050201600101546040518463ffffffff1660e01b815260040161103a93929190614635565b6020604051808303815f875af1158015611056573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107a9190614694565b505f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106110ca576110c96145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611149576111486145a2565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111929190614589565b602060405180830381865afa1580156111ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d191906145e3565b1015611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120990614872565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106112605761125f6145a2565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016112ab92919061460e565b602060405180830381865afa1580156112c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112ea91906145e3565b101561132b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611322906148da565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33865f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611397576113966145a2565b5b905f5260205f209060050201600301546040518463ffffffff1660e01b81526004016113c593929190614635565b6020604051808303815f875af11580156113e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114059190614694565b5060015f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611456576114556145a2565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507f19a60cab51f12e292294e2938f67526bcef39bc48bf1eee59585d3ad6001d88984845f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106114ec576114eb6145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611568576115676145a2565b5b905f5260205f209060050201600101545f808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2088815481106115c6576115c56145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208981548110611643576116426145a2565b5b905f5260205f209060050201600301543360405161166797969594939291906148f8565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ac575f80fd5b5f15155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106116fd576116fc6145a2565b5b905f5260205f2090600502016004015f9054906101000a900460ff16151514611724575f80fd5b60015f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611774576117736145a2565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507fbfa95375e459bbd89322e4b788211eac11a3d4916e2ec1a88f0f8e3e623ffab782825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061180a576118096145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110611886576118856145a2565b5b905f5260205f209060050201600101545f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106118e4576118e36145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611961576119606145a2565b5b905f5260205f2090600502016003015460405161198396959493929190614965565b60405180910390a15050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507fcbb2baf7f0878f163f373ce81dcee352d496f2e3e7de9ded7223b6ffb02c5ed2336001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050611b1291906149f1565b858585604051611b269594939291906147d7565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015611bdb57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015611c3657505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15611cf857600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff021916908315150217905550611da9565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503611da857600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff0219169083151502179055505b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611de5575f80fd5b6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611e3857611e376145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503611e5f575f80fd5b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611eaf57611eae6145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd843360015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110611f4c57611f4b6145a2565b5b905f5260205f209060040201600101546040518463ffffffff1660e01b8152600401611f7a93929190614635565b6020604051808303815f875af1158015611f96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fba9190614694565b5060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061200a576120096145a2565b5b905f5260205f209060040201600201543414612024575f80fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1634604051612049906146ec565b5f6040518083038185875af1925050503d805f8114612083576040519150601f19603f3d011682016040523d82523d5f602084013e612088565b606091505b50509050806120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c39061475a565b60405180910390fd5b6001805f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061211c5761211b6145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f441219de0f005ddf1372035401ca089c43131960d7dbdc2abbc6ebb5effe8fc8848460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106121b3576121b26145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2087815481106122305761222f6145a2565b5b905f5260205f2090600402016001015460015f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20888154811061228f5761228e6145a2565b5b905f5260205f20906004020160020154336040516122b296959493929190614a24565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122f7575f80fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507f9f53e6265e34e225b3a062b3e0f18e1a57fe8c46ccd096edc6a27292b45831a23360015f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490506124db91906149f1565b868686866040516124f196959493929190614965565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156125a657505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b801561260157505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b156126c257600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff021916908315150217905550612771565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361277057600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055505b5b50505050565b823414612782575f80fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f8664a0195db99dab92c38f2347e87be0c0fc0057973eca207b7d866058b21b3933600160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905061290691906149f1565b85858560405161291a959493929190614a83565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156129cf57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015612a2a57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15612aec57600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff021916908315150217905550612b9d565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff16151503612b9c57600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff0219169083151502179055505b5b505050565b6002602052815f5260405f208181548110612bbb575f80fd5b905f5260205f2090600402015f9150915050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b612c1b613c3f565b5f805b600380549050811015612ce5575f5b5f8060038481548110612c4357612c426145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015612cd157600183612cbc9190614ad4565b92508080612cc990614b07565b915050612c2d565b508080612cdd90614b07565b915050612c1e565b505f8167ffffffffffffffff811115612d0157612d00614b4e565b5b604051908082528060200260200182016040528015612d3a57816020015b612d27613c60565b815260200190600190039081612d1f5790505b5090505f805b60038054905081101561306a575f5b5f8060038481548110612d6557612d646145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613056575f805f60038581548110612de857612de76145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612e5b57612e5a6145a2565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e0016040528060038681548110612f6b57612f6a6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200183608001511515815250905080868681518110613027576130266145a2565b5b602002602001018190525060018561303f9190614ad4565b94505050808061304e90614b07565b915050612d4f565b50808061306290614b07565b915050612d40565b505f92505f5b600380549050811015613138575f5b60015f60038481548110613096576130956145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156131245760018561310f9190614ad4565b9450808061311c90614b07565b91505061307f565b50808061313090614b07565b915050613070565b505f8367ffffffffffffffff81111561315457613153614b4e565b5b60405190808252806020026020018201604052801561318d57816020015b61317a613cda565b8152602001906001900390816131725790505b5090505f91505f5b60038054905081101561344c575f5b60015f600384815481106131bb576131ba6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613438575f60015f6003858154811061323f5761323e6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106132b2576132b16145a2565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052806003868154811061336d5761336c6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001511515815250905080858781518110613409576134086145a2565b5b60200260200101819052506001866134219190614ad4565b95505050808061343090614b07565b9150506131a4565b50808061344490614b07565b915050613195565b505f93505f5b60038054905081101561351a575f5b60025f60038481548110613478576134776145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613506576001866134f19190614ad4565b955080806134fe90614b07565b915050613461565b50808061351290614b07565b915050613452565b505f8467ffffffffffffffff81111561353657613535614b4e565b5b60405190808252806020026020018201604052801561356f57816020015b61355c613d38565b8152602001906001900390816135545790505b5090505f92505f5b60038054905081101561382e575f5b60025f6003848154811061359d5761359c6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561381a575f60025f60038581548110613621576136206145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110613694576136936145a2565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052806003868154811061374f5761374e6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff16815260200183604001518152602001836060015115158152509050808588815181106137eb576137ea6145a2565b5b60200260200101819052506001876138039190614ad4565b96505050808061381290614b07565b915050613586565b50808061382690614b07565b915050613577565b50613837613c3f565b84815f018190525082816020018190525081816040018190525080965050505050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613894575f80fd5b5f151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106138e6576138e56145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff1615151461390d575f80fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061395e5761395d6145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106139ea576139e96145a2565b5b905f5260205f2090600402015f0154604051613a05906146ec565b5f6040518083038185875af1925050503d805f8114613a3f576040519150601f19603f3d011682016040523d82523d5f602084013e613a44565b606091505b5050905080613a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a7f9061475a565b60405180910390fd5b7fc3862de41bef5ea6c04a4f55fb0d4db3c4fe10d5e24982b16340dd04e5503ee0838360025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110613afa57613af96145a2565b5b905f5260205f2090600402015f015460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110613b5857613b576145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110613bd657613bd56145a2565b5b905f5260205f20906004020160020154604051613bf7959493929190614a83565b60405180910390a1505050565b60038181548110613c13575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60405180606001604052806060815260200160608152602001606081525090565b6040518060e001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f613de882613dbf565b9050919050565b613df881613dde565b82525050565b5f613e098383613def565b60208301905092915050565b5f602082019050919050565b5f613e2b82613d96565b613e358185613da0565b9350613e4083613db0565b805f5b83811015613e70578151613e578882613dfe565b9750613e6283613e15565b925050600181019050613e43565b5085935050505092915050565b5f6020820190508181035f830152613e958184613e21565b905092915050565b5f80fd5b613eaa81613dde565b8114613eb4575f80fd5b50565b5f81359050613ec581613ea1565b92915050565b5f819050919050565b613edd81613ecb565b8114613ee7575f80fd5b50565b5f81359050613ef881613ed4565b92915050565b5f8060408385031215613f1457613f13613e9d565b5b5f613f2185828601613eb7565b9250506020613f3285828601613eea565b9150509250929050565b613f4581613dde565b82525050565b613f5481613ecb565b82525050565b5f8115159050919050565b613f6e81613f5a565b82525050565b5f608082019050613f875f830187613f3c565b613f946020830186613f4b565b613fa16040830185613f4b565b613fae6060830184613f65565b95945050505050565b5f60a082019050613fca5f830188613f3c565b613fd76020830187613f4b565b613fe46040830186613f3c565b613ff16060830185613f4b565b613ffe6080830184613f65565b9695505050505050565b5f805f6060848603121561401f5761401e613e9d565b5b5f61402c86828701613eb7565b935050602061403d86828701613eea565b925050604061404e86828701613eea565b9150509250925092565b5f805f80608085870312156140705761406f613e9d565b5b5f61407d87828801613eb7565b945050602061408e87828801613eea565b935050604061409f87828801613eb7565b92505060606140b087828801613eea565b91505092959194509250565b5f805f606084860312156140d3576140d2613e9d565b5b5f6140e086828701613eea565b93505060206140f186828701613eb7565b925050604061410286828701613eea565b9150509250925092565b5f60808201905061411f5f830187613f4b565b61412c6020830186613f3c565b6141396040830185613f4b565b6141466060830184613f65565b95945050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61418181613ecb565b82525050565b61419081613f5a565b82525050565b60e082015f8201516141aa5f850182613def565b5060208201516141bd6020850182614178565b5060408201516141d06040850182613def565b5060608201516141e36060850182614178565b5060808201516141f66080850182613def565b5060a082015161420960a0850182614178565b5060c082015161421c60c0850182614187565b50505050565b5f61422d8383614196565b60e08301905092915050565b5f602082019050919050565b5f61424f8261414f565b6142598185614159565b935061426483614169565b805f5b8381101561429457815161427b8882614222565b975061428683614239565b925050600181019050614267565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516142de5f850182613def565b5060208201516142f16020850182614178565b5060408201516143046040850182613def565b5060608201516143176060850182614178565b50608082015161432a6080850182614178565b5060a082015161433d60a0850182614187565b50505050565b5f61434e83836142ca565b60c08301905092915050565b5f602082019050919050565b5f614370826142a1565b61437a81856142ab565b9350614385836142bb565b805f5b838110156143b557815161439c8882614343565b97506143a78361435a565b925050600181019050614388565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516143ff5f850182613def565b5060208201516144126020850182614178565b5060408201516144256040850182614178565b5060608201516144386060850182613def565b50608082015161444b6080850182614178565b5060a082015161445e60a0850182614187565b50505050565b5f61446f83836143eb565b60c08301905092915050565b5f602082019050919050565b5f614491826143c2565b61449b81856143cc565b93506144a6836143dc565b805f5b838110156144d65781516144bd8882614464565b97506144c88361447b565b9250506001810190506144a9565b5085935050505092915050565b5f606083015f8301518482035f8601526144fd8282614245565b915050602083015184820360208601526145178282614366565b915050604083015184820360408601526145318282614487565b9150508091505092915050565b5f6020820190508181035f83015261455681846144e3565b905092915050565b5f6020828403121561457357614572613e9d565b5b5f61458084828501613eea565b91505092915050565b5f60208201905061459c5f830184613f3c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f815190506145dd81613ed4565b92915050565b5f602082840312156145f8576145f7613e9d565b5b5f614605848285016145cf565b91505092915050565b5f6040820190506146215f830185613f3c565b61462e6020830184613f3c565b9392505050565b5f6060820190506146485f830186613f3c565b6146556020830185613f3c565b6146626040830184613f4b565b949350505050565b61467381613f5a565b811461467d575f80fd5b50565b5f8151905061468e8161466a565b92915050565b5f602082840312156146a9576146a8613e9d565b5b5f6146b684828501614680565b91505092915050565b5f81905092915050565b50565b5f6146d75f836146bf565b91506146e2826146c9565b5f82019050919050565b5f6146f6826146cc565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f614744601483614700565b915061474f82614710565b602082019050919050565b5f6020820190508181035f83015261477181614738565b9050919050565b5f60c08201905061478b5f830189613f3c565b6147986020830188613f4b565b6147a56040830187613f4b565b6147b26060830186613f3c565b6147bf6080830185613f4b565b6147cc60a0830184613f3c565b979650505050505050565b5f60a0820190506147ea5f830188613f3c565b6147f76020830187613f4b565b6148046040830186613f3c565b6148116060830185613f4b565b61481e6080830184613f4b565b9695505050505050565b7f68657265310000000000000000000000000000000000000000000000000000005f82015250565b5f61485c600583614700565b915061486782614828565b602082019050919050565b5f6020820190508181035f83015261488981614850565b9050919050565b7f68657265320000000000000000000000000000000000000000000000000000005f82015250565b5f6148c4600583614700565b91506148cf82614890565b602082019050919050565b5f6020820190508181035f8301526148f1816148b8565b9050919050565b5f60e08201905061490b5f83018a613f3c565b6149186020830189613f4b565b6149256040830188613f3c565b6149326060830187613f4b565b61493f6080830186613f3c565b61494c60a0830185613f4b565b61495960c0830184613f3c565b98975050505050505050565b5f60c0820190506149785f830189613f3c565b6149856020830188613f4b565b6149926040830187613f3c565b61499f6060830186613f4b565b6149ac6080830185613f3c565b6149b960a0830184613f4b565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6149fb82613ecb565b9150614a0683613ecb565b9250828203905081811115614a1e57614a1d6149c4565b5b92915050565b5f60c082019050614a375f830189613f3c565b614a446020830188613f4b565b614a516040830187613f3c565b614a5e6060830186613f4b565b614a6b6080830185613f4b565b614a7860a0830184613f3c565b979650505050505050565b5f60a082019050614a965f830188613f3c565b614aa36020830187613f4b565b614ab06040830186613f4b565b614abd6060830185613f3c565b614aca6080830184613f4b565b9695505050505050565b5f614ade82613ecb565b9150614ae983613ecb565b9250828201905080821115614b0157614b006149c4565b5b92915050565b5f614b1182613ecb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614b4357614b426149c4565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220f26f622c51c999000beaa0e13e142ff3c2e737768dd1ba55dd2f26a88c2f810064736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100eb575f3560e01c80637f1ca38b11610089578063be53210911610058578063be532109146102b3578063ce99c0ce146102f2578063e39c40fc1461031c578063fd9c885314610338576100ec565b80637f1ca38b1461022b5780638c69cd8414610253578063a1179c721461026f578063a306802f14610297576100ec565b80633b66082a116100c55780633b66082a1461017357806359560382146101b35780636a3c34f1146101db578063748d6a7414610203576100ec565b806308973378146100ee5780630bc07cef146101185780631cdec04214610157576100ec565b5b005b3480156100f9575f80fd5b50610102610374565b60405161010f9190613e7d565b60405180910390f35b348015610123575f80fd5b5061013e60048036038101906101399190613efe565b6103ff565b60405161014e9493929190613f74565b60405180910390f35b610171600480360381019061016c9190613efe565b610470565b005b34801561017e575f80fd5b5061019960048036038101906101949190613efe565b610b3c565b6040516101aa959493929190613fb7565b60405180910390f35b3480156101be575f80fd5b506101d960048036038101906101d49190613efe565b610bd1565b005b3480156101e6575f80fd5b5061020160048036038101906101fc9190613efe565b610e71565b005b34801561020e575f80fd5b5061022960048036038101906102249190613efe565b611675565b005b348015610236575f80fd5b50610251600480360381019061024c9190614008565b61198f565b005b61026d60048036038101906102689190613efe565b611dae565b005b34801561027a575f80fd5b5061029560048036038101906102909190614058565b6122c0565b005b6102b160048036038101906102ac91906140bc565b612777565b005b3480156102be575f80fd5b506102d960048036038101906102d49190613efe565b612ba2565b6040516102e9949392919061410c565b60405180910390f35b3480156102fd575f80fd5b50610306612c13565b604051610313919061453e565b60405180910390f35b61033660048036038101906103319190613efe565b61385d565b005b348015610343575f80fd5b5061035e6004803603810190610359919061455e565b613c04565b60405161036b9190614589565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103f557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ac575b5050505050905090565b6001602052815f5260405f208181548110610418575f80fd5b905f5260205f2090600402015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a7575f80fd5b6001151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106104fa576104f96145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503610521575f80fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610571576105706145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106105f1576105f06145a2565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161063a9190614589565b602060405180830381865afa158015610655573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067991906145e3565b1015610683575f80fd5b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106106d2576106d16145a2565b5b905f5260205f209060040201600201548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161071d92919061460e565b602060405180830381865afa158015610738573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075c91906145e3565b1015610766575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd338560025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106107d3576107d26145a2565b5b905f5260205f209060040201600201546040518463ffffffff1660e01b815260040161080193929190614635565b6020604051808303815f875af115801561081d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108419190614694565b505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2084815481106108a9576108a86145a2565b5b905f5260205f2090600402015f01546040516108c4906146ec565b5f6040518083038185875af1925050503d805f81146108fe576040519150601f19603f3d011682016040523d82523d5f602084013e610903565b606091505b5050905080610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061475a565b60405180910390fd5b600160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610998576109976145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f939bddfc94723dfe1a94b37a7828c73e510a1069f02bbef1058db8680fc9b737848460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610a2f57610a2e6145a2565b5b905f5260205f2090600402015f015460025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610a8d57610a8c6145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208881548110610b0b57610b0a6145a2565b5b905f5260205f2090600402016002015433604051610b2e96959493929190614778565b60405180910390a150505050565b5f602052815f5260405f208181548110610b54575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16905085565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c08575f80fd5b5f151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610c5a57610c596145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151514610c81575f80fd5b6001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610cd157610cd06145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f39512ac5e172c09a82461ef4eb9469d1dd9e84b90d14af11b1494c5830f8be30828260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610d6857610d676145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110610de557610de46145a2565b5b905f5260205f2090600402016001015460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110610e4457610e436145a2565b5b905f5260205f20906004020160020154604051610e659594939291906147d7565b60405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea8575f80fd5b600115155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610efa57610ef96145a2565b5b905f5260205f2090600502016004015f9054906101000a900460ff16151503610f21575f80fd5b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610f7057610f6f6145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd84335f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20868154811061100c5761100b6145a2565b5b905f5260205f209060050201600101546040518463ffffffff1660e01b815260040161103a93929190614635565b6020604051808303815f875af1158015611056573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107a9190614694565b505f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106110ca576110c96145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611149576111486145a2565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111929190614589565b602060405180830381865afa1580156111ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d191906145e3565b1015611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120990614872565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106112605761125f6145a2565b5b905f5260205f209060050201600301548173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016112ab92919061460e565b602060405180830381865afa1580156112c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112ea91906145e3565b101561132b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611322906148da565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33865f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611397576113966145a2565b5b905f5260205f209060050201600301546040518463ffffffff1660e01b81526004016113c593929190614635565b6020604051808303815f875af11580156113e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114059190614694565b5060015f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611456576114556145a2565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507f19a60cab51f12e292294e2938f67526bcef39bc48bf1eee59585d3ad6001d88984845f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106114ec576114eb6145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611568576115676145a2565b5b905f5260205f209060050201600101545f808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2088815481106115c6576115c56145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208981548110611643576116426145a2565b5b905f5260205f209060050201600301543360405161166797969594939291906148f8565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ac575f80fd5b5f15155f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106116fd576116fc6145a2565b5b905f5260205f2090600502016004015f9054906101000a900460ff16151514611724575f80fd5b60015f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611774576117736145a2565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055507fbfa95375e459bbd89322e4b788211eac11a3d4916e2ec1a88f0f8e3e623ffab782825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061180a576118096145a2565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110611886576118856145a2565b5b905f5260205f209060050201600101545f808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106118e4576118e36145a2565b5b905f5260205f2090600502016002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110611961576119606145a2565b5b905f5260205f2090600502016003015460405161198396959493929190614965565b60405180910390a15050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507fcbb2baf7f0878f163f373ce81dcee352d496f2e3e7de9ded7223b6ffb02c5ed2336001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050611b1291906149f1565b858585604051611b269594939291906147d7565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161515148015611bdb57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015611c3657505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15611cf857600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff021916908315150217905550611da9565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff16151503611da857600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff0219169083151502179055505b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611de5575f80fd5b6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611e3857611e376145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff16151503611e5f575f80fd5b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611eaf57611eae6145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd843360015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110611f4c57611f4b6145a2565b5b905f5260205f209060040201600101546040518463ffffffff1660e01b8152600401611f7a93929190614635565b6020604051808303815f875af1158015611f96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fba9190614694565b5060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061200a576120096145a2565b5b905f5260205f209060040201600201543414612024575f80fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1634604051612049906146ec565b5f6040518083038185875af1925050503d805f8114612083576040519150601f19603f3d011682016040523d82523d5f602084013e612088565b606091505b50509050806120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c39061475a565b60405180910390fd5b6001805f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061211c5761211b6145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507f441219de0f005ddf1372035401ca089c43131960d7dbdc2abbc6ebb5effe8fc8848460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2086815481106121b3576121b26145a2565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2087815481106122305761222f6145a2565b5b905f5260205f2090600402016001015460015f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20888154811061228f5761228e6145a2565b5b905f5260205f20906004020160020154336040516122b296959493929190614a24565b60405180910390a150505050565b8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122f7575f80fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507f9f53e6265e34e225b3a062b3e0f18e1a57fe8c46ccd096edc6a27292b45831a23360015f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490506124db91906149f1565b868686866040516124f196959493929190614965565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156125a657505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b801561260157505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b156126c257600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff021916908315150217905550612771565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615150361277057600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055505b5b50505050565b823414612782575f80fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050507f8664a0195db99dab92c38f2347e87be0c0fc0057973eca207b7d866058b21b3933600160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905061290691906149f1565b85858560405161291a959493929190614a83565b60405180910390a15f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615151480156129cf57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160019054906101000a900460ff161515145b8015612a2a57505f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff161515145b15612aec57600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff021916908315150217905550612b9d565b5f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160029054906101000a900460ff16151503612b9c57600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160026101000a81548160ff0219169083151502179055505b5b505050565b6002602052815f5260405f208181548110612bbb575f80fd5b905f5260205f2090600402015f9150915050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b612c1b613c3f565b5f805b600380549050811015612ce5575f5b5f8060038481548110612c4357612c426145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015612cd157600183612cbc9190614ad4565b92508080612cc990614b07565b915050612c2d565b508080612cdd90614b07565b915050612c1e565b505f8167ffffffffffffffff811115612d0157612d00614b4e565b5b604051908082528060200260200182016040528015612d3a57816020015b612d27613c60565b815260200190600190039081612d1f5790505b5090505f805b60038054905081101561306a575f5b5f8060038481548110612d6557612d646145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613056575f805f60038581548110612de857612de76145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110612e5b57612e5a6145a2565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6040518060e0016040528060038681548110612f6b57612f6a6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff16815260200183602001518152602001836040015173ffffffffffffffffffffffffffffffffffffffff1681526020018360600151815260200183608001511515815250905080868681518110613027576130266145a2565b5b602002602001018190525060018561303f9190614ad4565b94505050808061304e90614b07565b915050612d4f565b50808061306290614b07565b915050612d40565b505f92505f5b600380549050811015613138575f5b60015f60038481548110613096576130956145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110156131245760018561310f9190614ad4565b9450808061311c90614b07565b91505061307f565b50808061313090614b07565b915050613070565b505f8367ffffffffffffffff81111561315457613153614b4e565b5b60405190808252806020026020018201604052801561318d57816020015b61317a613cda565b8152602001906001900390816131725790505b5090505f91505f5b60038054905081101561344c575f5b60015f600384815481106131bb576131ba6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613438575f60015f6003858154811061323f5761323e6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106132b2576132b16145a2565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052806003868154811061336d5761336c6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001511515815250905080858781518110613409576134086145a2565b5b60200260200101819052506001866134219190614ad4565b95505050808061343090614b07565b9150506131a4565b50808061344490614b07565b915050613195565b505f93505f5b60038054905081101561351a575f5b60025f60038481548110613478576134776145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811015613506576001866134f19190614ad4565b955080806134fe90614b07565b915050613461565b50808061351290614b07565b915050613452565b505f8467ffffffffffffffff81111561353657613535614b4e565b5b60405190808252806020026020018201604052801561356f57816020015b61355c613d38565b8152602001906001900390816135545790505b5090505f92505f5b60038054905081101561382e575f5b60025f6003848154811061359d5761359c6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905081101561381a575f60025f60038581548110613621576136206145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110613694576136936145a2565b5b905f5260205f2090600402016040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f6040518060c001604052806003868154811061374f5761374e6145a2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001835f01518152602001836020015173ffffffffffffffffffffffffffffffffffffffff16815260200183604001518152602001836060015115158152509050808588815181106137eb576137ea6145a2565b5b60200260200101819052506001876138039190614ad4565b96505050808061381290614b07565b915050613586565b50808061382690614b07565b915050613577565b50613837613c3f565b84815f018190525082816020018190525081816040018190525080965050505050505090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613894575f80fd5b5f151560025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106138e6576138e56145a2565b5b905f5260205f2090600402016003015f9054906101000a900460ff1615151461390d575f80fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061395e5761395d6145a2565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055505f3373ffffffffffffffffffffffffffffffffffffffff1660025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106139ea576139e96145a2565b5b905f5260205f2090600402015f0154604051613a05906146ec565b5f6040518083038185875af1925050503d805f8114613a3f576040519150601f19603f3d011682016040523d82523d5f602084013e613a44565b606091505b5050905080613a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a7f9061475a565b60405180910390fd5b7fc3862de41bef5ea6c04a4f55fb0d4db3c4fe10d5e24982b16340dd04e5503ee0838360025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208581548110613afa57613af96145a2565b5b905f5260205f2090600402015f015460025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208681548110613b5857613b576145a2565b5b905f5260205f2090600402016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110613bd657613bd56145a2565b5b905f5260205f20906004020160020154604051613bf7959493929190614a83565b60405180910390a1505050565b60038181548110613c13575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60405180606001604052806060815260200160608152602001606081525090565b6040518060e001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f613de882613dbf565b9050919050565b613df881613dde565b82525050565b5f613e098383613def565b60208301905092915050565b5f602082019050919050565b5f613e2b82613d96565b613e358185613da0565b9350613e4083613db0565b805f5b83811015613e70578151613e578882613dfe565b9750613e6283613e15565b925050600181019050613e43565b5085935050505092915050565b5f6020820190508181035f830152613e958184613e21565b905092915050565b5f80fd5b613eaa81613dde565b8114613eb4575f80fd5b50565b5f81359050613ec581613ea1565b92915050565b5f819050919050565b613edd81613ecb565b8114613ee7575f80fd5b50565b5f81359050613ef881613ed4565b92915050565b5f8060408385031215613f1457613f13613e9d565b5b5f613f2185828601613eb7565b9250506020613f3285828601613eea565b9150509250929050565b613f4581613dde565b82525050565b613f5481613ecb565b82525050565b5f8115159050919050565b613f6e81613f5a565b82525050565b5f608082019050613f875f830187613f3c565b613f946020830186613f4b565b613fa16040830185613f4b565b613fae6060830184613f65565b95945050505050565b5f60a082019050613fca5f830188613f3c565b613fd76020830187613f4b565b613fe46040830186613f3c565b613ff16060830185613f4b565b613ffe6080830184613f65565b9695505050505050565b5f805f6060848603121561401f5761401e613e9d565b5b5f61402c86828701613eb7565b935050602061403d86828701613eea565b925050604061404e86828701613eea565b9150509250925092565b5f805f80608085870312156140705761406f613e9d565b5b5f61407d87828801613eb7565b945050602061408e87828801613eea565b935050604061409f87828801613eb7565b92505060606140b087828801613eea565b91505092959194509250565b5f805f606084860312156140d3576140d2613e9d565b5b5f6140e086828701613eea565b93505060206140f186828701613eb7565b925050604061410286828701613eea565b9150509250925092565b5f60808201905061411f5f830187613f4b565b61412c6020830186613f3c565b6141396040830185613f4b565b6141466060830184613f65565b95945050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61418181613ecb565b82525050565b61419081613f5a565b82525050565b60e082015f8201516141aa5f850182613def565b5060208201516141bd6020850182614178565b5060408201516141d06040850182613def565b5060608201516141e36060850182614178565b5060808201516141f66080850182613def565b5060a082015161420960a0850182614178565b5060c082015161421c60c0850182614187565b50505050565b5f61422d8383614196565b60e08301905092915050565b5f602082019050919050565b5f61424f8261414f565b6142598185614159565b935061426483614169565b805f5b8381101561429457815161427b8882614222565b975061428683614239565b925050600181019050614267565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516142de5f850182613def565b5060208201516142f16020850182614178565b5060408201516143046040850182613def565b5060608201516143176060850182614178565b50608082015161432a6080850182614178565b5060a082015161433d60a0850182614187565b50505050565b5f61434e83836142ca565b60c08301905092915050565b5f602082019050919050565b5f614370826142a1565b61437a81856142ab565b9350614385836142bb565b805f5b838110156143b557815161439c8882614343565b97506143a78361435a565b925050600181019050614388565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516143ff5f850182613def565b5060208201516144126020850182614178565b5060408201516144256040850182614178565b5060608201516144386060850182613def565b50608082015161444b6080850182614178565b5060a082015161445e60a0850182614187565b50505050565b5f61446f83836143eb565b60c08301905092915050565b5f602082019050919050565b5f614491826143c2565b61449b81856143cc565b93506144a6836143dc565b805f5b838110156144d65781516144bd8882614464565b97506144c88361447b565b9250506001810190506144a9565b5085935050505092915050565b5f606083015f8301518482035f8601526144fd8282614245565b915050602083015184820360208601526145178282614366565b915050604083015184820360408601526145318282614487565b9150508091505092915050565b5f6020820190508181035f83015261455681846144e3565b905092915050565b5f6020828403121561457357614572613e9d565b5b5f61458084828501613eea565b91505092915050565b5f60208201905061459c5f830184613f3c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f815190506145dd81613ed4565b92915050565b5f602082840312156145f8576145f7613e9d565b5b5f614605848285016145cf565b91505092915050565b5f6040820190506146215f830185613f3c565b61462e6020830184613f3c565b9392505050565b5f6060820190506146485f830186613f3c565b6146556020830185613f3c565b6146626040830184613f4b565b949350505050565b61467381613f5a565b811461467d575f80fd5b50565b5f8151905061468e8161466a565b92915050565b5f602082840312156146a9576146a8613e9d565b5b5f6146b684828501614680565b91505092915050565b5f81905092915050565b50565b5f6146d75f836146bf565b91506146e2826146c9565b5f82019050919050565b5f6146f6826146cc565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f614744601483614700565b915061474f82614710565b602082019050919050565b5f6020820190508181035f83015261477181614738565b9050919050565b5f60c08201905061478b5f830189613f3c565b6147986020830188613f4b565b6147a56040830187613f4b565b6147b26060830186613f3c565b6147bf6080830185613f4b565b6147cc60a0830184613f3c565b979650505050505050565b5f60a0820190506147ea5f830188613f3c565b6147f76020830187613f4b565b6148046040830186613f3c565b6148116060830185613f4b565b61481e6080830184613f4b565b9695505050505050565b7f68657265310000000000000000000000000000000000000000000000000000005f82015250565b5f61485c600583614700565b915061486782614828565b602082019050919050565b5f6020820190508181035f83015261488981614850565b9050919050565b7f68657265320000000000000000000000000000000000000000000000000000005f82015250565b5f6148c4600583614700565b91506148cf82614890565b602082019050919050565b5f6020820190508181035f8301526148f1816148b8565b9050919050565b5f60e08201905061490b5f83018a613f3c565b6149186020830189613f4b565b6149256040830188613f3c565b6149326060830187613f4b565b61493f6080830186613f3c565b61494c60a0830185613f4b565b61495960c0830184613f3c565b98975050505050505050565b5f60c0820190506149785f830189613f3c565b6149856020830188613f4b565b6149926040830187613f3c565b61499f6060830186613f4b565b6149ac6080830185613f3c565b6149b960a0830184613f4b565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6149fb82613ecb565b9150614a0683613ecb565b9250828203905081811115614a1e57614a1d6149c4565b5b92915050565b5f60c082019050614a375f830189613f3c565b614a446020830188613f4b565b614a516040830187613f3c565b614a5e6060830186613f4b565b614a6b6080830185613f4b565b614a7860a0830184613f3c565b979650505050505050565b5f60a082019050614a965f830188613f3c565b614aa36020830187613f4b565b614ab06040830186613f4b565b614abd6060830185613f3c565b614aca6080830184613f4b565b9695505050505050565b5f614ade82613ecb565b9150614ae983613ecb565b9250828201905080821115614b0157614b006149c4565b5b92915050565b5f614b1182613ecb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614b4357614b426149c4565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220f26f622c51c999000beaa0e13e142ff3c2e737768dd1ba55dd2f26a88c2f810064736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:33278:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "81:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "108:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "92:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "74:6:6",
                "type": ""
              }
            ],
            "src": "7:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "238:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "255:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "260:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "248:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "248:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "248:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "276:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "295:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "300:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "291:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "291:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "276:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "210:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "215:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "226:11:6",
                "type": ""
              }
            ],
            "src": "127:184:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "389:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "399:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "407:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "399:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "432:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "437:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "376:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "384:4:6",
                "type": ""
              }
            ],
            "src": "317:132:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "510:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "525:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "532:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "521:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "510:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "482:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "492:7:6",
                "type": ""
              }
            ],
            "src": "455:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "632:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "642:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "671:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "653:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "642:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "614:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "624:7:6",
                "type": ""
              }
            ],
            "src": "587:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "761:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "784:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "766:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "766:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "754:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "739:3:6",
                "type": ""
              }
            ],
            "src": "689:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "883:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "935:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "893:33:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "893:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "893:46:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "966:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "948:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "856:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "864:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "872:10:6",
                "type": ""
              }
            ],
            "src": "803:179:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1063:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1073:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1085:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "1073:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1050:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "1058:4:6",
                "type": ""
              }
            ],
            "src": "988:113:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1261:608:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1271:68:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1333:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1285:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1285:54:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1275:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1348:93:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1429:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1434:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1355:73:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:86:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1348:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1450:71:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1515:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1465:49:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:56:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1454:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1530:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "1544:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1534:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1620:224:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1634:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1661:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1655:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1655:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "1638:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1681:70:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1732:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1747:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1688:43:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1688:63:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1681:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1764:70:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1827:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1774:52:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1774:60:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1764:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1582:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1585:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1579:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1593:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1595:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1604:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1607:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1600:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1600:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1595:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1564:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1566:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1575:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1570:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1560:284:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1853:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1860:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1240:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1247:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1256:3:6",
                "type": ""
              }
            ],
            "src": "1137:732:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:225:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2033:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2080:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2091:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2076:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2076:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2099:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2069:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2069:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:116:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2227:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2236:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2133:93:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2133:108:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2125:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1995:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2007:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2018:4:6",
                "type": ""
              }
            ],
            "src": "1875:373:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2294:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2304:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2314:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2304:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2287:6:6",
                "type": ""
              }
            ],
            "src": "2254:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2434:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2434:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2335:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2547:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2564:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2567:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2557:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2458:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2681:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2693:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2683:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2683:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2647:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2672:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2654:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2654:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2644:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2634:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2617:5:6",
                "type": ""
              }
            ],
            "src": "2581:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2761:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2771:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2793:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2780:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2771:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2836:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2809:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2809:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2739:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2747:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2755:5:6",
                "type": ""
              }
            ],
            "src": "2709:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2909:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2920:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2909:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2881:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2891:7:6",
                "type": ""
              }
            ],
            "src": "2854:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2980:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3037:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3046:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3049:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3039:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3039:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3039:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3003:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3028:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3010:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3010:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3000:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2990:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2973:5:6",
                "type": ""
              }
            ],
            "src": "2937:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3117:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3127:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3149:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3136:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3127:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3192:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3165:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3165:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3095:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3103:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3111:5:6",
                "type": ""
              }
            ],
            "src": "3065:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3293:391:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3339:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3341:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3341:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3341:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3314:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3323:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3310:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3306:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3303:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3432:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3447:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3461:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3451:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3476:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3511:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3522:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3507:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3507:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3531:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3486:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3476:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3559:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3574:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3588:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3578:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3604:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3639:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3650:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3635:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3635:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3659:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3614:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3614:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3604:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3255:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3266:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3278:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3286:6:6",
                "type": ""
              }
            ],
            "src": "3210:474:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3755:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3772:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3795:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3777:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3765:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3765:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3743:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3750:3:6",
                "type": ""
              }
            ],
            "src": "3690:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3879:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3896:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3919:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3901:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3901:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3889:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3889:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3867:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3874:3:6",
                "type": ""
              }
            ],
            "src": "3814:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3980:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3990:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4015:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4008:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4008:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4001:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4001:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3990:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3962:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3972:7:6",
                "type": ""
              }
            ],
            "src": "3938:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4093:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4110:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4130:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4115:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4103:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4103:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4103:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4081:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4088:3:6",
                "type": ""
              }
            ],
            "src": "4034:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4325:365:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4335:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4347:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4358:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4343:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4343:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4335:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4416:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4429:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4425:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4425:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4372:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4372:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4497:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4510:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4521:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4506:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4506:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4453:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4453:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4579:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4592:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4603:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4535:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4655:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4668:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4679:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4664:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4664:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4617:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:66:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4273:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4285:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4293:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4301:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4309:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4320:4:6",
                "type": ""
              }
            ],
            "src": "4149:541:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4900:448:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4922:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4933:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4918:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4910:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4991:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5004:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5015:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5000:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5000:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4947:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4947:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4947:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5072:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5085:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5096:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5081:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5081:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5028:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5028:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5028:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5154:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5167:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5178:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5163:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5163:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5110:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5110:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5110:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5236:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5249:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5260:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5245:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5245:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5192:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5192:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5192:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5312:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5325:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5336:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5321:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5321:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5274:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5274:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5274:67:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4840:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4852:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4860:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4868:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4876:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4884:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4895:4:6",
                "type": ""
              }
            ],
            "src": "4696:652:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5454:519:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5500:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5502:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5502:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5502:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5475:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5484:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5471:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5471:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5496:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5467:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5467:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5464:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5593:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5608:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5622:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5612:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5637:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5672:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5683:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5668:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5668:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5692:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5647:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5647:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5637:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5720:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5735:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5749:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5739:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5765:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5800:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5811:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5796:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5796:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5820:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5775:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5775:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5765:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5848:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5863:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5877:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5867:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5893:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5928:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5939:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5924:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5924:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5948:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5903:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5903:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5893:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5408:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5419:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5431:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5439:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5447:6:6",
                "type": ""
              }
            ],
            "src": "5354:619:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6096:648:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6143:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6145:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6145:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6145:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6117:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6126:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6113:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6113:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6138:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6109:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6109:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6106:120:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6236:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6251:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6265:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6255:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6280:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6315:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6326:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6311:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6311:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6335:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6290:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6290:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6280:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6363:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6378:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6392:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6382:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6408:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6443:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6454:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6439:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6439:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6463:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6418:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6418:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6408:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6491:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6506:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6520:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6510:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6536:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6571:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6582:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6567:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6567:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6591:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6546:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6546:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6536:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6619:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6634:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:2:6",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6638:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6664:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6699:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6710:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6695:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6695:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6719:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6674:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "6664:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6042:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6053:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6065:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6073:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6081:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6089:6:6",
                "type": ""
              }
            ],
            "src": "5979:765:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6850:519:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6896:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6898:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6898:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6898:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6871:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6880:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6867:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6867:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6863:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6863:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6860:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6989:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7004:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7018:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7008:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7033:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7068:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7079:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7064:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7064:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7088:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7043:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7043:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7033:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7116:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7131:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7145:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7135:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7161:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7196:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7207:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7192:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7192:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7216:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7171:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7171:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7161:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7244:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7259:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7273:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7263:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7289:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7324:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7335:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7320:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7320:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7344:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7299:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7299:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7289:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6804:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6815:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6827:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6835:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6843:6:6",
                "type": ""
              }
            ],
            "src": "6750:619:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7551:365:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7561:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7573:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7584:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7569:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7569:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7561:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7642:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7655:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7666:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7651:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7651:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7598:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7598:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7598:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7723:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7736:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7747:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7732:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7732:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7679:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7679:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7805:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7818:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7829:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7814:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7814:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7761:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7761:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7761:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7881:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7894:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7905:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7890:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7890:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7843:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7843:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7843:66:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7499:9:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7511:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7519:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7527:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7535:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7546:4:6",
                "type": ""
              }
            ],
            "src": "7375:541:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8040:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8051:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8067:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8061:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8061:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8051:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8023:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8033:6:6",
                "type": ""
              }
            ],
            "src": "7922:158:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8231:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8248:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8253:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8241:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8241:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8241:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8269:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8288:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8293:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8284:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8284:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8269:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8203:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8208:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8219:11:6",
                "type": ""
              }
            ],
            "src": "8086:218:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8426:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8436:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8444:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8436:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8457:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8469:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8474:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8465:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8465:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8457:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8413:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8421:4:6",
                "type": ""
              }
            ],
            "src": "8310:176:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8547:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8564:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8587:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8569:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8569:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8557:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8557:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8557:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8535:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8542:3:6",
                "type": ""
              }
            ],
            "src": "8492:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8655:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8672:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8692:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8677:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8677:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8665:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8665:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8665:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8643:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8650:3:6",
                "type": ""
              }
            ],
            "src": "8606:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8943:1347:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8953:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8969:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8974:4:6",
                        "type": "",
                        "value": "0xe0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8965:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8965:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8957:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8989:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9026:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9056:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9063:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9052:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9052:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9046:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9046:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9030:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9116:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9134:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9139:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9130:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9130:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9082:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9082:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9082:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9165:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9217:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9247:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9254:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9243:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9243:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9237:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9237:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9221:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9307:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9325:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9330:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9321:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9321:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9273:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9273:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9273:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9356:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9406:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9436:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9443:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9432:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9432:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9426:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9426:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9410:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9496:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9514:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9519:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9510:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9510:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9462:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9462:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9462:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9545:178:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9594:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9624:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9631:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9620:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9620:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9614:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9614:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9598:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9684:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9702:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9707:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9698:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9698:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9650:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9650:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9650:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9733:182:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9786:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9816:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9823:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9812:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9812:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9806:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9806:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9790:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9876:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9894:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9899:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9890:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9890:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9842:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9842:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9842:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9925:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9977:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10007:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10014:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10003:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10003:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9997:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9997:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9981:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10067:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10085:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10090:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10081:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10081:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10033:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10033:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10033:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10116:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10160:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10190:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10197:4:6",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10186:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10186:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10180:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10180:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10164:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10244:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10262:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10267:4:6",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10258:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10258:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "10216:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10216:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10216:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8930:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8937:3:6",
                "type": ""
              }
            ],
            "src": "8799:1491:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10464:187:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10596:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10604:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10474:121:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10474:134:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10474:134:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10617:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10635:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10640:4:6",
                        "type": "",
                        "value": "0xe0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10631:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10631:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "10617:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10437:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10445:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "10453:10:6",
                "type": ""
              }
            ],
            "src": "10296:355:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10776:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10786:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10798:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10803:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10794:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10794:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "10786:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10763:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "10771:4:6",
                "type": ""
              }
            ],
            "src": "10657:157:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11114:862:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11124:112:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11230:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11138:91:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11138:98:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11128:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11245:127:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11360:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11365:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11252:107:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11252:120:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11245:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11381:115:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11490:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "11396:93:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11396:100:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "11385:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11505:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "11519:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "11509:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11595:356:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11609:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11636:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11630:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11630:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "11613:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11656:158:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "11795:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11810:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11663:131:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11663:151:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11656:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11827:114:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11934:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "11837:96:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11837:104:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11827:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11557:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11560:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11554:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11554:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11568:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11570:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11579:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11582:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11575:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11575:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11570:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11539:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11541:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11550:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "11545:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "11535:416:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11960:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11967:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11960:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11093:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11100:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11109:3:6",
                "type": ""
              }
            ],
            "src": "10912:1064:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12097:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12108:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12124:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12118:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12118:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12108:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12080:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12090:6:6",
                "type": ""
              }
            ],
            "src": "11982:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12285:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12302:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12307:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12295:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12295:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12295:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12323:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12342:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12347:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12338:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12338:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12323:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12257:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12262:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12273:11:6",
                "type": ""
              }
            ],
            "src": "12143:215:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12477:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12487:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "12495:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12487:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12508:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "12520:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12525:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12516:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12516:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12508:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "12464:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12472:4:6",
                "type": ""
              }
            ],
            "src": "12364:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12763:1153:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12773:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12789:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12794:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12785:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12785:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "12777:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12809:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12846:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12876:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12883:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12872:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12872:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "12866:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12866:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "12850:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12936:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12954:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12959:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12950:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12950:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12902:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12902:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12902:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12985:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13037:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13067:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13074:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13063:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13063:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13057:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13057:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13041:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13127:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13145:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13150:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13141:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13141:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13093:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13093:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13093:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13176:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13226:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13256:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13263:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13252:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13252:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13246:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13246:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13230:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13316:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13334:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13339:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13330:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13330:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "13282:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13282:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13282:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13365:178:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13414:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13444:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13451:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13440:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13440:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13434:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13434:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13418:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13504:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13522:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13527:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13518:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13518:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13470:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13470:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13470:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13553:179:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13603:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13633:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13640:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13629:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13629:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13623:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13623:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13607:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13693:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13711:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13716:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13707:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13707:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13659:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13659:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13659:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13742:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13786:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13816:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13823:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13812:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13812:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13806:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13806:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "13790:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "13870:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13888:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13893:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13884:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13884:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "13842:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13842:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13842:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12750:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12757:3:6",
                "type": ""
              }
            ],
            "src": "12625:1291:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14084:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14210:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14218:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14094:115:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14094:128:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14094:128:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14231:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14249:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14254:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14245:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14245:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "14231:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14057:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14065:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "14073:10:6",
                "type": ""
              }
            ],
            "src": "13922:343:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14387:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14397:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "14409:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14414:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14405:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14405:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "14397:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "14374:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "14382:4:6",
                "type": ""
              }
            ],
            "src": "14271:154:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14713:844:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14723:109:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14826:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14737:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14737:95:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14727:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14841:124:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14953:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14958:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14848:104:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14848:117:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14841:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14974:112:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15080:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "14989:90:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14989:97:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "14978:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15095:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "15109:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "15099:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15185:347:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15199:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "15226:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15220:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15220:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "15203:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15246:152:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "15379:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15394:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "15253:125:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15253:145:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15246:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15411:111:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "15515:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "15421:93:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15421:101:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15411:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15147:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15150:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15144:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15144:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15158:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15160:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "15169:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15172:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15165:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15165:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15160:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15129:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15131:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15140:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "15135:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "15125:407:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15541:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "15548:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15541:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14692:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14699:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14708:3:6",
                "type": ""
              }
            ],
            "src": "14517:1040:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15678:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15689:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15705:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15699:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15699:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "15689:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15661:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15671:6:6",
                "type": ""
              }
            ],
            "src": "15563:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15866:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15883:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15888:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15876:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15876:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15876:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15904:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15923:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15928:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15919:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15919:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "15904:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15838:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15843:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "15854:11:6",
                "type": ""
              }
            ],
            "src": "15724:215:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16058:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16068:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "16076:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "16068:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16089:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "16101:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16106:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16097:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16097:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "16089:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "16045:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "16053:4:6",
                "type": ""
              }
            ],
            "src": "15945:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16344:1156:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16354:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16370:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16375:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16366:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16366:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "16358:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16390:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16427:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16457:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16464:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16453:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16453:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16447:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16447:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16431:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16517:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16535:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16540:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16531:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16531:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16483:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16483:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16483:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16566:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16618:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16648:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16655:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16644:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16644:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16638:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16638:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16622:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16708:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16726:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16731:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16722:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16722:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16674:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16674:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16674:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16757:176:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16804:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16834:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16841:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16830:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16830:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16824:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16824:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16808:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16894:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16912:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16917:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16908:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16908:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16860:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16860:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16860:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16943:182:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16996:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17026:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17033:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17022:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17022:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17016:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17016:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17000:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17086:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17104:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17109:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17100:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17100:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "17052:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17052:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17052:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17135:181:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17187:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17217:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17224:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17213:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17213:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17207:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17207:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17191:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17277:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17295:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17300:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17291:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17291:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17243:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17243:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17243:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17326:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17370:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17400:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17407:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17396:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17396:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17390:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17390:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17374:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17454:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17472:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17477:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17468:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17468:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "17426:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17426:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17426:57:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16331:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16338:3:6",
                "type": ""
              }
            ],
            "src": "16206:1294:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17668:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17794:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17802:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "17678:115:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17678:128:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17678:128:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17815:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17833:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17838:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17829:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17829:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "17815:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17641:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17649:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "17657:10:6",
                "type": ""
              }
            ],
            "src": "17506:343:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17971:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17981:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "17993:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17998:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17989:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17989:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "17981:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "17958:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "17966:4:6",
                "type": ""
              }
            ],
            "src": "17855:154:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18297:844:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18307:109:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18410:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18321:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18321:95:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "18311:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18425:124:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18537:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18542:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18432:104:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18432:117:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18425:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18558:112:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18664:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "18573:90:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18573:97:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "18562:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18679:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "18693:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "18683:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18769:347:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "18783:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "18810:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "18804:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18804:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "18787:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18830:152:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "18963:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18978:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "18837:125:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18837:145:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18830:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18995:111:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "19099:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "19005:93:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19005:101:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18995:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18731:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18734:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18728:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18728:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "18742:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18744:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "18753:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18756:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18749:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18749:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "18744:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "18713:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "18715:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "18724:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "18719:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "18709:407:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19125:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "19132:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19125:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18276:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18283:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18292:3:6",
                "type": ""
              }
            ],
            "src": "18101:1040:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19325:1203:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19335:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19351:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19356:4:6",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19347:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19347:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "19339:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19371:376:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19429:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19459:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19466:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19455:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19455:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19449:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19449:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "19433:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19497:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19502:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19493:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19493:14:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "19513:4:6"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19519:3:6"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19509:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19509:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19486:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19486:38:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19486:38:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19537:199:6",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "19717:12:6"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19731:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "19545:171:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19545:191:6"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19537:4:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "19757:367:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19812:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19842:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19849:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19838:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19838:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19832:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19832:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "19816:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19880:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19885:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19876:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19876:14:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "19896:4:6"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19902:3:6"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19892:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19892:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19869:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19869:38:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19869:38:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19920:193:6",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "20094:12:6"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20108:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "19928:165:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19928:185:6"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19920:4:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "20134:367:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20189:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20219:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20226:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20215:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20215:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "20209:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20209:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "20193:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20257:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20262:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20253:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20253:14:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20273:4:6"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20279:3:6"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20269:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20269:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20246:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20246:38:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20246:38:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20297:193:6",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "20471:12:6"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20485:4:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "20305:165:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20305:185:6"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "20297:4:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20511:11:6",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "20518:4:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20511:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_AllTrades_$991_memory_ptr_to_t_struct$_AllTrades_$991_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19304:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19311:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19320:3:6",
                "type": ""
              }
            ],
            "src": "19199:1329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20684:227:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20694:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20706:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20717:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20702:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20702:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20694:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20741:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20752:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20737:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20737:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20760:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20766:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20756:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20756:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20730:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20730:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20730:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20786:118:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20890:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20899:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_AllTrades_$991_memory_ptr_to_t_struct$_AllTrades_$991_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20794:95:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20794:110:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20786:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_AllTrades_$991_memory_ptr__to_t_struct$_AllTrades_$991_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20656:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20668:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20679:4:6",
                "type": ""
              }
            ],
            "src": "20534:377:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20983:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21029:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "21031:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21031:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21031:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "21004:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21013:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21000:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21000:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21025:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20996:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20996:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "20993:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "21122:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "21137:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21151:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "21141:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21166:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21201:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "21212:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21197:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21197:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "21221:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "21176:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21176:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "21166:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20953:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20964:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20976:6:6",
                "type": ""
              }
            ],
            "src": "20917:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21350:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21360:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21372:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21383:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21368:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21368:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21360:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21440:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21453:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21464:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21449:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21449:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21396:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21396:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21396:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21322:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21334:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21345:4:6",
                "type": ""
              }
            ],
            "src": "21252:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21508:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21525:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21528:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21518:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21518:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21518:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21622:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21625:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21615:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21615:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21615:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21646:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21649:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21639:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21639:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21639:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "21480:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21729:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21739:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "21754:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21748:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21748:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21739:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21797:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21770:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21770:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21770:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "21707:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21715:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21723:5:6",
                "type": ""
              }
            ],
            "src": "21666:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21892:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21938:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "21940:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21940:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21940:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "21913:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21922:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21909:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21909:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21934:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "21905:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21905:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "21902:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "22031:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22046:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22060:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "22050:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22075:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22121:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "22132:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22117:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22117:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "22141:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "22085:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22085:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "22075:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21862:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "21873:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21885:6:6",
                "type": ""
              }
            ],
            "src": "21815:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22298:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22308:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22320:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22331:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22316:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22316:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22308:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22388:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22401:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22412:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22397:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22397:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22344:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22344:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22344:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22469:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22482:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22493:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22478:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22478:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22425:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22425:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22425:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22262:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22274:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22282:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22293:4:6",
                "type": ""
              }
            ],
            "src": "22172:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22664:288:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22674:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22686:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22697:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22682:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22682:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22674:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22754:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22767:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22778:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22763:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22763:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22710:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22710:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22710:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22835:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22848:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22859:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22844:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22844:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22791:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22791:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22791:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22917:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22930:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22941:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22926:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22926:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22873:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22873:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22873:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22620:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "22632:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22640:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22648:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22659:4:6",
                "type": ""
              }
            ],
            "src": "22510:442:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22998:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23052:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23061:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23064:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23054:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23054:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23054:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23021:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23043:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "23028:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23028:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "23018:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23018:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23011:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23011:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "23008:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22991:5:6",
                "type": ""
              }
            ],
            "src": "22958:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23140:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23150:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "23165:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "23159:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23159:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "23150:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23205:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "23181:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23181:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23181:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "23118:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23126:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23134:5:6",
                "type": ""
              }
            ],
            "src": "23080:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23297:271:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23343:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "23345:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23345:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23345:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23318:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23327:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23314:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23314:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23339:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "23310:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23310:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "23307:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "23436:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "23451:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23465:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "23455:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23480:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23523:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "23534:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23519:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23519:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23543:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "23490:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23490:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "23480:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23267:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "23278:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23290:6:6",
                "type": ""
              }
            ],
            "src": "23223:345:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23687:34:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23697:18:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "23712:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "23697:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23659:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "23664:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "23675:11:6",
                "type": ""
              }
            ],
            "src": "23574:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23833:8:6",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23825:6:6",
                "type": ""
              }
            ],
            "src": "23727:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24010:235:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24020:90:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24103:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24108:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24027:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24027:83:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24020:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24208:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "24119:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24119:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24119:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24221:18:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24232:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24237:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24228:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24228:11:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24221:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23998:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24006:3:6",
                "type": ""
              }
            ],
            "src": "23847:398:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24439:191:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24450:154:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24600:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24457:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24457:147:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24450:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24614:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "24621:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24614:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24426:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24435:3:6",
                "type": ""
              }
            ],
            "src": "24251:379:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24732:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24749:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "24754:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24742:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24742:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24742:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24770:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24789:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24794:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24785:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24785:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "24770:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24704:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "24709:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "24720:11:6",
                "type": ""
              }
            ],
            "src": "24636:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24917:64:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24939:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24947:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24935:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24935:14:6"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24951:22:6",
                        "type": "",
                        "value": "Failed to send Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24928:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24928:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24928:46:6"
                }
              ]
            },
            "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24909:6:6",
                "type": ""
              }
            ],
            "src": "24811:170:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25133:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25143:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25209:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25214:2:6",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25150:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25150:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25143:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25315:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                      "nodeType": "YulIdentifier",
                      "src": "25226:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25226:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25226:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25328:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25339:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25344:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25335:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25335:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25328:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25121:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25129:3:6",
                "type": ""
              }
            ],
            "src": "24987:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25530:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25540:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25552:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25563:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25548:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25548:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25540:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25587:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25598:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25583:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25583:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25606:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25612:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25602:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25602:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25576:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25576:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25576:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25632:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25766:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25640:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25640:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25632:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25510:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25525:4:6",
                "type": ""
              }
            ],
            "src": "25359:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26022:537:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26032:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26044:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26055:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26040:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26040:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26032:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "26113:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26126:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26137:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26122:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26122:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26069:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26069:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26069:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "26194:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26207:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26218:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26203:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26203:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26150:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26150:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26150:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "26276:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26289:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26300:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26285:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26285:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26232:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26232:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26232:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "26358:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26371:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26382:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26367:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26367:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26314:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26314:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26314:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "26440:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26453:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26464:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26449:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26449:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26396:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26396:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26396:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "26523:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26536:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26547:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26532:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26532:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26479:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26479:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26479:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25954:9:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "25966:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "25974:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "25982:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "25990:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "25998:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "26006:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26017:4:6",
                "type": ""
              }
            ],
            "src": "25784:775:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26775:454:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26785:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26797:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26808:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26793:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26793:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26785:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "26866:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26879:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26890:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26875:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26875:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26822:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26822:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26822:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "26947:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26960:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26971:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26956:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26956:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26903:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26903:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26903:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "27029:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27042:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27053:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27038:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27038:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26985:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26985:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26985:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "27111:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27124:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27135:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27120:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27120:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27067:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27067:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27067:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "27193:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27206:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27217:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27202:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27202:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27149:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27149:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27149:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26715:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "26727:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "26735:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "26743:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "26751:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "26759:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26770:4:6",
                "type": ""
              }
            ],
            "src": "26565:664:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27341:49:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27363:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27371:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27359:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27359:14:6"
                      },
                      {
                        "hexValue": "6865726531",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27375:7:6",
                        "type": "",
                        "value": "here1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27352:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27352:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27352:31:6"
                }
              ]
            },
            "name": "store_literal_in_memory_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27333:6:6",
                "type": ""
              }
            ],
            "src": "27235:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27542:219:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27552:73:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27618:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27623:1:6",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27559:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27559:66:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27552:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27723:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6",
                      "nodeType": "YulIdentifier",
                      "src": "27634:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27634:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27634:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27736:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27747:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27752:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27743:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27743:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27736:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27530:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27538:3:6",
                "type": ""
              }
            ],
            "src": "27396:365:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27938:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27948:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27960:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27971:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27956:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27956:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27948:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27995:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28006:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27991:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27991:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28014:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28020:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28010:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28010:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27984:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27984:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27984:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28040:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28174:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28048:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28048:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28040:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27918:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27933:4:6",
                "type": ""
              }
            ],
            "src": "27767:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28298:49:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28320:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28328:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28316:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28316:14:6"
                      },
                      {
                        "hexValue": "6865726532",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28332:7:6",
                        "type": "",
                        "value": "here2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28309:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28309:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28309:31:6"
                }
              ]
            },
            "name": "store_literal_in_memory_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28290:6:6",
                "type": ""
              }
            ],
            "src": "28192:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28499:219:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28509:73:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28575:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28580:1:6",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28516:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28516:66:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28509:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28680:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640",
                      "nodeType": "YulIdentifier",
                      "src": "28591:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28591:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28591:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28693:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28704:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28709:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28700:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28700:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28693:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28487:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28495:3:6",
                "type": ""
              }
            ],
            "src": "28353:365:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28895:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28905:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28917:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28928:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28913:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28913:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28905:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28952:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28963:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28948:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28948:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28971:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28977:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28967:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28967:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28941:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28941:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28941:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28997:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29131:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29005:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29005:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28997:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28875:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28890:4:6",
                "type": ""
              }
            ],
            "src": "28724:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29415:620:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29425:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29437:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29448:3:6",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29433:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29433:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29425:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "29506:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29519:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29530:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29515:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29515:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29462:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29462:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29462:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "29587:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29600:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29611:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29596:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29596:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29543:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29543:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29543:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "29669:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29682:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29693:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29678:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29678:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29625:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29625:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29625:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "29751:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29764:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29775:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29760:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29760:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29707:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29707:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29707:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "29833:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29846:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29857:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29842:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29842:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29789:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29789:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29789:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "29916:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29929:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29940:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29925:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29925:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29872:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29872:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29872:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "29999:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30012:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30023:3:6",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30008:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30008:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29955:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29955:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29955:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29339:9:6",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "29351:6:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "29359:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "29367:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "29375:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "29383:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29391:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29399:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29410:4:6",
                "type": ""
              }
            ],
            "src": "29149:886:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30279:537:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30289:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30301:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30312:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30297:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30297:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30289:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "30370:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30383:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30394:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30379:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30379:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30326:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30326:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30326:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "30451:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30464:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30475:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30460:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30460:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30407:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30407:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30407:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "30533:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30546:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30557:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30542:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30542:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30489:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30489:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30489:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "30615:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30628:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30639:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30624:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30624:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30571:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30571:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30571:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "30697:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30710:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30721:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30706:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30706:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30653:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30653:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30653:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "30780:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30793:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30804:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30789:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30789:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30736:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30736:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30736:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30211:9:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "30223:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "30231:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "30239:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "30247:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "30255:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30263:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30274:4:6",
                "type": ""
              }
            ],
            "src": "30041:775:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30850:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30867:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30870:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30860:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30860:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30860:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30964:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30967:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30957:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30957:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30957:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30988:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30991:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "30981:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30981:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30981:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "30822:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31053:149:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31063:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31086:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "31068:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31068:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "31063:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31097:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31120:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "31102:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31102:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "31097:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31131:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31143:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31146:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "31139:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31139:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "31131:4:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31173:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "31175:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31175:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31175:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "31164:4:6"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31170:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "31161:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31161:11:6"
                  },
                  "nodeType": "YulIf",
                  "src": "31158:37:6"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "31039:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "31042:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "31048:4:6",
                "type": ""
              }
            ],
            "src": "31008:194:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31446:537:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31456:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31468:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31479:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31464:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31464:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31456:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "31537:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31550:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31561:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31546:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31546:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31493:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31493:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31493:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "31618:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31631:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31642:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31627:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31627:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31574:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31574:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31574:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "31700:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31713:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31724:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31709:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31709:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31656:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31656:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31656:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "31782:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31795:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31806:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31791:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31791:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31738:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31738:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31738:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "31864:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31877:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31888:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31873:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31873:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31820:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31820:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31820:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "31947:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31960:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31971:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31956:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31956:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31903:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31903:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31903:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31378:9:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "31390:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "31398:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "31406:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "31414:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "31422:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "31430:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31441:4:6",
                "type": ""
              }
            ],
            "src": "31208:775:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32199:454:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32209:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32221:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32232:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32217:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32217:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32209:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "32290:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32303:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32314:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32299:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32299:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32246:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32246:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32246:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "32371:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32384:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32395:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32380:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32380:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32327:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32327:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32327:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "32453:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32466:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32477:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32462:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32462:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32409:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32409:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32409:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "32535:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32548:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32559:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32544:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32544:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32491:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32491:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32491:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "32617:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32630:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32641:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32626:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32626:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32573:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32573:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32573:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32139:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "32151:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "32159:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "32167:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "32175:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "32183:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32194:4:6",
                "type": ""
              }
            ],
            "src": "31989:664:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32703:147:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32713:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "32736:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "32718:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32718:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "32713:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32747:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "32770:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "32752:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32752:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "32747:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32781:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "32792:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "32795:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32788:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32788:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "32781:3:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "32821:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "32823:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "32823:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "32823:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "32813:1:6"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "32816:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "32810:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32810:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "32807:36:6"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "32690:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "32693:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "32699:3:6",
                "type": ""
              }
            ],
            "src": "32659:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32899:190:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32909:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "32936:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "32918:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32918:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "32909:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "33032:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "33034:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "33034:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "33034:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "32957:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32964:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "32954:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32954:77:6"
                  },
                  "nodeType": "YulIf",
                  "src": "32951:103:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33063:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "33074:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33081:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33070:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33070:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "33063:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "32885:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "32895:3:6",
                "type": ""
              }
            ],
            "src": "32856:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33123:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33140:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33143:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33133:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33133:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33133:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33237:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33240:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33230:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33230:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33230:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33261:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33264:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "33254:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33254:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33254:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "33095:180:6"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Dex.TradeTokensForTokensForCall -> struct Dex.TradeTokensForTokensForCall\n    function abi_encode_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xe0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForTokensForCall[] -> struct Dex.TradeTokensForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_to_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeTokensForEthForCall -> struct Dex.TradeTokensForEthForCall\n    function abi_encode_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingTokenAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingTokenAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForEthAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeTokensForEthForCall[] -> struct Dex.TradeTokensForEthForCall[]\n    function abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_to_t_struct$_TradeTokensForEthForCall_$965_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Dex.TradeEthForTokensForCall -> struct Dex.TradeEthForTokensForCall\n    function abi_encode_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // indexOfTradeOfAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tradingEthAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tradingForTokenAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradingForTokenAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // alreadyTraded\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Dex.TradeEthForTokensForCall[] -> struct Dex.TradeEthForTokensForCall[]\n    function abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_to_t_struct$_TradeEthForTokensForCall_$978_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Dex.AllTrades -> struct Dex.AllTrades\n    function abi_encode_t_struct$_AllTrades_$991_memory_ptr_to_t_struct$_AllTrades_$991_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // tradeTokensForTokensForCall\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tradeTokensForEthForCall\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tradeEthForTokensForCall\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_AllTrades_$991_memory_ptr__to_t_struct$_AllTrades_$991_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_AllTrades_$991_memory_ptr_to_t_struct$_AllTrades_$991_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"here1\")\n\n    }\n\n    function abi_encode_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640(memPtr) {\n\n        mstore(add(memPtr, 0), \"here2\")\n\n    }\n\n    function abi_encode_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256_t_address__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "122:17125:5:-:0;;;3830:43;;;;;;;;;;3858:10;3850:5;;:18;;;;;;;;;;;;;;;;;;122:17125;;;;;;",
  "deployedSourceMap": "122:17125:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16904:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3422:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9680:1319;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3334:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;11732:615;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7103:1516;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11003:725;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5061:986;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8623:1053;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3877:1180;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6051:1048;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3504:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13153:3745;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12351:798;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3715:28;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16904:91;16948:16;16979:11;16972:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16904:91;:::o;3422:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9680:1319::-;9779:10;9769:20;;:6;:20;;;9761:29;;;;;;9875:4;9804:75;;:31;:39;9836:6;9804:39;;;;;;;;;;;;;;;9844:12;9804:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;9796:84;;;;;;9887:21;9917:31;:39;9949:6;9917:39;;;;;;;;;;;;;;;9957:12;9917:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;9887:107;;10049:31;:39;10081:6;10049:39;;;;;;;;;;;;;;;10089:12;10049:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;10008:15;:25;;;10034:10;10008:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:116;;10000:125;;;;;;10196:31;:39;10228:6;10196:39;;;;;;;;;;;;;;;10236:12;10196:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;10140:15;:25;;;10166:10;10186:4;10140:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:131;;10132:140;;;;;;10279:15;:28;;;10308:10;10320:6;10328:31;:39;10360:6;10328:39;;;;;;;;;;;;;;;10368:12;10328:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;10279:125;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10412:9;10434:10;10426:24;;10458:31;:39;10490:6;10458:39;;;;;;;;;;;;;;;10498:12;10458:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;10426:107;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10411:122;;;10547:4;10539:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;10653:4;10583:31;:39;10615:6;10583:39;;;;;;;;;;;;;;;10623:12;10583:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;10669:325;10699:6;10713:12;10733:31;:39;10765:6;10733:39;;;;;;;;;;;;;;;10773:12;10733:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;10811:31;:39;10843:6;10811:39;;;;;;;;;;;;;;;10851:12;10811:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;10895:31;:39;10927:6;10895:39;;;;;;;;;;;;;;;10935:12;10895:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;10978:10;10669:325;;;;;;;;;;;:::i;:::-;;;;;;;;9755:1244;;9680:1319;;:::o;3334:84::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11732:615::-;11839:6;11825:20;;:10;:20;;;11817:29;;;;;;11931:5;11860:76;;:31;:39;11892:6;11860:39;;;;;;;;;;;;;;;11900:12;11860:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:76;;;11852:85;;;;;;12014:4;11944:31;:39;11976:6;11944:39;;;;;;;;;;;;;;;11984:12;11944:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;12030:312;12068:6;12082:12;12102:31;:39;12134:6;12102:39;;;;;;;;;;;;;;;12142:12;12102:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;12183:31;:39;12215:6;12183:39;;;;;;;;;;;;;;;12223:12;12183:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;12263:31;:39;12295:6;12263:39;;;;;;;;;;;;;;;12303:12;12263:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;12030:312;;;;;;;;;;:::i;:::-;;;;;;;;11732:615;;:::o;7103:1516::-;7198:10;7188:20;;:6;:20;;;7180:29;;;;;;7297:4;7223:78;;:34;:42;7258:6;7223:42;;;;;;;;;;;;;;;7266:12;7223:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;;;;;;;;;;:78;;;7215:87;;;;;;7309:18;7336:34;:42;7371:6;7336:42;;;;;;;;;;;;;;;7379:12;7336:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;7309:104;;7419:12;:25;;;7445:6;7453:10;7465:34;:42;7500:6;7465:42;;;;;;;;;;;;;;;7508:12;7465:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;7419:122;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7548:21;7578:34;:42;7613:6;7578:42;;;;;;;;;;;;;;;7621:12;7578:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;7548:110;;7714:34;:42;7749:6;7714:42;;;;;;;;;;;;;;;7757:12;7714:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;7673:15;:25;;;7699:10;7673:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;;7665:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;7872:34;:42;7907:6;7872:42;;;;;;;;;;;;;;;7915:12;7872:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;7816:15;:25;;;7842:10;7862:4;7816:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:134;;7808:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;7967:15;:28;;;7996:10;8008:6;8016:34;:42;8051:6;8016:42;;;;;;;;;;;;;;;8059:12;8016:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;7967:128;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8175:4;8102:34;:42;8137:6;8102:42;;;;;;;;;;;;;;;8145:12;8102:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;8191:423;8224:6;8238:12;8258:34;:42;8293:6;8258:42;;;;;;;;;;;;;;;8301:12;8258:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;8342:34;:42;8377:6;8342:42;;;;;;;;;;;;;;;8385:12;8342:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;8425:34;:42;8460:6;8425:42;;;;;;;;;;;;;;;8468:12;8425:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;8512:34;:42;8547:6;8512:42;;;;;;;;;;;;;;;8555:12;8512:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;8598:10;8191:423;;;;;;;;;;;;:::i;:::-;;;;;;;;7174:1445;;7103:1516;;:::o;11003:725::-;11113:6;11099:20;;:10;:20;;;11091:29;;;;;;11208:5;11134:79;;:34;:42;11169:6;11134:42;;;;;;;;;;;;;;;11177:12;11134:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;;;;;;;;;;:79;;;11126:88;;;;;;11294:4;11221:34;:42;11256:6;11221:42;;;;;;;;;;;;;;;11264:12;11221:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;:77;;;;;;;;;;;;;;;;;;11310:413;11351:6;11365:12;11385:34;:42;11420:6;11385:42;;;;;;;;;;;;;;;11428:12;11385:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;11469:34;:42;11504:6;11469:42;;;;;;;;;;;;;;;11512:12;11469:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;11552:34;:42;11587:6;11552:42;;;;;;;;;;;;;;;11595:12;11552:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:79;;;;;;;;;;;;11639:34;:42;11674:6;11639:42;;;;;;;;;;;;;;;11682:12;11639:56;;;;;;;;:::i;:::-;;;;;;;;;;;;:78;;;11310:413;;;;;;;;;;;:::i;:::-;;;;;;;;11003:725;;:::o;5061:986::-;5207:31;:43;5239:10;5207:43;;;;;;;;;;;;;;;5263:124;;;;;;;;5290:19;5263:124;;;;;;5319:18;5263:124;;;;5347:19;5263:124;;;;5376:5;5263:124;;;;;5207:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5400:196;5438:10;5509:1;5456:31;:43;5488:10;5456:43;;;;;;;;;;;;;;;:50;;;;:54;;;;:::i;:::-;5518:19;5545:18;5571:19;5400:196;;;;;;;;;;:::i;:::-;;;;;;;;5659:5;5607:57;;:15;:27;5623:10;5607:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;5725:5;5676:54;;:15;:27;5692:10;5676:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5607:123;:189;;;;;5791:5;5742:54;;:15;:27;5758:10;5742:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5607:189;5603:440;;;5810:11;5827:10;5810:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5898:4;5850:15;:27;5866:10;5850:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;5603:440;;;5969:5;5920:54;;:15;:27;5936:10;5920:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;5916:127;;6032:4;5984:15;:27;6000:10;5984:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;5916:127;5603:440;5061:986;;;:::o;8623:1053::-;8722:10;8712:20;;:6;:20;;;8704:29;;;;;;8818:4;8747:75;;:31;:39;8779:6;8747:39;;;;;;;;;;;;;;;8787:12;8747:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:75;;;8739:84;;;;;;8830:18;8857:31;:39;8889:6;8857:39;;;;;;;;;;;;;;;8897:12;8857:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;8830:101;;8937:12;:25;;;8963:6;8971:10;8983:31;:39;9015:6;8983:39;;;;;;;;;;;;;;;9023:12;8983:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;8937:119;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9084:31;:39;9116:6;9084:39;;;;;;;;;;;;;;;9124:12;9084:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;9071:9;:86;9063:95;;;;;;9166:9;9180:6;:11;;9199:9;9180:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9165:48;;;9227:4;9219:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;9333:4;9263:31;:39;9295:6;9263:39;;;;;;;;;;;;;;;9303:12;9263:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;9349:322;9379:6;9393:12;9413:31;:39;9445:6;9413:39;;;;;;;;;;;;;;;9453:12;9413:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;;;;;;;;;;9494:31;:39;9526:6;9494:39;;;;;;;;;;;;;;;9534:12;9494:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:72;;;9574:31;:39;9606:6;9574:39;;;;;;;;;;;;;;;9614:12;9574:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:73;;;9655:10;9349:322;;;;;;;;;;;:::i;:::-;;;;;;;;8698:978;;8623:1053;;:::o;3877:1180::-;4100:22;4077:45;;:19;:45;;;4069:54;;;;;;4130:34;:46;4165:10;4130:46;;;;;;;;;;;;;;;4189:161;;;;;;;;4219:19;4189:161;;;;;;4248:18;4189:161;;;;4276:22;4189:161;;;;;;4308:21;4189:161;;;;4339:5;4189:161;;;;;4130:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4363:234;4404:10;4478:1;4422:34;:46;4457:10;4422:46;;;;;;;;;;;;;;;:53;;;;:57;;;;:::i;:::-;4487:19;4514:18;4540:22;4570:21;4363:234;;;;;;;;;;;:::i;:::-;;;;;;;;4660:5;4608:57;;:15;:27;4624:10;4608:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;4726:5;4677:54;;:15;:27;4693:10;4677:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;4608:123;:189;;;;;4792:5;4743:54;;:15;:27;4759:10;4743:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;4608:189;4604:449;;;4811:11;4828:10;4811:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4902:4;4851:15;:27;4867:10;4851:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;4604:449;;;4976:5;4924:57;;:15;:27;4940:10;4924:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;4920:133;;5042:4;4991:15;:27;5007:10;4991:27;;;;;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;4920:133;4604:449;3877:1180;;;;:::o;6051:1048::-;6229:16;6216:9;:29;6208:38;;;;;;6253:31;:43;6285:10;6253:43;;;;;;;;;;;;;;;6309:127;;;;;;;;6336:16;6309:127;;;;6362:22;6309:127;;;;;;6394:21;6309:127;;;;6425:5;6309:127;;;;;6253:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6449:199;6487:10;6558:1;6505:31;:43;6537:10;6505:43;;;;;;;;;;;;;;;:50;;;;:54;;;;:::i;:::-;6567:16;6591:22;6621:21;6449:199;;;;;;;;;;:::i;:::-;;;;;;;;6711:5;6659:57;;:15;:27;6675:10;6659:27;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:57;;;:123;;;;;6777:5;6728:54;;:15;:27;6744:10;6728:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6659:123;:189;;;;;6843:5;6794:54;;:15;:27;6810:10;6794:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6659:189;6655:440;;;6862:11;6879:10;6862:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6950:4;6902:15;:27;6918:10;6902:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6655:440;;;7021:5;6972:54;;:15;:27;6988:10;6972:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:54;;;6968:127;;7084:4;7036:15;:27;7052:10;7036:27;;;;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6968:127;6655:440;6051:1048;;;:::o;3504:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13153:3745::-;13198:16;;:::i;:::-;13223:19;13258:6;13253:199;13274:11;:18;;;;13270:1;:22;13253:199;;;13312:6;13307:139;13328:34;:50;13363:11;13375:1;13363:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13328:50;;;;;;;;;;;;;;;:57;;;;13324:1;:61;13307:139;;;13436:1;13419:14;:18;;;;:::i;:::-;13402:35;;13387:3;;;;;:::i;:::-;;;;13307:139;;;;13294:3;;;;;:::i;:::-;;;;13253:199;;;;13458:66;13561:14;13527:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13458:118;;13583:21;13620:6;13615:816;13636:11;:18;;;;13632:1;:22;13615:816;;;13674:6;13669:756;13690:34;:50;13725:11;13737:1;13725:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13690:50;;;;;;;;;;;;;;;:57;;;;13686:1;:61;13669:756;;;13764:48;13815:34;:50;13850:11;13862:1;13850:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13815:50;;;;;;;;;;;;;;;13866:1;13815:53;;;;;;;;:::i;:::-;;;;;;;;;;;;13764:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13878:62;13943:335;;;;;;;;13983:11;13995:1;13983:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13943:335;;;;;;14009:1;13943:335;;;;14022:20;:40;;;13943:335;;;;;;14074:20;:39;;;13943:335;;;;14125:20;:43;;;13943:335;;;;;;14180:20;:42;;;13943:335;;;;14234:20;:34;;;13943:335;;;;;13878:400;;14339:27;14289:29;14319:16;14289:47;;;;;;;;:::i;:::-;;;;;;;:77;;;;14415:1;14396:16;:20;;;;:::i;:::-;14377:39;;13754:671;;13749:3;;;;;:::i;:::-;;;;13669:756;;;;13656:3;;;;;:::i;:::-;;;;13615:816;;;;14454:1;14437:18;;14467:6;14462:196;14483:11;:18;;;;14479:1;:22;14462:196;;;14521:6;14516:136;14537:31;:47;14569:11;14581:1;14569:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14537:47;;;;;;;;;;;;;;;:54;;;;14533:1;:58;14516:136;;;14642:1;14625:14;:18;;;;:::i;:::-;14608:35;;14593:3;;;;;:::i;:::-;;;;14516:136;;;;14503:3;;;;;:::i;:::-;;;;14462:196;;;;14664:60;14758:14;14727:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;14664:109;;14799:1;14780:20;;14812:6;14807:719;14828:11;:18;;;;14824:1;:22;14807:719;;;14866:6;14861:659;14882:31;:47;14914:11;14926:1;14914:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14882:47;;;;;;;;;;;;;;;:54;;;;14878:1;:58;14861:659;;;14953:42;14998:31;:47;15030:11;15042:1;15030:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14998:47;;;;;;;;;;;;;;;15046:1;14998:50;;;;;;;;:::i;:::-;;;;;;;;;;;;14953:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15058:56;15117:263;;;;;;;;15154:11;15166:1;15154:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15117:263;;;;;;15180:1;15117:263;;;;15193:17;:37;;;15117:263;;;;;;15242:17;:36;;;15117:263;;;;15290:17;:37;;;15117:263;;;;15339:17;:31;;;15117:263;;;;;15058:322;;15438:24;15391:26;15418:16;15391:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;15510:1;15491:16;:20;;;;:::i;:::-;15472:39;;14943:577;;14938:3;;;;;:::i;:::-;;;;14861:659;;;;14848:3;;;;;:::i;:::-;;;;14807:719;;;;15549:1;15532:18;;15562:6;15557:196;15578:11;:18;;;;15574:1;:22;15557:196;;;15616:6;15611:136;15632:31;:47;15664:11;15676:1;15664:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15632:47;;;;;;;;;;;;;;;:54;;;;15628:1;:58;15611:136;;;15737:1;15720:14;:18;;;;:::i;:::-;15703:35;;15688:3;;;;;:::i;:::-;;;;15611:136;;;;15598:3;;;;;:::i;:::-;;;;15557:196;;;;15759:60;15853:14;15822:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15759:109;;15894:1;15875:20;;15907:6;15902:722;15923:11;:18;;;;15919:1;:22;15902:722;;;15961:6;15956:662;15977:31;:47;16009:11;16021:1;16009:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15977:47;;;;;;;;;;;;;;;:54;;;;15973:1;:58;15956:662;;;16048:42;16093:31;:47;16125:11;16137:1;16125:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16093:47;;;;;;;;;;;;;;;16141:1;16093:50;;;;;;;;:::i;:::-;;;;;;;;;;;;16048:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16153:56;16212:266;;;;;;;;16249:11;16261:1;16249:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16212:266;;;;;;16275:1;16212:266;;;;16288:17;:34;;;16212:266;;;;16334:17;:40;;;16212:266;;;;;;16386:17;:39;;;16212:266;;;;16437:17;:31;;;16212:266;;;;;16153:325;;16536:24;16489:26;16516:16;16489:44;;;;;;;;:::i;:::-;;;;;;;:71;;;;16608:1;16589:16;:20;;;;:::i;:::-;16570:39;;16038:580;;16033:3;;;;;:::i;:::-;;;;15956:662;;;;15943:3;;;;;:::i;:::-;;;;15902:722;;;;16630:26;;:::i;:::-;16703:29;16663:9;:37;;:69;;;;16775:26;16738:9;:34;;:63;;;;16844:26;16807:9;:34;;:63;;;;16884:9;16877:16;;;;;;;;13153:3745;:::o;12351:798::-;12466:6;12452:20;;:10;:20;;;12444:29;;;;;;12558:5;12487:76;;:31;:39;12519:6;12487:39;;;;;;;;;;;;;;;12527:12;12487:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;;;;;;;;;;:76;;;12479:85;;;;;;12641:4;12571:31;:39;12603:6;12571:39;;;;;;;;;;;;;;;12611:12;12571:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:67;;;:74;;;;;;;;;;;;;;;;;;12653:9;12675:10;12667:24;;12699:31;:39;12731:6;12699:39;;;;;;;;;;;;;;;12739:12;12699:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;12667:107;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12652:122;;;12788:4;12780:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;12829:315;12867:6;12881:12;12901:31;:39;12933:6;12901:39;;;;;;;;;;;;;;;12941:12;12901:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:70;;;12979:31;:39;13011:6;12979:39;;;;;;;;;;;;;;;13019:12;12979:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:76;;;;;;;;;;;;13063:31;:39;13095:6;13063:39;;;;;;;;;;;;;;;13103:12;13063:53;;;;;;;;:::i;:::-;;;;;;;;;;;;:75;;;12829:315;;;;;;;;;;:::i;:::-;;;;;;;;12438:711;12351:798;;:::o;3715:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:114:6:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2335:117::-;2444:1;2441;2434:12;2581:122;2654:24;2672:5;2654:24;:::i;:::-;2647:5;2644:35;2634:63;;2693:1;2690;2683:12;2634:63;2581:122;:::o;2709:139::-;2755:5;2793:6;2780:20;2771:29;;2809:33;2836:5;2809:33;:::i;:::-;2709:139;;;;:::o;2854:77::-;2891:7;2920:5;2909:16;;2854:77;;;:::o;2937:122::-;3010:24;3028:5;3010:24;:::i;:::-;3003:5;3000:35;2990:63;;3049:1;3046;3039:12;2990:63;2937:122;:::o;3065:139::-;3111:5;3149:6;3136:20;3127:29;;3165:33;3192:5;3165:33;:::i;:::-;3065:139;;;;:::o;3210:474::-;3278:6;3286;3335:2;3323:9;3314:7;3310:23;3306:32;3303:119;;;3341:79;;:::i;:::-;3303:119;3461:1;3486:53;3531:7;3522:6;3511:9;3507:22;3486:53;:::i;:::-;3476:63;;3432:117;3588:2;3614:53;3659:7;3650:6;3639:9;3635:22;3614:53;:::i;:::-;3604:63;;3559:118;3210:474;;;;;:::o;3690:118::-;3777:24;3795:5;3777:24;:::i;:::-;3772:3;3765:37;3690:118;;:::o;3814:::-;3901:24;3919:5;3901:24;:::i;:::-;3896:3;3889:37;3814:118;;:::o;3938:90::-;3972:7;4015:5;4008:13;4001:21;3990:32;;3938:90;;;:::o;4034:109::-;4115:21;4130:5;4115:21;:::i;:::-;4110:3;4103:34;4034:109;;:::o;4149:541::-;4320:4;4358:3;4347:9;4343:19;4335:27;;4372:71;4440:1;4429:9;4425:17;4416:6;4372:71;:::i;:::-;4453:72;4521:2;4510:9;4506:18;4497:6;4453:72;:::i;:::-;4535;4603:2;4592:9;4588:18;4579:6;4535:72;:::i;:::-;4617:66;4679:2;4668:9;4664:18;4655:6;4617:66;:::i;:::-;4149:541;;;;;;;:::o;4696:652::-;4895:4;4933:3;4922:9;4918:19;4910:27;;4947:71;5015:1;5004:9;5000:17;4991:6;4947:71;:::i;:::-;5028:72;5096:2;5085:9;5081:18;5072:6;5028:72;:::i;:::-;5110;5178:2;5167:9;5163:18;5154:6;5110:72;:::i;:::-;5192;5260:2;5249:9;5245:18;5236:6;5192:72;:::i;:::-;5274:67;5336:3;5325:9;5321:19;5312:6;5274:67;:::i;:::-;4696:652;;;;;;;;:::o;5354:619::-;5431:6;5439;5447;5496:2;5484:9;5475:7;5471:23;5467:32;5464:119;;;5502:79;;:::i;:::-;5464:119;5622:1;5647:53;5692:7;5683:6;5672:9;5668:22;5647:53;:::i;:::-;5637:63;;5593:117;5749:2;5775:53;5820:7;5811:6;5800:9;5796:22;5775:53;:::i;:::-;5765:63;;5720:118;5877:2;5903:53;5948:7;5939:6;5928:9;5924:22;5903:53;:::i;:::-;5893:63;;5848:118;5354:619;;;;;:::o;5979:765::-;6065:6;6073;6081;6089;6138:3;6126:9;6117:7;6113:23;6109:33;6106:120;;;6145:79;;:::i;:::-;6106:120;6265:1;6290:53;6335:7;6326:6;6315:9;6311:22;6290:53;:::i;:::-;6280:63;;6236:117;6392:2;6418:53;6463:7;6454:6;6443:9;6439:22;6418:53;:::i;:::-;6408:63;;6363:118;6520:2;6546:53;6591:7;6582:6;6571:9;6567:22;6546:53;:::i;:::-;6536:63;;6491:118;6648:2;6674:53;6719:7;6710:6;6699:9;6695:22;6674:53;:::i;:::-;6664:63;;6619:118;5979:765;;;;;;;:::o;6750:619::-;6827:6;6835;6843;6892:2;6880:9;6871:7;6867:23;6863:32;6860:119;;;6898:79;;:::i;:::-;6860:119;7018:1;7043:53;7088:7;7079:6;7068:9;7064:22;7043:53;:::i;:::-;7033:63;;6989:117;7145:2;7171:53;7216:7;7207:6;7196:9;7192:22;7171:53;:::i;:::-;7161:63;;7116:118;7273:2;7299:53;7344:7;7335:6;7324:9;7320:22;7299:53;:::i;:::-;7289:63;;7244:118;6750:619;;;;;:::o;7375:541::-;7546:4;7584:3;7573:9;7569:19;7561:27;;7598:71;7666:1;7655:9;7651:17;7642:6;7598:71;:::i;:::-;7679:72;7747:2;7736:9;7732:18;7723:6;7679:72;:::i;:::-;7761;7829:2;7818:9;7814:18;7805:6;7761:72;:::i;:::-;7843:66;7905:2;7894:9;7890:18;7881:6;7843:66;:::i;:::-;7375:541;;;;;;;:::o;7922:158::-;8033:6;8067:5;8061:12;8051:22;;7922:158;;;:::o;8086:218::-;8219:11;8253:6;8248:3;8241:19;8293:4;8288:3;8284:14;8269:29;;8086:218;;;;:::o;8310:176::-;8421:4;8444:3;8436:11;;8474:4;8469:3;8465:14;8457:22;;8310:176;;;:::o;8492:108::-;8569:24;8587:5;8569:24;:::i;:::-;8564:3;8557:37;8492:108;;:::o;8606:99::-;8677:21;8692:5;8677:21;:::i;:::-;8672:3;8665:34;8606:99;;:::o;8799:1491::-;8974:4;8969:3;8965:14;9063:4;9056:5;9052:16;9046:23;9082:63;9139:4;9134:3;9130:14;9116:12;9082:63;:::i;:::-;8989:166;9254:4;9247:5;9243:16;9237:23;9273:63;9330:4;9325:3;9321:14;9307:12;9273:63;:::i;:::-;9165:181;9443:4;9436:5;9432:16;9426:23;9462:63;9519:4;9514:3;9510:14;9496:12;9462:63;:::i;:::-;9356:179;9631:4;9624:5;9620:16;9614:23;9650:63;9707:4;9702:3;9698:14;9684:12;9650:63;:::i;:::-;9545:178;9823:4;9816:5;9812:16;9806:23;9842:63;9899:4;9894:3;9890:14;9876:12;9842:63;:::i;:::-;9733:182;10014:4;10007:5;10003:16;9997:23;10033:63;10090:4;10085:3;10081:14;10067:12;10033:63;:::i;:::-;9925:181;10197:4;10190:5;10186:16;10180:23;10216:57;10267:4;10262:3;10258:14;10244:12;10216:57;:::i;:::-;10116:167;8943:1347;8799:1491;;:::o;10296:355::-;10453:10;10474:134;10604:3;10596:6;10474:134;:::i;:::-;10640:4;10635:3;10631:14;10617:28;;10296:355;;;;:::o;10657:157::-;10771:4;10803;10798:3;10794:14;10786:22;;10657:157;;;:::o;10912:1064::-;11109:3;11138:98;11230:5;11138:98;:::i;:::-;11252:120;11365:6;11360:3;11252:120;:::i;:::-;11245:127;;11396:100;11490:5;11396:100;:::i;:::-;11519:7;11550:1;11535:416;11560:6;11557:1;11554:13;11535:416;;;11636:6;11630:13;11663:151;11810:3;11795:13;11663:151;:::i;:::-;11656:158;;11837:104;11934:6;11837:104;:::i;:::-;11827:114;;11595:356;11582:1;11579;11575:9;11570:14;;11535:416;;;11539:14;11967:3;11960:10;;11114:862;;;10912:1064;;;;:::o;11982:155::-;12090:6;12124:5;12118:12;12108:22;;11982:155;;;:::o;12143:215::-;12273:11;12307:6;12302:3;12295:19;12347:4;12342:3;12338:14;12323:29;;12143:215;;;;:::o;12364:173::-;12472:4;12495:3;12487:11;;12525:4;12520:3;12516:14;12508:22;;12364:173;;;:::o;12625:1291::-;12794:4;12789:3;12785:14;12883:4;12876:5;12872:16;12866:23;12902:63;12959:4;12954:3;12950:14;12936:12;12902:63;:::i;:::-;12809:166;13074:4;13067:5;13063:16;13057:23;13093:63;13150:4;13145:3;13141:14;13127:12;13093:63;:::i;:::-;12985:181;13263:4;13256:5;13252:16;13246:23;13282:63;13339:4;13334:3;13330:14;13316:12;13282:63;:::i;:::-;13176:179;13451:4;13444:5;13440:16;13434:23;13470:63;13527:4;13522:3;13518:14;13504:12;13470:63;:::i;:::-;13365:178;13640:4;13633:5;13629:16;13623:23;13659:63;13716:4;13711:3;13707:14;13693:12;13659:63;:::i;:::-;13553:179;13823:4;13816:5;13812:16;13806:23;13842:57;13893:4;13888:3;13884:14;13870:12;13842:57;:::i;:::-;13742:167;12763:1153;12625:1291;;:::o;13922:343::-;14073:10;14094:128;14218:3;14210:6;14094:128;:::i;:::-;14254:4;14249:3;14245:14;14231:28;;13922:343;;;;:::o;14271:154::-;14382:4;14414;14409:3;14405:14;14397:22;;14271:154;;;:::o;14517:1040::-;14708:3;14737:95;14826:5;14737:95;:::i;:::-;14848:117;14958:6;14953:3;14848:117;:::i;:::-;14841:124;;14989:97;15080:5;14989:97;:::i;:::-;15109:7;15140:1;15125:407;15150:6;15147:1;15144:13;15125:407;;;15226:6;15220:13;15253:145;15394:3;15379:13;15253:145;:::i;:::-;15246:152;;15421:101;15515:6;15421:101;:::i;:::-;15411:111;;15185:347;15172:1;15169;15165:9;15160:14;;15125:407;;;15129:14;15548:3;15541:10;;14713:844;;;14517:1040;;;;:::o;15563:155::-;15671:6;15705:5;15699:12;15689:22;;15563:155;;;:::o;15724:215::-;15854:11;15888:6;15883:3;15876:19;15928:4;15923:3;15919:14;15904:29;;15724:215;;;;:::o;15945:173::-;16053:4;16076:3;16068:11;;16106:4;16101:3;16097:14;16089:22;;15945:173;;;:::o;16206:1294::-;16375:4;16370:3;16366:14;16464:4;16457:5;16453:16;16447:23;16483:63;16540:4;16535:3;16531:14;16517:12;16483:63;:::i;:::-;16390:166;16655:4;16648:5;16644:16;16638:23;16674:63;16731:4;16726:3;16722:14;16708:12;16674:63;:::i;:::-;16566:181;16841:4;16834:5;16830:16;16824:23;16860:63;16917:4;16912:3;16908:14;16894:12;16860:63;:::i;:::-;16757:176;17033:4;17026:5;17022:16;17016:23;17052:63;17109:4;17104:3;17100:14;17086:12;17052:63;:::i;:::-;16943:182;17224:4;17217:5;17213:16;17207:23;17243:63;17300:4;17295:3;17291:14;17277:12;17243:63;:::i;:::-;17135:181;17407:4;17400:5;17396:16;17390:23;17426:57;17477:4;17472:3;17468:14;17454:12;17426:57;:::i;:::-;17326:167;16344:1156;16206:1294;;:::o;17506:343::-;17657:10;17678:128;17802:3;17794:6;17678:128;:::i;:::-;17838:4;17833:3;17829:14;17815:28;;17506:343;;;;:::o;17855:154::-;17966:4;17998;17993:3;17989:14;17981:22;;17855:154;;;:::o;18101:1040::-;18292:3;18321:95;18410:5;18321:95;:::i;:::-;18432:117;18542:6;18537:3;18432:117;:::i;:::-;18425:124;;18573:97;18664:5;18573:97;:::i;:::-;18693:7;18724:1;18709:407;18734:6;18731:1;18728:13;18709:407;;;18810:6;18804:13;18837:145;18978:3;18963:13;18837:145;:::i;:::-;18830:152;;19005:101;19099:6;19005:101;:::i;:::-;18995:111;;18769:347;18756:1;18753;18749:9;18744:14;;18709:407;;;18713:14;19132:3;19125:10;;18297:844;;;18101:1040;;;;:::o;19199:1329::-;19320:3;19356:4;19351:3;19347:14;19466:4;19459:5;19455:16;19449:23;19519:3;19513:4;19509:14;19502:4;19497:3;19493:14;19486:38;19545:191;19731:4;19717:12;19545:191;:::i;:::-;19537:199;;19371:376;19849:4;19842:5;19838:16;19832:23;19902:3;19896:4;19892:14;19885:4;19880:3;19876:14;19869:38;19928:185;20108:4;20094:12;19928:185;:::i;:::-;19920:193;;19757:367;20226:4;20219:5;20215:16;20209:23;20279:3;20273:4;20269:14;20262:4;20257:3;20253:14;20246:38;20305:185;20485:4;20471:12;20305:185;:::i;:::-;20297:193;;20134:367;20518:4;20511:11;;19325:1203;19199:1329;;;;:::o;20534:377::-;20679:4;20717:2;20706:9;20702:18;20694:26;;20766:9;20760:4;20756:20;20752:1;20741:9;20737:17;20730:47;20794:110;20899:4;20890:6;20794:110;:::i;:::-;20786:118;;20534:377;;;;:::o;20917:329::-;20976:6;21025:2;21013:9;21004:7;21000:23;20996:32;20993:119;;;21031:79;;:::i;:::-;20993:119;21151:1;21176:53;21221:7;21212:6;21201:9;21197:22;21176:53;:::i;:::-;21166:63;;21122:117;20917:329;;;;:::o;21252:222::-;21345:4;21383:2;21372:9;21368:18;21360:26;;21396:71;21464:1;21453:9;21449:17;21440:6;21396:71;:::i;:::-;21252:222;;;;:::o;21480:180::-;21528:77;21525:1;21518:88;21625:4;21622:1;21615:15;21649:4;21646:1;21639:15;21666:143;21723:5;21754:6;21748:13;21739:22;;21770:33;21797:5;21770:33;:::i;:::-;21666:143;;;;:::o;21815:351::-;21885:6;21934:2;21922:9;21913:7;21909:23;21905:32;21902:119;;;21940:79;;:::i;:::-;21902:119;22060:1;22085:64;22141:7;22132:6;22121:9;22117:22;22085:64;:::i;:::-;22075:74;;22031:128;21815:351;;;;:::o;22172:332::-;22293:4;22331:2;22320:9;22316:18;22308:26;;22344:71;22412:1;22401:9;22397:17;22388:6;22344:71;:::i;:::-;22425:72;22493:2;22482:9;22478:18;22469:6;22425:72;:::i;:::-;22172:332;;;;;:::o;22510:442::-;22659:4;22697:2;22686:9;22682:18;22674:26;;22710:71;22778:1;22767:9;22763:17;22754:6;22710:71;:::i;:::-;22791:72;22859:2;22848:9;22844:18;22835:6;22791:72;:::i;:::-;22873;22941:2;22930:9;22926:18;22917:6;22873:72;:::i;:::-;22510:442;;;;;;:::o;22958:116::-;23028:21;23043:5;23028:21;:::i;:::-;23021:5;23018:32;23008:60;;23064:1;23061;23054:12;23008:60;22958:116;:::o;23080:137::-;23134:5;23165:6;23159:13;23150:22;;23181:30;23205:5;23181:30;:::i;:::-;23080:137;;;;:::o;23223:345::-;23290:6;23339:2;23327:9;23318:7;23314:23;23310:32;23307:119;;;23345:79;;:::i;:::-;23307:119;23465:1;23490:61;23543:7;23534:6;23523:9;23519:22;23490:61;:::i;:::-;23480:71;;23436:125;23223:345;;;;:::o;23574:147::-;23675:11;23712:3;23697:18;;23574:147;;;;:::o;23727:114::-;;:::o;23847:398::-;24006:3;24027:83;24108:1;24103:3;24027:83;:::i;:::-;24020:90;;24119:93;24208:3;24119:93;:::i;:::-;24237:1;24232:3;24228:11;24221:18;;23847:398;;;:::o;24251:379::-;24435:3;24457:147;24600:3;24457:147;:::i;:::-;24450:154;;24621:3;24614:10;;24251:379;;;:::o;24636:169::-;24720:11;24754:6;24749:3;24742:19;24794:4;24789:3;24785:14;24770:29;;24636:169;;;;:::o;24811:170::-;24951:22;24947:1;24939:6;24935:14;24928:46;24811:170;:::o;24987:366::-;25129:3;25150:67;25214:2;25209:3;25150:67;:::i;:::-;25143:74;;25226:93;25315:3;25226:93;:::i;:::-;25344:2;25339:3;25335:12;25328:19;;24987:366;;;:::o;25359:419::-;25525:4;25563:2;25552:9;25548:18;25540:26;;25612:9;25606:4;25602:20;25598:1;25587:9;25583:17;25576:47;25640:131;25766:4;25640:131;:::i;:::-;25632:139;;25359:419;;;:::o;25784:775::-;26017:4;26055:3;26044:9;26040:19;26032:27;;26069:71;26137:1;26126:9;26122:17;26113:6;26069:71;:::i;:::-;26150:72;26218:2;26207:9;26203:18;26194:6;26150:72;:::i;:::-;26232;26300:2;26289:9;26285:18;26276:6;26232:72;:::i;:::-;26314;26382:2;26371:9;26367:18;26358:6;26314:72;:::i;:::-;26396:73;26464:3;26453:9;26449:19;26440:6;26396:73;:::i;:::-;26479;26547:3;26536:9;26532:19;26523:6;26479:73;:::i;:::-;25784:775;;;;;;;;;:::o;26565:664::-;26770:4;26808:3;26797:9;26793:19;26785:27;;26822:71;26890:1;26879:9;26875:17;26866:6;26822:71;:::i;:::-;26903:72;26971:2;26960:9;26956:18;26947:6;26903:72;:::i;:::-;26985;27053:2;27042:9;27038:18;27029:6;26985:72;:::i;:::-;27067;27135:2;27124:9;27120:18;27111:6;27067:72;:::i;:::-;27149:73;27217:3;27206:9;27202:19;27193:6;27149:73;:::i;:::-;26565:664;;;;;;;;:::o;27235:155::-;27375:7;27371:1;27363:6;27359:14;27352:31;27235:155;:::o;27396:365::-;27538:3;27559:66;27623:1;27618:3;27559:66;:::i;:::-;27552:73;;27634:93;27723:3;27634:93;:::i;:::-;27752:2;27747:3;27743:12;27736:19;;27396:365;;;:::o;27767:419::-;27933:4;27971:2;27960:9;27956:18;27948:26;;28020:9;28014:4;28010:20;28006:1;27995:9;27991:17;27984:47;28048:131;28174:4;28048:131;:::i;:::-;28040:139;;27767:419;;;:::o;28192:155::-;28332:7;28328:1;28320:6;28316:14;28309:31;28192:155;:::o;28353:365::-;28495:3;28516:66;28580:1;28575:3;28516:66;:::i;:::-;28509:73;;28591:93;28680:3;28591:93;:::i;:::-;28709:2;28704:3;28700:12;28693:19;;28353:365;;;:::o;28724:419::-;28890:4;28928:2;28917:9;28913:18;28905:26;;28977:9;28971:4;28967:20;28963:1;28952:9;28948:17;28941:47;29005:131;29131:4;29005:131;:::i;:::-;28997:139;;28724:419;;;:::o;29149:886::-;29410:4;29448:3;29437:9;29433:19;29425:27;;29462:71;29530:1;29519:9;29515:17;29506:6;29462:71;:::i;:::-;29543:72;29611:2;29600:9;29596:18;29587:6;29543:72;:::i;:::-;29625;29693:2;29682:9;29678:18;29669:6;29625:72;:::i;:::-;29707;29775:2;29764:9;29760:18;29751:6;29707:72;:::i;:::-;29789:73;29857:3;29846:9;29842:19;29833:6;29789:73;:::i;:::-;29872;29940:3;29929:9;29925:19;29916:6;29872:73;:::i;:::-;29955;30023:3;30012:9;30008:19;29999:6;29955:73;:::i;:::-;29149:886;;;;;;;;;;:::o;30041:775::-;30274:4;30312:3;30301:9;30297:19;30289:27;;30326:71;30394:1;30383:9;30379:17;30370:6;30326:71;:::i;:::-;30407:72;30475:2;30464:9;30460:18;30451:6;30407:72;:::i;:::-;30489;30557:2;30546:9;30542:18;30533:6;30489:72;:::i;:::-;30571;30639:2;30628:9;30624:18;30615:6;30571:72;:::i;:::-;30653:73;30721:3;30710:9;30706:19;30697:6;30653:73;:::i;:::-;30736;30804:3;30793:9;30789:19;30780:6;30736:73;:::i;:::-;30041:775;;;;;;;;;:::o;30822:180::-;30870:77;30867:1;30860:88;30967:4;30964:1;30957:15;30991:4;30988:1;30981:15;31008:194;31048:4;31068:20;31086:1;31068:20;:::i;:::-;31063:25;;31102:20;31120:1;31102:20;:::i;:::-;31097:25;;31146:1;31143;31139:9;31131:17;;31170:1;31164:4;31161:11;31158:37;;;31175:18;;:::i;:::-;31158:37;31008:194;;;;:::o;31208:775::-;31441:4;31479:3;31468:9;31464:19;31456:27;;31493:71;31561:1;31550:9;31546:17;31537:6;31493:71;:::i;:::-;31574:72;31642:2;31631:9;31627:18;31618:6;31574:72;:::i;:::-;31656;31724:2;31713:9;31709:18;31700:6;31656:72;:::i;:::-;31738;31806:2;31795:9;31791:18;31782:6;31738:72;:::i;:::-;31820:73;31888:3;31877:9;31873:19;31864:6;31820:73;:::i;:::-;31903;31971:3;31960:9;31956:19;31947:6;31903:73;:::i;:::-;31208:775;;;;;;;;;:::o;31989:664::-;32194:4;32232:3;32221:9;32217:19;32209:27;;32246:71;32314:1;32303:9;32299:17;32290:6;32246:71;:::i;:::-;32327:72;32395:2;32384:9;32380:18;32371:6;32327:72;:::i;:::-;32409;32477:2;32466:9;32462:18;32453:6;32409:72;:::i;:::-;32491;32559:2;32548:9;32544:18;32535:6;32491:72;:::i;:::-;32573:73;32641:3;32630:9;32626:19;32617:6;32573:73;:::i;:::-;31989:664;;;;;;;;:::o;32659:191::-;32699:3;32718:20;32736:1;32718:20;:::i;:::-;32713:25;;32752:20;32770:1;32752:20;:::i;:::-;32747:25;;32795:1;32792;32788:9;32781:16;;32816:3;32813:1;32810:10;32807:36;;;32823:18;;:::i;:::-;32807:36;32659:191;;;;:::o;32856:233::-;32895:3;32918:24;32936:5;32918:24;:::i;:::-;32909:33;;32964:66;32957:5;32954:77;32951:103;;33034:18;;:::i;:::-;32951:103;33081:1;33074:5;33070:13;33063:20;;32856:233;;;:::o;33095:180::-;33143:77;33140:1;33133:88;33240:4;33237:1;33230:15;33264:4;33261:1;33254:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Dex {\n  event EventAddToDexTradeTokensForTokens (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventAddToDexTradeTokensForEth (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventAddToDexTradeEthForTokens (\n    address sender,\n    uint indexOfTrade,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventTradeTokensForTokens (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount,\n    address orderCompletedBy\n  );\n\n  event EventTradeTokensForEth (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount,\n    address orderCompletedBy\n  );\n\n  event EventTradeEthForTokens (\n    address sender,\n    uint indexOfTrade,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount,\n    address orderCompletedBy\n  );\n\n  event EventCanceledTradeTokensForTokens (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  event EventCanceledTradeTokensForEth (\n    address sender,\n    uint indexOfTrade,\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount\n  );\n\n  event EventCanceledTradeEthForTokens (\n    address sender,\n    uint indexOfTrade,\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount\n  );\n\n  struct TradeTokensForTokens {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeTokensForEth {\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeEthForTokens {\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeTokensForTokensForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeTokensForEthForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    address tradingTokenAddress;\n    uint tradingTokenAmount;\n    uint tradingForEthAmount;\n    bool alreadyTraded;\n  }\n\n  struct TradeEthForTokensForCall {\n    address sender;\n    uint indexOfTradeOfAddress;\n    uint tradingEthAmount;\n    address tradingForTokenAddress;\n    uint tradingForTokenAmount;\n    bool alreadyTraded;\n  }\n\n  struct AllTrades {\n    TradeTokensForTokensForCall[] tradeTokensForTokensForCall;\n    TradeTokensForEthForCall[] tradeTokensForEthForCall;\n    TradeEthForTokensForCall[] tradeEthForTokensForCall;\n  }\n\n  mapping(address => TradeTokensForTokens[]) public tradesOfTokensForTokensOfAnAddress;\n  mapping(address => TradeTokensForEth[]) public tradesOfTokensForEthOfAnAddress;\n  mapping(address => TradeEthForTokens[]) public tradesOfEthForTokensOfAnAddress;\n\n  struct TradeCategoriesOfDexUser {\n    bool tradeTokensForTokens;\n    bool tradeTokensForEth;\n    bool tradeEthForTokens;\n  }\n\n  address[] public dexUsersArr;\n  mapping(address => TradeCategoriesOfDexUser) dexUsersMapping;\n\n  address owner;\n\n  constructor() {\n    owner = msg.sender;\n  }\n\n  function addTokensToDexForTradeWithOtherTokens(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public {\n\n    require(tradingTokenAddress != tradingForTokenAddress);\n\n    tradesOfTokensForTokensOfAnAddress[msg.sender].push(\n      TradeTokensForTokens(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForTokens(\n      msg.sender,\n      tradesOfTokensForTokensOfAnAddress[msg.sender].length - 1,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForTokens == false) {\n      dexUsersMapping[msg.sender].tradeTokensForTokens = true;\n    }\n  }\n\n  function addTokensToDexForTradeWithEth(\n    address tradingTokenAddress,\n    uint tradingTokenAmount,\n    uint tradingForEthAmount) public {\n\n    tradesOfTokensForEthOfAnAddress[msg.sender].push(\n      TradeTokensForEth(\n        tradingTokenAddress,\n        tradingTokenAmount,\n        tradingForEthAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeTokensForEth(\n      msg.sender,\n      tradesOfTokensForEthOfAnAddress[msg.sender].length - 1,\n      tradingTokenAddress,\n      tradingTokenAmount,\n      tradingForEthAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeTokensForEth = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeTokensForEth == false) {\n      dexUsersMapping[msg.sender].tradeTokensForEth = true;\n    }\n  }\n\n  function addEthToDexForTradeWithTokens(\n    uint tradingEthAmount,\n    address tradingForTokenAddress,\n    uint tradingForTokenAmount) public payable {\n\n    require(msg.value == tradingEthAmount);\n\n    tradesOfEthForTokensOfAnAddress[msg.sender].push(\n      TradeEthForTokens(\n        tradingEthAmount,\n        tradingForTokenAddress,\n        tradingForTokenAmount,\n        false\n    ));\n\n    emit EventAddToDexTradeEthForTokens(\n      msg.sender,\n      tradesOfEthForTokensOfAnAddress[msg.sender].length - 1,\n      tradingEthAmount,\n      tradingForTokenAddress,\n      tradingForTokenAmount\n    );\n\n    if (dexUsersMapping[msg.sender].tradeTokensForTokens == false &&\n        dexUsersMapping[msg.sender].tradeTokensForEth == false &&\n        dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n          dexUsersArr.push(msg.sender);\n          dexUsersMapping[msg.sender].tradeEthForTokens = true;\n\n    } else if (dexUsersMapping[msg.sender].tradeEthForTokens == false) {\n      dexUsersMapping[msg.sender].tradeEthForTokens = true;\n    }\n  }\n\n  function buyTokensFromTokens(address sender, uint indexOfTrade) public {\n    require(sender != msg.sender);\n    require(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingErc20 = ERC20(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount);\n\n    ERC20 tradingForErc20 = ERC20(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress);\n\n    require(tradingForErc20.balanceOf(msg.sender) >= tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount, 'here1');\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount, 'here2');\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForTokens(\n      sender,\n      indexOfTrade,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount,\n      msg.sender\n    );\n  }\n\n  function buyTokensForEth(address sender, uint indexOfTrade) public payable {\n    require(sender != msg.sender);\n    require(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingErc20 = ERC20(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress);\n    tradingErc20.transferFrom(sender, msg.sender, tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount);\n\n    require(msg.value == tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount);\n\n    (bool sent,) = sender.call{value: msg.value}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeTokensForEth(\n      sender,\n      indexOfTrade,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount,\n      msg.sender\n    );\n  }\n\n  function buyEthForTokens(address sender, uint indexOfTrade) public payable {\n    require(sender != msg.sender);\n    require(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded != true);\n\n    ERC20 tradingForErc20 = ERC20(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress);\n    require(tradingForErc20.balanceOf(msg.sender) >= tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    require(tradingForErc20.allowance(msg.sender, address(this)) >= tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    tradingForErc20.transferFrom(msg.sender, sender, tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount);\n\n    (bool sent,) = payable(msg.sender).call{value: tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventTradeEthForTokens(\n      sender,\n      indexOfTrade,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount,\n      msg.sender\n    );\n  }\n\n  function cancelTradeForTokensWithTokens(address sender, uint indexOfTrade) public {\n    require(msg.sender == sender);\n    require(tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventCanceledTradeTokensForTokens(\n      sender,\n      indexOfTrade,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfTokensForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  function cancelTradeForTokensWithEth(address sender, uint indexOfTrade) public {\n    require(msg.sender == sender);\n    require(tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    emit EventCanceledTradeTokensForEth(\n      sender,\n      indexOfTrade,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAddress,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingTokenAmount,\n      tradesOfTokensForEthOfAnAddress[sender][indexOfTrade].tradingForEthAmount\n    );\n  }\n\n  function cancelTradeForEthWithTokens(address sender, uint indexOfTrade) public payable {\n    require(msg.sender == sender);\n    require(tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded == false);\n\n    tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].alreadyTraded = true;\n\n    (bool sent,) = payable(msg.sender).call{value: tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount}(\"\");\n    require(sent, \"Failed to send Ether\");\n\n    emit EventCanceledTradeEthForTokens(\n      sender,\n      indexOfTrade,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingEthAmount,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAddress,\n      tradesOfEthForTokensOfAnAddress[sender][indexOfTrade].tradingForTokenAmount\n    );\n  }\n\n  function getAllTrades() public view returns (AllTrades memory) {\n\n    uint amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForTokensForCall[] memory tradeTokensForTokensResultArr = new TradeTokensForTokensForCall[](amountOfTrades);\n\n    uint indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        TradeTokensForTokens memory tradeTokensForTokens = tradesOfTokensForTokensOfAnAddress[dexUsersArr[i]][j];\n        TradeTokensForTokensForCall memory tradeTokensForTokensForCall = TradeTokensForTokensForCall (\n          dexUsersArr[i],\n          j,\n          tradeTokensForTokens.tradingTokenAddress,\n          tradeTokensForTokens.tradingTokenAmount,\n          tradeTokensForTokens.tradingForTokenAddress,\n          tradeTokensForTokens.tradingForTokenAmount,\n          tradeTokensForTokens.alreadyTraded\n        );\n\n        tradeTokensForTokensResultArr[indexOfResultArr] = tradeTokensForTokensForCall;\n\n        indexOfResultArr = indexOfResultArr + 1;\n      }\n    }\n\n    amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeTokensForEthForCall[] memory tradeTokensForEthResultArr = new TradeTokensForEthForCall[](amountOfTrades);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfTokensForEthOfAnAddress[dexUsersArr[i]].length; j++) {\n        TradeTokensForEth memory tradeTokensForEth = tradesOfTokensForEthOfAnAddress[dexUsersArr[i]][j];\n        TradeTokensForEthForCall memory tradeTokensForEthForCall = TradeTokensForEthForCall (\n          dexUsersArr[i],\n          j,\n          tradeTokensForEth.tradingTokenAddress,\n          tradeTokensForEth.tradingTokenAmount,\n          tradeTokensForEth.tradingForEthAmount,\n          tradeTokensForEth.alreadyTraded\n        );\n\n        tradeTokensForEthResultArr[indexOfResultArr] = tradeTokensForEthForCall;\n        indexOfResultArr = indexOfResultArr + 1;\n      }\n    }\n\n    amountOfTrades = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        amountOfTrades = amountOfTrades + 1;\n      }\n    }\n\n    TradeEthForTokensForCall[] memory tradeEthForTokensResultArr = new TradeEthForTokensForCall[](amountOfTrades);\n\n    indexOfResultArr = 0;\n\n    for (uint i = 0; i < dexUsersArr.length; i++) {\n      for (uint j = 0; j < tradesOfEthForTokensOfAnAddress[dexUsersArr[i]].length; j++) {\n        TradeEthForTokens memory tradeEthForTokens = tradesOfEthForTokensOfAnAddress[dexUsersArr[i]][j];\n        TradeEthForTokensForCall memory tradeEthForTokensForCall = TradeEthForTokensForCall (\n          dexUsersArr[i],\n          j,\n          tradeEthForTokens.tradingEthAmount,\n          tradeEthForTokens.tradingForTokenAddress,\n          tradeEthForTokens.tradingForTokenAmount,\n          tradeEthForTokens.alreadyTraded\n        );\n\n        tradeEthForTokensResultArr[indexOfResultArr] = tradeEthForTokensForCall;\n        indexOfResultArr = indexOfResultArr + 1;\n      }\n    }\n\n    AllTrades memory allTrades;\n\n    allTrades.tradeTokensForTokensForCall = tradeTokensForTokensResultArr;\n    allTrades.tradeTokensForEthForCall = tradeTokensForEthResultArr;\n    allTrades.tradeEthForTokensForCall = tradeEthForTokensResultArr;\n\n    return allTrades;\n  }\n\n\n\n  function getDexUsers() public view returns (address[] memory) {\n    return dexUsersArr;\n  }\n\n  struct AllTradesOfAccount {\n    TradeTokensForTokensForCall[] tradeTokensForTokensForCall;\n    TradeTokensForEthForCall[] tradeTokensForEthForCall;\n    TradeEthForTokensForCall[] tradeEthForTokensForCall;\n  }\n\n  fallback() external payable {\n\n  }\n}\n",
  "sourcePath": "/Users/zhiwen/code/dex-old/contracts/contracts/Dex.sol",
  "ast": {
    "absolutePath": "project:/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        785
      ],
      "Dex": [
        2391
      ],
      "ERC20": [
        651
      ],
      "IERC20": [
        729
      ],
      "IERC20Errors": [
        41
      ],
      "IERC20Metadata": [
        755
      ]
    },
    "id": 2392,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 788,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2392,
        "sourceUnit": 652,
        "src": "65:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2391,
        "linearizedBaseContracts": [
          2391
        ],
        "name": "Dex",
        "nameLocation": "131:3:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "9f53e6265e34e225b3a062b3e0f18e1a57fe8c46ccd096edc6a27292b45831a2",
            "id": 802,
            "name": "EventAddToDexTradeTokensForTokens",
            "nameLocation": "145:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "193:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "185:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "210:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "205:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "236:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "228:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "266:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "261:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "298:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "290:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "331:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "326:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:177:5"
            },
            "src": "139:218:5"
          },
          {
            "anonymous": false,
            "eventSelector": "cbb2baf7f0878f163f373ce81dcee352d496f2e3e7de9ded7223b6ffb02c5ed2",
            "id": 814,
            "name": "EventAddToDexTradeTokensForEth",
            "nameLocation": "367:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "412:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "404:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "429:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "424:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "455:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "447:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "485:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "480:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "514:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "509:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "398:139:5"
            },
            "src": "361:177:5"
          },
          {
            "anonymous": false,
            "eventSelector": "8664a0195db99dab92c38f2347e87be0c0fc0057973eca207b7d866058b21b39",
            "id": 826,
            "name": "EventAddToDexTradeEthForTokens",
            "nameLocation": "548:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "593:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "585:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "610:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "605:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "633:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "628:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "663:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "655:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "696:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "691:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:142:5"
            },
            "src": "542:180:5"
          },
          {
            "anonymous": false,
            "eventSelector": "19a60cab51f12e292294e2938f67526bcef39bc48bf1eee59585d3ad6001d889",
            "id": 842,
            "name": "EventTradeTokensForTokens",
            "nameLocation": "732:25:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "772:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "764:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "789:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "784:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "815:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "807:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "845:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "840:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "877:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "869:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "910:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "905:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "orderCompletedBy",
                  "nameLocation": "945:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "937:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "758:207:5"
            },
            "src": "726:240:5"
          },
          {
            "anonymous": false,
            "eventSelector": "441219de0f005ddf1372035401ca089c43131960d7dbdc2abbc6ebb5effe8fc8",
            "id": 856,
            "name": "EventTradeTokensForEth",
            "nameLocation": "976:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1013:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1005:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "1030:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1025:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1056:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1048:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1086:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1081:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "1115:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1110:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "orderCompletedBy",
                  "nameLocation": "1148:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1140:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "999:169:5"
            },
            "src": "970:199:5"
          },
          {
            "anonymous": false,
            "eventSelector": "939bddfc94723dfe1a94b37a7828c73e510a1069f02bbef1058db8680fc9b737",
            "id": 870,
            "name": "EventTradeEthForTokens",
            "nameLocation": "1179:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1216:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1208:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "1233:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1228:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1256:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1251:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1286:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1278:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1319:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1314:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "orderCompletedBy",
                  "nameLocation": "1354:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "1346:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:172:5"
            },
            "src": "1173:202:5"
          },
          {
            "anonymous": false,
            "eventSelector": "bfa95375e459bbd89322e4b788211eac11a3d4916e2ec1a88f0f8e3e623ffab7",
            "id": 884,
            "name": "EventCanceledTradeTokensForTokens",
            "nameLocation": "1385:33:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1433:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1425:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "1450:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1445:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1476:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1468:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1506:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1501:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1538:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1530:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1571:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1566:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1419:177:5"
            },
            "src": "1379:218:5"
          },
          {
            "anonymous": false,
            "eventSelector": "39512ac5e172c09a82461ef4eb9469d1dd9e84b90d14af11b1494c5830f8be30",
            "id": 896,
            "name": "EventCanceledTradeTokensForEth",
            "nameLocation": "1607:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1652:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1644:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "1669:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1664:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "1695:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1687:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "1725:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1720:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "1754:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1749:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:139:5"
            },
            "src": "1601:177:5"
          },
          {
            "anonymous": false,
            "eventSelector": "c3862de41bef5ea6c04a4f55fb0d4db3c4fe10d5e24982b16340dd04e5503ee0",
            "id": 908,
            "name": "EventCanceledTradeEthForTokens",
            "nameLocation": "1788:30:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1833:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1825:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "1850:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1845:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "1873:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1868:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "1903:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1895:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "1936:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1931:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1819:142:5"
            },
            "src": "1782:180:5"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokens",
            "id": 919,
            "members": [
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "2008:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 919,
                "src": "2000:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 909,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2000:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 912,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "2038:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 919,
                "src": "2033:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 911,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2033:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 914,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "2070:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 919,
                "src": "2062:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 913,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2062:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 916,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "2103:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 919,
                "src": "2098:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 915,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2098:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 918,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2135:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 919,
                "src": "2130:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 917,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2130:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokens",
            "nameLocation": "1973:20:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "1966:187:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEth",
            "id": 928,
            "members": [
              {
                "constant": false,
                "id": 921,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "2196:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 928,
                "src": "2188:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 920,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2188:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 923,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "2226:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 928,
                "src": "2221:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 922,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2221:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 925,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "2255:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 928,
                "src": "2250:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 924,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2250:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 927,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2285:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 928,
                "src": "2280:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 926,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2280:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEth",
            "nameLocation": "2164:17:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "2157:146:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokens",
            "id": 937,
            "members": [
              {
                "constant": false,
                "id": 930,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "2343:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 937,
                "src": "2338:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 929,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2338:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 932,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "2373:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 937,
                "src": "2365:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2365:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 934,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "2406:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 937,
                "src": "2401:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 933,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2401:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 936,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2438:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 937,
                "src": "2433:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 935,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2433:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokens",
            "nameLocation": "2314:17:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "2307:149:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForTokensForCall",
            "id": 952,
            "members": [
              {
                "constant": false,
                "id": 939,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "2509:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2501:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 938,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2501:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 941,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "2526:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2521:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 940,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2521:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 943,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "2561:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2553:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 942,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2553:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 945,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "2591:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2586:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 944,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2586:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 947,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "2623:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2615:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 946,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2615:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 949,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "2656:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2651:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 948,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2651:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 951,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2688:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 952,
                "src": "2683:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 950,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2683:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForTokensForCall",
            "nameLocation": "2467:27:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "2460:246:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeTokensForEthForCall",
            "id": 965,
            "members": [
              {
                "constant": false,
                "id": 954,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "2756:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2748:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 953,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2748:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 956,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "2773:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2768:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 955,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2768:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 958,
                "mutability": "mutable",
                "name": "tradingTokenAddress",
                "nameLocation": "2808:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2800:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 957,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2800:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 960,
                "mutability": "mutable",
                "name": "tradingTokenAmount",
                "nameLocation": "2838:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2833:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 959,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2833:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 962,
                "mutability": "mutable",
                "name": "tradingForEthAmount",
                "nameLocation": "2867:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2862:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 961,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2862:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 964,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "2897:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 965,
                "src": "2892:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 963,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2892:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeTokensForEthForCall",
            "nameLocation": "2717:24:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "2710:205:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeEthForTokensForCall",
            "id": 978,
            "members": [
              {
                "constant": false,
                "id": 967,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "2965:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "2957:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 966,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2957:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 969,
                "mutability": "mutable",
                "name": "indexOfTradeOfAddress",
                "nameLocation": "2982:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "2977:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 968,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2977:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 971,
                "mutability": "mutable",
                "name": "tradingEthAmount",
                "nameLocation": "3014:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "3009:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 970,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3009:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 973,
                "mutability": "mutable",
                "name": "tradingForTokenAddress",
                "nameLocation": "3044:22:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "3036:30:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 972,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3036:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 975,
                "mutability": "mutable",
                "name": "tradingForTokenAmount",
                "nameLocation": "3077:21:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "3072:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 974,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3072:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 977,
                "mutability": "mutable",
                "name": "alreadyTraded",
                "nameLocation": "3109:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 978,
                "src": "3104:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 976,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3104:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeEthForTokensForCall",
            "nameLocation": "2926:24:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "2919:208:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.AllTrades",
            "id": 991,
            "members": [
              {
                "constant": false,
                "id": 982,
                "mutability": "mutable",
                "name": "tradeTokensForTokensForCall",
                "nameLocation": "3184:27:5",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "3154:57:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 980,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 979,
                      "name": "TradeTokensForTokensForCall",
                      "nameLocations": [
                        "3154:27:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 952,
                      "src": "3154:27:5"
                    },
                    "referencedDeclaration": 952,
                    "src": "3154:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                    }
                  },
                  "id": 981,
                  "nodeType": "ArrayTypeName",
                  "src": "3154:29:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "tradeTokensForEthForCall",
                "nameLocation": "3244:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "3217:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEthForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 983,
                      "name": "TradeTokensForEthForCall",
                      "nameLocations": [
                        "3217:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 965,
                      "src": "3217:24:5"
                    },
                    "referencedDeclaration": 965,
                    "src": "3217:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall"
                    }
                  },
                  "id": 985,
                  "nodeType": "ArrayTypeName",
                  "src": "3217:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEthForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "mutability": "mutable",
                "name": "tradeEthForTokensForCall",
                "nameLocation": "3301:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 991,
                "src": "3274:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 988,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 987,
                      "name": "TradeEthForTokensForCall",
                      "nameLocations": [
                        "3274:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 978,
                      "src": "3274:24:5"
                    },
                    "referencedDeclaration": 978,
                    "src": "3274:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall"
                    }
                  },
                  "id": 989,
                  "nodeType": "ArrayTypeName",
                  "src": "3274:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllTrades",
            "nameLocation": "3138:9:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "3131:199:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b66082a",
            "id": 997,
            "mutability": "mutable",
            "name": "tradesOfTokensForTokensOfAnAddress",
            "nameLocation": "3384:34:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3334:84:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
            },
            "typeName": {
              "id": 996,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 992,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3342:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3334:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 994,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 993,
                    "name": "TradeTokensForTokens",
                    "nameLocations": [
                      "3353:20:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 919,
                    "src": "3353:20:5"
                  },
                  "referencedDeclaration": 919,
                  "src": "3353:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokens"
                  }
                },
                "id": 995,
                "nodeType": "ArrayTypeName",
                "src": "3353:22:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bc07cef",
            "id": 1003,
            "mutability": "mutable",
            "name": "tradesOfTokensForEthOfAnAddress",
            "nameLocation": "3469:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3422:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
            },
            "typeName": {
              "id": 1002,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 998,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3430:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3422:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeTokensForEth[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 1000,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 999,
                    "name": "TradeTokensForEth",
                    "nameLocations": [
                      "3441:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 928,
                    "src": "3441:17:5"
                  },
                  "referencedDeclaration": 928,
                  "src": "3441:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEth"
                  }
                },
                "id": 1001,
                "nodeType": "ArrayTypeName",
                "src": "3441:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEth[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be532109",
            "id": 1009,
            "mutability": "mutable",
            "name": "tradesOfEthForTokensOfAnAddress",
            "nameLocation": "3551:31:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3504:78:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
            },
            "typeName": {
              "id": 1008,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1004,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3512:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3504:39:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Dex.TradeEthForTokens[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 1006,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1005,
                    "name": "TradeEthForTokens",
                    "nameLocations": [
                      "3523:17:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 937,
                    "src": "3523:17:5"
                  },
                  "referencedDeclaration": 937,
                  "src": "3523:17:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokens"
                  }
                },
                "id": 1007,
                "nodeType": "ArrayTypeName",
                "src": "3523:19:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokens[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.TradeCategoriesOfDexUser",
            "id": 1016,
            "members": [
              {
                "constant": false,
                "id": 1011,
                "mutability": "mutable",
                "name": "tradeTokensForTokens",
                "nameLocation": "3630:20:5",
                "nodeType": "VariableDeclaration",
                "scope": 1016,
                "src": "3625:25:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1010,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3625:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1013,
                "mutability": "mutable",
                "name": "tradeTokensForEth",
                "nameLocation": "3661:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 1016,
                "src": "3656:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1012,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3656:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1015,
                "mutability": "mutable",
                "name": "tradeEthForTokens",
                "nameLocation": "3689:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 1016,
                "src": "3684:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1014,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3684:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeCategoriesOfDexUser",
            "nameLocation": "3594:24:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "3587:124:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd9c8853",
            "id": 1019,
            "mutability": "mutable",
            "name": "dexUsersArr",
            "nameLocation": "3732:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3715:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1017,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3715:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1018,
              "nodeType": "ArrayTypeName",
              "src": "3715:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1024,
            "mutability": "mutable",
            "name": "dexUsersMapping",
            "nameLocation": "3792:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3747:60:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
            },
            "typeName": {
              "id": 1023,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1020,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3755:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3747:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1022,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1021,
                  "name": "TradeCategoriesOfDexUser",
                  "nameLocations": [
                    "3766:24:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1016,
                  "src": "3766:24:5"
                },
                "referencedDeclaration": 1016,
                "src": "3766:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage_ptr",
                  "typeString": "struct Dex.TradeCategoriesOfDexUser"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1026,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "3820:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 2391,
            "src": "3812:13:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1025,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3812:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "3844:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1029,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "3850:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1030,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3858:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3862:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3858:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3850:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:18:5"
                }
              ]
            },
            "id": 1035,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3841:2:5"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3844:0:5"
            },
            "scope": 2391,
            "src": "3830:43:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "4062:995:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1047,
                          "name": "tradingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "4077:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1048,
                          "name": "tradingForTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "4100:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4077:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4069:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4069:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "4069:54:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1058,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "4219:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1059,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "4248:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1060,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "4276:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1061,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "4308:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4339:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1057,
                          "name": "TradeTokensForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "4189:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokens_$919_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForTokens storage pointer)"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4189:161:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1052,
                          "name": "tradesOfTokensForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "4130:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1055,
                        "indexExpression": {
                          "expression": {
                            "id": 1053,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4165:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4169:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4165:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4130:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4177:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4130:51:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForTokens_$919_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForTokens storage ref[] storage pointer,struct Dex.TradeTokensForTokens storage ref)"
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:221:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:221:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4404:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4408:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4404:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1069,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "4422:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1072,
                            "indexExpression": {
                              "expression": {
                                "id": 1070,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4457:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4461:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4457:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4422:46:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4469:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4422:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4478:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4422:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1076,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "4487:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "4514:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1078,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "4540:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1079,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "4570:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1066,
                      "name": "EventAddToDexTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "4363:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4363:234:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "EmitStatement",
                  "src": "4358:239:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1082,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "4608:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1085,
                            "indexExpression": {
                              "expression": {
                                "id": 1083,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4624:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4628:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4624:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4608:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4636:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1011,
                          "src": "4608:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4660:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4608:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1089,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "4677:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1092,
                            "indexExpression": {
                              "expression": {
                                "id": 1090,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4693:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4697:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4693:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4677:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4705:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1013,
                          "src": "4677:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4726:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4677:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4608:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1097,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "4743:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1100,
                          "indexExpression": {
                            "expression": {
                              "id": 1098,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4759:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4763:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4759:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4743:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4771:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1015,
                        "src": "4743:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4792:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "4743:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4608:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1121,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "4924:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1124,
                          "indexExpression": {
                            "expression": {
                              "id": 1122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4940:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4944:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4940:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4924:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4952:20:5",
                        "memberName": "tradeTokensForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1011,
                        "src": "4924:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4976:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "4924:57:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1137,
                    "nodeType": "IfStatement",
                    "src": "4920:133:5",
                    "trueBody": {
                      "id": 1136,
                      "nodeType": "Block",
                      "src": "4983:70:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1128,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "4991:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1131,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1129,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5007:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5011:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5007:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4991:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "5019:20:5",
                              "memberName": "tradeTokensForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1011,
                              "src": "4991:48:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5042:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "4991:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1135,
                          "nodeType": "ExpressionStatement",
                          "src": "4991:55:5"
                        }
                      ]
                    }
                  },
                  "id": 1138,
                  "nodeType": "IfStatement",
                  "src": "4604:449:5",
                  "trueBody": {
                    "id": 1120,
                    "nodeType": "Block",
                    "src": "4799:115:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1108,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4828:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4832:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4828:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1105,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "4811:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4823:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4811:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4811:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1111,
                        "nodeType": "ExpressionStatement",
                        "src": "4811:28:5"
                      },
                      {
                        "expression": {
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1112,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "4851:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1115,
                              "indexExpression": {
                                "expression": {
                                  "id": 1113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4867:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4871:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4867:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4851:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4879:20:5",
                            "memberName": "tradeTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1011,
                            "src": "4851:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4902:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4851:55:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1119,
                        "nodeType": "ExpressionStatement",
                        "src": "4851:55:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a1179c72",
            "id": 1140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithOtherTokens",
            "nameLocation": "3886:37:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "3937:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "3929:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "3967:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "3962:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3962:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "3999:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "3991:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "4032:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "4027:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:131:5"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4062:0:5"
            },
            "scope": 2391,
            "src": "3877:1180:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "5200:847:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1155,
                            "name": "tradingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1142,
                            "src": "5290:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1156,
                            "name": "tradingTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "5319:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1157,
                            "name": "tradingForEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "5347:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5376:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1154,
                          "name": "TradeTokensForEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "5263:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokensForEth_$928_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeTokensForEth storage pointer)"
                          }
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5263:124:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                          "typeString": "struct Dex.TradeTokensForEth memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1149,
                          "name": "tradesOfTokensForEthOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "5207:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                          }
                        },
                        "id": 1152,
                        "indexExpression": {
                          "expression": {
                            "id": 1150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5239:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5243:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5239:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5207:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5251:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5207:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_ptr_$_t_struct$_TradeTokensForEth_$928_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeTokensForEth storage ref[] storage pointer,struct Dex.TradeTokensForEth storage ref)"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:181:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "5207:181:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5438:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5442:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5438:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1165,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "5456:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1168,
                            "indexExpression": {
                              "expression": {
                                "id": 1166,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5488:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5492:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5488:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5456:43:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5500:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5456:50:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5509:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5456:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1172,
                        "name": "tradingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "5518:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1173,
                        "name": "tradingTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "5545:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1174,
                        "name": "tradingForEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "5571:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1162,
                      "name": "EventAddToDexTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "5400:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5400:196:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1176,
                  "nodeType": "EmitStatement",
                  "src": "5395:201:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1177,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "5607:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1180,
                            "indexExpression": {
                              "expression": {
                                "id": 1178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5623:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5627:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5623:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5607:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5635:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1011,
                          "src": "5607:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5659:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5607:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1184,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "5676:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1187,
                            "indexExpression": {
                              "expression": {
                                "id": 1185,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5692:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5696:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5692:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5676:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5704:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1013,
                          "src": "5676:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5725:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5676:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5607:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1192,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "5742:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1195,
                          "indexExpression": {
                            "expression": {
                              "id": 1193,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5758:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5762:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5758:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5742:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5770:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1015,
                        "src": "5742:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5791:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5742:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5607:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1216,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "5920:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1219,
                          "indexExpression": {
                            "expression": {
                              "id": 1217,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5936:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5940:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5936:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5920:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5948:17:5",
                        "memberName": "tradeTokensForEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1013,
                        "src": "5920:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5969:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "5920:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1232,
                    "nodeType": "IfStatement",
                    "src": "5916:127:5",
                    "trueBody": {
                      "id": 1231,
                      "nodeType": "Block",
                      "src": "5976:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1223,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "5984:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1226,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1224,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6000:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6004:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6000:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5984:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "6012:17:5",
                              "memberName": "tradeTokensForEth",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1013,
                              "src": "5984:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6032:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "5984:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1230,
                          "nodeType": "ExpressionStatement",
                          "src": "5984:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1233,
                  "nodeType": "IfStatement",
                  "src": "5603:440:5",
                  "trueBody": {
                    "id": 1215,
                    "nodeType": "Block",
                    "src": "5798:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5827:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5831:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5827:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1200,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "5810:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5822:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5810:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5810:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1206,
                        "nodeType": "ExpressionStatement",
                        "src": "5810:28:5"
                      },
                      {
                        "expression": {
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1207,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "5850:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1210,
                              "indexExpression": {
                                "expression": {
                                  "id": 1208,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5866:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5870:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5866:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5850:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5878:17:5",
                            "memberName": "tradeTokensForEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1013,
                            "src": "5850:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5898:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5850:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:52:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7f1ca38b",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToDexForTradeWithEth",
            "nameLocation": "5070:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "tradingTokenAddress",
                  "nameLocation": "5113:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "5105:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5105:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "tradingTokenAmount",
                  "nameLocation": "5143:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "5138:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5138:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "tradingForEthAmount",
                  "nameLocation": "5172:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "5167:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5167:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5099:93:5"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5200:0:5"
            },
            "scope": 2391,
            "src": "5061:986:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "6201:898:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6216:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6220:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6216:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1247,
                          "name": "tradingEthAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "6229:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6216:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6208:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6208:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "6208:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1257,
                            "name": "tradingEthAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "6336:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1258,
                            "name": "tradingForTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "6362:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1259,
                            "name": "tradingForTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "6394:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6425:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1256,
                          "name": "TradeEthForTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "6309:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeEthForTokens_$937_storage_ptr_$",
                            "typeString": "type(struct Dex.TradeEthForTokens storage pointer)"
                          }
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6309:127:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                          "typeString": "struct Dex.TradeEthForTokens memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1251,
                          "name": "tradesOfEthForTokensOfAnAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1009,
                          "src": "6253:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                          }
                        },
                        "id": 1254,
                        "indexExpression": {
                          "expression": {
                            "id": 1252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6285:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6289:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6285:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6253:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6297:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6253:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_ptr_$_t_struct$_TradeEthForTokens_$937_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Dex.TradeEthForTokens storage ref[] storage pointer,struct Dex.TradeEthForTokens storage ref)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6253:184:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "6253:184:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6487:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6491:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6487:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1267,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "6505:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1270,
                            "indexExpression": {
                              "expression": {
                                "id": 1268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6537:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6541:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6537:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6505:43:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6549:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6505:50:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6558:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6505:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1274,
                        "name": "tradingEthAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "6567:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1275,
                        "name": "tradingForTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "6591:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1276,
                        "name": "tradingForTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "6621:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1264,
                      "name": "EventAddToDexTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "6449:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6449:199:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "EmitStatement",
                  "src": "6444:204:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1279,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "6659:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1282,
                            "indexExpression": {
                              "expression": {
                                "id": 1280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6675:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6679:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6675:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6659:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6687:20:5",
                          "memberName": "tradeTokensForTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1011,
                          "src": "6659:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6711:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6659:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1286,
                              "name": "dexUsersMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "6728:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                              }
                            },
                            "id": 1289,
                            "indexExpression": {
                              "expression": {
                                "id": 1287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6744:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6748:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6744:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6728:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                              "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6756:17:5",
                          "memberName": "tradeTokensForEth",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1013,
                          "src": "6728:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6777:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6728:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6659:123:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1294,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "6794:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1297,
                          "indexExpression": {
                            "expression": {
                              "id": 1295,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6810:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6814:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6810:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6794:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6822:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1015,
                        "src": "6794:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6843:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "6794:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6659:189:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1318,
                            "name": "dexUsersMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "6972:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                            }
                          },
                          "id": 1321,
                          "indexExpression": {
                            "expression": {
                              "id": 1319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6988:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6992:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6988:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6972:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                            "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                          }
                        },
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7000:17:5",
                        "memberName": "tradeEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1015,
                        "src": "6972:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7021:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "6972:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1334,
                    "nodeType": "IfStatement",
                    "src": "6968:127:5",
                    "trueBody": {
                      "id": 1333,
                      "nodeType": "Block",
                      "src": "7028:67:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1325,
                                  "name": "dexUsersMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "7036:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                    "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                  }
                                },
                                "id": 1328,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1326,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "7052:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7056:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7052:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7036:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                  "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "7064:17:5",
                              "memberName": "tradeEthForTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1015,
                              "src": "7036:45:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7084:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "7036:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1332,
                          "nodeType": "ExpressionStatement",
                          "src": "7036:52:5"
                        }
                      ]
                    }
                  },
                  "id": 1335,
                  "nodeType": "IfStatement",
                  "src": "6655:440:5",
                  "trueBody": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "6850:112:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1305,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6879:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6883:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6879:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1302,
                              "name": "dexUsersArr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "6862:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6874:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6862:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6862:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "6862:28:5"
                      },
                      {
                        "expression": {
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1309,
                                "name": "dexUsersMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "6902:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TradeCategoriesOfDexUser_$1016_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeCategoriesOfDexUser storage ref)"
                                }
                              },
                              "id": 1312,
                              "indexExpression": {
                                "expression": {
                                  "id": 1310,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6918:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6922:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6918:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6902:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeCategoriesOfDexUser_$1016_storage",
                                "typeString": "struct Dex.TradeCategoriesOfDexUser storage ref"
                              }
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6930:17:5",
                            "memberName": "tradeEthForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1015,
                            "src": "6902:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6950:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6902:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "6902:52:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a306802f",
            "id": 1337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEthToDexForTradeWithTokens",
            "nameLocation": "6060:29:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "tradingEthAmount",
                  "nameLocation": "6100:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "6095:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6095:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "tradingForTokenAddress",
                  "nameLocation": "6130:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "6122:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "tradingForTokenAmount",
                  "nameLocation": "6163:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "6158:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6158:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6089:96:5"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6201:0:5"
            },
            "scope": 2391,
            "src": "6051:1048:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1490,
              "nodeType": "Block",
              "src": "7174:1445:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1345,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1339,
                          "src": "7188:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7198:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7202:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7198:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7188:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7180:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7180:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "7180:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1352,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "7223:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1354,
                              "indexExpression": {
                                "id": 1353,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "7258:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7223:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1356,
                            "indexExpression": {
                              "id": 1355,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "7266:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7223:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7280:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 918,
                          "src": "7223:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7297:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7223:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7215:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7215:87:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "7215:87:5"
                },
                {
                  "assignments": [
                    1364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1364,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "7315:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1490,
                      "src": "7309:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1363,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1362,
                          "name": "ERC20",
                          "nameLocations": [
                            "7309:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "7309:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "7309:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1373,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1366,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "7336:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1368,
                            "indexExpression": {
                              "id": 1367,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7371:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7336:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1370,
                          "indexExpression": {
                            "id": 1369,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "7379:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7336:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7393:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "7336:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1365,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "7330:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7309:104:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1377,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "7445:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7453:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7457:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7453:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1380,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "7465:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1382,
                            "indexExpression": {
                              "id": 1381,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7500:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7465:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1384,
                          "indexExpression": {
                            "id": 1383,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "7508:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7465:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7522:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "7465:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1374,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "7419:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7432:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "7419:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7419:122:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1387,
                  "nodeType": "ExpressionStatement",
                  "src": "7419:122:5"
                },
                {
                  "assignments": [
                    1390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1390,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "7554:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1490,
                      "src": "7548:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1388,
                          "name": "ERC20",
                          "nameLocations": [
                            "7548:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "7548:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "7548:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1399,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1392,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "7578:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1394,
                            "indexExpression": {
                              "id": 1393,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "7613:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7578:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1396,
                          "indexExpression": {
                            "id": 1395,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "7621:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7578:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7635:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 914,
                        "src": "7578:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1391,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "7572:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7572:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7548:110:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1403,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7699:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7703:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7699:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1401,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1390,
                              "src": "7673:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7689:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "7673:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7673:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1406,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "7714:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1408,
                              "indexExpression": {
                                "id": 1407,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "7749:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7714:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1410,
                            "indexExpression": {
                              "id": 1409,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "7757:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7714:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7771:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 916,
                          "src": "7714:78:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7673:119:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6865726531",
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7794:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6",
                          "typeString": "literal_string \"here1\""
                        },
                        "value": "here1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e998cd0d2adf27997ca4bff6682fe1cd86d25f0d1ba5877b1897770b34c8e4a6",
                          "typeString": "literal_string \"here1\""
                        }
                      ],
                      "id": 1400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7665:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7665:137:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1415,
                  "nodeType": "ExpressionStatement",
                  "src": "7665:137:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1419,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7842:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7846:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7842:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1423,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "7862:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2391",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2391",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7854:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1421,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7854:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7854:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1417,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1390,
                              "src": "7816:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7832:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "7816:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7816:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1426,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "7872:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1428,
                              "indexExpression": {
                                "id": 1427,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "7907:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7872:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1430,
                            "indexExpression": {
                              "id": 1429,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "7915:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7872:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7929:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 916,
                          "src": "7872:78:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7816:134:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6865726532",
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7952:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640",
                          "typeString": "literal_string \"here2\""
                        },
                        "value": "here2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cad8396a41ab15cf67ff1d94eac13ad7450d1f2aea98b326b7b5c77c7e5f640",
                          "typeString": "literal_string \"here2\""
                        }
                      ],
                      "id": 1416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7808:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7808:152:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "7808:152:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7996:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8000:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7996:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1441,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "8008:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1442,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "8016:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1444,
                            "indexExpression": {
                              "id": 1443,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "8051:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8016:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1446,
                          "indexExpression": {
                            "id": 1445,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8059:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8016:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8073:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "8016:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1436,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "7967:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7983:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "7967:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7967:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "7967:128:5"
                },
                {
                  "expression": {
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1450,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "8102:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1453,
                          "indexExpression": {
                            "id": 1451,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "8137:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8102:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1454,
                        "indexExpression": {
                          "id": 1452,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "8145:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8102:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8159:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 918,
                      "src": "8102:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8175:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8102:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "8102:77:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1460,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "8224:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1461,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "8238:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1462,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "8258:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1464,
                            "indexExpression": {
                              "id": 1463,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "8293:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8258:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1466,
                          "indexExpression": {
                            "id": 1465,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8301:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8258:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8315:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "8258:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1468,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "8342:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1470,
                            "indexExpression": {
                              "id": 1469,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "8377:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8342:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1472,
                          "indexExpression": {
                            "id": 1471,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8385:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8342:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8399:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "8342:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1474,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "8425:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1476,
                            "indexExpression": {
                              "id": 1475,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "8460:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8425:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1478,
                          "indexExpression": {
                            "id": 1477,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8468:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8425:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8482:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 914,
                        "src": "8425:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1480,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "8512:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1482,
                            "indexExpression": {
                              "id": 1481,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "8547:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8512:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1484,
                          "indexExpression": {
                            "id": 1483,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "8555:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8512:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8569:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "8512:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1486,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8602:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1459,
                      "name": "EventTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "8191:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address,uint256,address)"
                      }
                    },
                    "id": 1488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8191:423:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1489,
                  "nodeType": "EmitStatement",
                  "src": "8186:428:5"
                }
              ]
            },
            "functionSelector": "6a3c34f1",
            "id": 1491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensFromTokens",
            "nameLocation": "7112:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7140:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1491,
                  "src": "7132:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7132:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "7153:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1491,
                  "src": "7148:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7148:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7131:35:5"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7174:0:5"
            },
            "scope": 2391,
            "src": "7103:1516:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1603,
              "nodeType": "Block",
              "src": "8698:978:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1499,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "8712:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1500,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8722:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8726:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8722:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8712:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8704:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8704:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "8704:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1506,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "8747:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1508,
                              "indexExpression": {
                                "id": 1507,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1493,
                                "src": "8779:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8747:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1510,
                            "indexExpression": {
                              "id": 1509,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "8787:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8747:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8801:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 927,
                          "src": "8747:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8818:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8747:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8739:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8739:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "8739:84:5"
                },
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "mutability": "mutable",
                      "name": "tradingErc20",
                      "nameLocation": "8836:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1603,
                      "src": "8830:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1517,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1516,
                          "name": "ERC20",
                          "nameLocations": [
                            "8830:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "8830:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "8830:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1527,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1520,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "8857:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1522,
                            "indexExpression": {
                              "id": 1521,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "8889:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8857:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1524,
                          "indexExpression": {
                            "id": 1523,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "8897:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8857:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8911:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 921,
                        "src": "8857:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1519,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "8851:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8851:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8830:101:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1531,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "8963:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1532,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8971:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8975:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8971:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1534,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "8983:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1536,
                            "indexExpression": {
                              "id": 1535,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "9015:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8983:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1538,
                          "indexExpression": {
                            "id": 1537,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "9023:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8983:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9037:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 923,
                        "src": "8983:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1528,
                        "name": "tradingErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "8937:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8950:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "8937:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8937:119:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "8937:119:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9071:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9075:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9071:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1545,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "9084:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1547,
                              "indexExpression": {
                                "id": 1546,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1493,
                                "src": "9116:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9084:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1549,
                            "indexExpression": {
                              "id": 1548,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "9124:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9084:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9138:19:5",
                          "memberName": "tradingForEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 925,
                          "src": "9084:73:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9071:86:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9063:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:95:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1553,
                  "nodeType": "ExpressionStatement",
                  "src": "9063:95:5"
                },
                {
                  "assignments": [
                    1555,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "9171:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1603,
                      "src": "9166:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1554,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9166:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1563,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9210:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1556,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "9180:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9187:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9180:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9199:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9203:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9199:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9180:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9180:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9165:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1565,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "9227:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9233:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9219:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9219:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1568,
                  "nodeType": "ExpressionStatement",
                  "src": "9219:37:5"
                },
                {
                  "expression": {
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1569,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "9263:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1572,
                          "indexExpression": {
                            "id": 1570,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "9295:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9263:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1573,
                        "indexExpression": {
                          "id": 1571,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1495,
                          "src": "9303:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9263:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1574,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9317:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 927,
                      "src": "9263:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9333:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9263:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "9263:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1579,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "9379:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1580,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1495,
                        "src": "9393:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1581,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "9413:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1583,
                            "indexExpression": {
                              "id": 1582,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "9445:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9413:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1585,
                          "indexExpression": {
                            "id": 1584,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "9453:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9413:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9467:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 921,
                        "src": "9413:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1587,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "9494:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1589,
                            "indexExpression": {
                              "id": 1588,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "9526:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9494:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1591,
                          "indexExpression": {
                            "id": 1590,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "9534:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9494:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9548:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 923,
                        "src": "9494:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1593,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "9574:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1595,
                            "indexExpression": {
                              "id": 1594,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "9606:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9574:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1597,
                          "indexExpression": {
                            "id": 1596,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "9614:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9574:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9628:19:5",
                        "memberName": "tradingForEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "9574:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9655:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9659:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9655:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1578,
                      "name": "EventTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "9349:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9349:322:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1602,
                  "nodeType": "EmitStatement",
                  "src": "9344:327:5"
                }
              ]
            },
            "functionSelector": "8c69cd84",
            "id": 1604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokensForEth",
            "nameLocation": "8632:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1493,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8656:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "8648:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "8669:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1604,
                  "src": "8664:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8664:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8647:35:5"
            },
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8698:0:5"
            },
            "scope": 2391,
            "src": "8623:1053:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1746,
              "nodeType": "Block",
              "src": "9755:1244:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1612,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1606,
                          "src": "9769:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1613,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9779:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9783:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9779:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9769:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9761:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9761:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1617,
                  "nodeType": "ExpressionStatement",
                  "src": "9761:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1619,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "9804:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1621,
                              "indexExpression": {
                                "id": 1620,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "9836:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9804:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1623,
                            "indexExpression": {
                              "id": 1622,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "9844:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9804:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9858:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 936,
                          "src": "9804:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9875:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9804:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9796:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9796:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1628,
                  "nodeType": "ExpressionStatement",
                  "src": "9796:84:5"
                },
                {
                  "assignments": [
                    1631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1631,
                      "mutability": "mutable",
                      "name": "tradingForErc20",
                      "nameLocation": "9893:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1746,
                      "src": "9887:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$651",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1630,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1629,
                          "name": "ERC20",
                          "nameLocations": [
                            "9887:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "9887:5:5"
                        },
                        "referencedDeclaration": 651,
                        "src": "9887:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1640,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1633,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "9917:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1635,
                            "indexExpression": {
                              "id": 1634,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "9949:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9917:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1637,
                          "indexExpression": {
                            "id": 1636,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "9957:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9917:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1638,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9971:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "9917:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1632,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "9911:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9911:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$651",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9887:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1644,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10034:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10038:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10034:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1642,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1631,
                              "src": "10008:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10024:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "10008:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10008:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1647,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "10049:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1649,
                              "indexExpression": {
                                "id": 1648,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "10081:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10049:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1651,
                            "indexExpression": {
                              "id": 1650,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "10089:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10049:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10103:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "10049:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10008:116:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10000:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10000:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "10000:125:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1659,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10166:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10170:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10166:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1663,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "10186:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dex_$2391",
                                    "typeString": "contract Dex"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dex_$2391",
                                    "typeString": "contract Dex"
                                  }
                                ],
                                "id": 1662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10178:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1661,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10178:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10178:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1657,
                              "name": "tradingForErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1631,
                              "src": "10140:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$651",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10156:9:5",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 278,
                            "src": "10140:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10140:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1666,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "10196:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1668,
                              "indexExpression": {
                                "id": 1667,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "10228:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10196:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1670,
                            "indexExpression": {
                              "id": 1669,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "10236:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10196:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10250:21:5",
                          "memberName": "tradingForTokenAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 934,
                          "src": "10196:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10140:131:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10132:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10132:140:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1674,
                  "nodeType": "ExpressionStatement",
                  "src": "10132:140:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10308:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10312:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10308:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1680,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "10320:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1681,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "10328:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1683,
                            "indexExpression": {
                              "id": 1682,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "10360:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10328:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1685,
                          "indexExpression": {
                            "id": 1684,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "10368:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10328:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10382:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 934,
                        "src": "10328:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1675,
                        "name": "tradingForErc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "10279:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$651",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10295:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "10279:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10279:125:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1688,
                  "nodeType": "ExpressionStatement",
                  "src": "10279:125:5"
                },
                {
                  "assignments": [
                    1690,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1690,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "10417:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1746,
                      "src": "10412:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10412:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1706,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10530:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1693,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10434:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10438:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10434:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10426:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10426:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10426:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10446:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "10426:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1697,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "10458:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1699,
                              "indexExpression": {
                                "id": 1698,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "10490:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10458:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1701,
                            "indexExpression": {
                              "id": 1700,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "10498:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10458:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10512:16:5",
                          "memberName": "tradingEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 930,
                          "src": "10458:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "10426:103:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10426:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10411:122:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1708,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1690,
                        "src": "10547:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10553:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10539:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:37:5"
                },
                {
                  "expression": {
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1712,
                            "name": "tradesOfEthForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "10583:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1715,
                          "indexExpression": {
                            "id": 1713,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1606,
                            "src": "10615:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10583:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1716,
                        "indexExpression": {
                          "id": 1714,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1608,
                          "src": "10623:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10583:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 1717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10637:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 936,
                      "src": "10583:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10653:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10583:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1720,
                  "nodeType": "ExpressionStatement",
                  "src": "10583:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1722,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "10699:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1723,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "10713:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1724,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "10733:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1726,
                            "indexExpression": {
                              "id": 1725,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "10765:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10733:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1728,
                          "indexExpression": {
                            "id": 1727,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "10773:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10733:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10787:16:5",
                        "memberName": "tradingEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "10733:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1730,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "10811:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1732,
                            "indexExpression": {
                              "id": 1731,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "10843:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10811:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1734,
                          "indexExpression": {
                            "id": 1733,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "10851:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10811:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10865:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "10811:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1736,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "10895:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1738,
                            "indexExpression": {
                              "id": 1737,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1606,
                              "src": "10927:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10895:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1740,
                          "indexExpression": {
                            "id": 1739,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "10935:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10895:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10949:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 934,
                        "src": "10895:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10978:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10982:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10978:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1721,
                      "name": "EventTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "10669:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,uint256,address)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10669:325:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "EmitStatement",
                  "src": "10664:330:5"
                }
              ]
            },
            "functionSelector": "1cdec042",
            "id": 1747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyEthForTokens",
            "nameLocation": "9689:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9713:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "9705:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9705:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "9726:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "9721:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9721:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9704:35:5"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9755:0:5"
            },
            "scope": 2391,
            "src": "9680:1319:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1810,
              "nodeType": "Block",
              "src": "11085:643:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1755,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11099:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11103:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11099:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1757,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1749,
                          "src": "11113:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11099:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11091:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11091:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1760,
                  "nodeType": "ExpressionStatement",
                  "src": "11091:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1762,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "11134:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1764,
                              "indexExpression": {
                                "id": 1763,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1749,
                                "src": "11169:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11134:42:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1766,
                            "indexExpression": {
                              "id": 1765,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1751,
                              "src": "11177:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11134:56:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref"
                            }
                          },
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11191:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 918,
                          "src": "11134:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11208:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11134:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11126:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11126:88:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1771,
                  "nodeType": "ExpressionStatement",
                  "src": "11126:88:5"
                },
                {
                  "expression": {
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1772,
                            "name": "tradesOfTokensForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "11221:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1775,
                          "indexExpression": {
                            "id": 1773,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "11256:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11221:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1776,
                        "indexExpression": {
                          "id": 1774,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1751,
                          "src": "11264:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11221:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                          "typeString": "struct Dex.TradeTokensForTokens storage ref"
                        }
                      },
                      "id": 1777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11278:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 918,
                      "src": "11221:70:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11294:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11221:77:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1780,
                  "nodeType": "ExpressionStatement",
                  "src": "11221:77:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1782,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "11351:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1783,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "11365:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1784,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "11385:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1786,
                            "indexExpression": {
                              "id": 1785,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "11420:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11385:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1788,
                          "indexExpression": {
                            "id": 1787,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "11428:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11385:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11442:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "11385:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1790,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "11469:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1792,
                            "indexExpression": {
                              "id": 1791,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "11504:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11469:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1794,
                          "indexExpression": {
                            "id": 1793,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "11512:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11469:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11526:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "11469:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1796,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "11552:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1798,
                            "indexExpression": {
                              "id": 1797,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "11587:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11552:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1800,
                          "indexExpression": {
                            "id": 1799,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "11595:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11552:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1801,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11609:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 914,
                        "src": "11552:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1802,
                              "name": "tradesOfTokensForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "11639:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1804,
                            "indexExpression": {
                              "id": 1803,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "11674:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11639:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1806,
                          "indexExpression": {
                            "id": 1805,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "11682:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11639:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                            "typeString": "struct Dex.TradeTokensForTokens storage ref"
                          }
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11696:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "11639:78:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1781,
                      "name": "EventCanceledTradeTokensForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "11310:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address,uint256)"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11310:413:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1809,
                  "nodeType": "EmitStatement",
                  "src": "11305:418:5"
                }
              ]
            },
            "functionSelector": "748d6a74",
            "id": 1811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithTokens",
            "nameLocation": "11012:30:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11051:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "11043:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11043:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "11064:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "11059:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11059:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11042:35:5"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11085:0:5"
            },
            "scope": 2391,
            "src": "11003:725:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "11811:536:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11825:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11829:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11825:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1821,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1813,
                          "src": "11839:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11825:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11817:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11817:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "11817:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1826,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "11860:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 1828,
                              "indexExpression": {
                                "id": 1827,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1813,
                                "src": "11892:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11860:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 1830,
                            "indexExpression": {
                              "id": 1829,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "11900:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11860:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref"
                            }
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11914:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 927,
                          "src": "11860:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11931:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11860:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11852:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11852:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "11852:85:5"
                },
                {
                  "expression": {
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1836,
                            "name": "tradesOfTokensForEthOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "11944:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                            }
                          },
                          "id": 1839,
                          "indexExpression": {
                            "id": 1837,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "11976:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11944:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                          }
                        },
                        "id": 1840,
                        "indexExpression": {
                          "id": 1838,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "11984:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11944:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                          "typeString": "struct Dex.TradeTokensForEth storage ref"
                        }
                      },
                      "id": 1841,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11998:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 927,
                      "src": "11944:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12014:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11944:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1844,
                  "nodeType": "ExpressionStatement",
                  "src": "11944:74:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1846,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "12068:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1847,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1815,
                        "src": "12082:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1848,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "12102:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1850,
                            "indexExpression": {
                              "id": 1849,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "12134:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12102:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1852,
                          "indexExpression": {
                            "id": 1851,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "12142:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12102:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12156:19:5",
                        "memberName": "tradingTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 921,
                        "src": "12102:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1854,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "12183:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1856,
                            "indexExpression": {
                              "id": 1855,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "12215:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12183:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1858,
                          "indexExpression": {
                            "id": 1857,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "12223:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12183:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12237:18:5",
                        "memberName": "tradingTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 923,
                        "src": "12183:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1860,
                              "name": "tradesOfTokensForEthOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "12263:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                              }
                            },
                            "id": 1862,
                            "indexExpression": {
                              "id": 1861,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "12295:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12263:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                            }
                          },
                          "id": 1864,
                          "indexExpression": {
                            "id": 1863,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "12303:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12263:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                            "typeString": "struct Dex.TradeTokensForEth storage ref"
                          }
                        },
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12317:19:5",
                        "memberName": "tradingForEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "12263:73:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1845,
                      "name": "EventCanceledTradeTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "12030:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12030:312:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "EmitStatement",
                  "src": "12025:317:5"
                }
              ]
            },
            "functionSelector": "59560382",
            "id": 1869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForTokensWithEth",
            "nameLocation": "11741:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11777:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "11769:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "11790:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "11785:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11785:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11768:35:5"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11811:0:5"
            },
            "scope": 2391,
            "src": "11732:615:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1949,
              "nodeType": "Block",
              "src": "12438:711:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1877,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12452:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12456:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12452:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1879,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1871,
                          "src": "12466:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12452:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12444:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12444:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "12444:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1884,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "12487:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1886,
                              "indexExpression": {
                                "id": 1885,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1871,
                                "src": "12519:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12487:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1888,
                            "indexExpression": {
                              "id": 1887,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1873,
                              "src": "12527:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12487:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1889,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12541:13:5",
                          "memberName": "alreadyTraded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 936,
                          "src": "12487:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12558:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "12487:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12479:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12479:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1893,
                  "nodeType": "ExpressionStatement",
                  "src": "12479:85:5"
                },
                {
                  "expression": {
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1894,
                            "name": "tradesOfEthForTokensOfAnAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "12571:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                            }
                          },
                          "id": 1897,
                          "indexExpression": {
                            "id": 1895,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "12603:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12571:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                          }
                        },
                        "id": 1898,
                        "indexExpression": {
                          "id": 1896,
                          "name": "indexOfTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1873,
                          "src": "12611:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12571:53:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                          "typeString": "struct Dex.TradeEthForTokens storage ref"
                        }
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12625:13:5",
                      "memberName": "alreadyTraded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 936,
                      "src": "12571:67:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12641:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12571:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "12571:74:5"
                },
                {
                  "assignments": [
                    1904,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1904,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "12658:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1949,
                      "src": "12653:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1903,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12653:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1920,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12771:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12675:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12679:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12675:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12667:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1905,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12667:8:5",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12667:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12687:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "12667:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1911,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "12699:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1913,
                              "indexExpression": {
                                "id": 1912,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1871,
                                "src": "12731:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12699:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1915,
                            "indexExpression": {
                              "id": 1914,
                              "name": "indexOfTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1873,
                              "src": "12739:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12699:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref"
                            }
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12753:16:5",
                          "memberName": "tradingEthAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 930,
                          "src": "12699:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "12667:103:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12667:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12652:122:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1922,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1904,
                        "src": "12788:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12794:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12780:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12780:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1925,
                  "nodeType": "ExpressionStatement",
                  "src": "12780:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1927,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "12867:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1928,
                        "name": "indexOfTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1873,
                        "src": "12881:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1929,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "12901:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1931,
                            "indexExpression": {
                              "id": 1930,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "12933:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12901:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1933,
                          "indexExpression": {
                            "id": 1932,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "12941:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12901:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12955:16:5",
                        "memberName": "tradingEthAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "12901:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1935,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "12979:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1937,
                            "indexExpression": {
                              "id": 1936,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "13011:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12979:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1939,
                          "indexExpression": {
                            "id": 1938,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "13019:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12979:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13033:22:5",
                        "memberName": "tradingForTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 932,
                        "src": "12979:76:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1941,
                              "name": "tradesOfEthForTokensOfAnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "13063:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                              }
                            },
                            "id": 1943,
                            "indexExpression": {
                              "id": 1942,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "13095:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13063:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                              "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                            }
                          },
                          "id": 1945,
                          "indexExpression": {
                            "id": 1944,
                            "name": "indexOfTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "13103:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13063:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                            "typeString": "struct Dex.TradeEthForTokens storage ref"
                          }
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13117:21:5",
                        "memberName": "tradingForTokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 934,
                        "src": "13063:75:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1926,
                      "name": "EventCanceledTradeEthForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "12829:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12829:315:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1948,
                  "nodeType": "EmitStatement",
                  "src": "12824:320:5"
                }
              ]
            },
            "functionSelector": "e39c40fc",
            "id": 1950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTradeForEthWithTokens",
            "nameLocation": "12360:27:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12396:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "12388:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12388:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "indexOfTrade",
                  "nameLocation": "12409:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1950,
                  "src": "12404:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12404:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12387:35:5"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12438:0:5"
            },
            "scope": 2391,
            "src": "12351:798:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2363,
              "nodeType": "Block",
              "src": "13216:3682:5",
              "statements": [
                {
                  "assignments": [
                    1957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1957,
                      "mutability": "mutable",
                      "name": "amountOfTrades",
                      "nameLocation": "13228:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "13223:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1956,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13223:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1959,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13245:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13223:23:5"
                },
                {
                  "body": {
                    "id": 1994,
                    "nodeType": "Block",
                    "src": "13299:153:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1992,
                          "nodeType": "Block",
                          "src": "13392:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1986,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1957,
                                  "src": "13402:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1987,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1957,
                                    "src": "13419:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1988,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13436:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "13419:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13402:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1991,
                              "nodeType": "ExpressionStatement",
                              "src": "13402:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1975,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "13324:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1976,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "13328:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 1980,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1977,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "13363:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1979,
                                "indexExpression": {
                                  "id": 1978,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1961,
                                  "src": "13375:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13363:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13328:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 1981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13379:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13328:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13324:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1993,
                        "initializationExpression": {
                          "assignments": [
                            1972
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1972,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "13317:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1993,
                              "src": "13312:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1971,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "13312:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1974,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13321:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13312:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13387:3:5",
                            "subExpression": {
                              "id": 1983,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1972,
                              "src": "13387:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1985,
                          "nodeType": "ExpressionStatement",
                          "src": "13387:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "13307:139:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1964,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1961,
                      "src": "13270:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1965,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "13274:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13286:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13274:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13270:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1995,
                  "initializationExpression": {
                    "assignments": [
                      1961
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1961,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13263:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1995,
                        "src": "13258:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13258:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1963,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13267:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13258:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13294:3:5",
                      "subExpression": {
                        "id": 1968,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "13294:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1970,
                    "nodeType": "ExpressionStatement",
                    "src": "13294:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "13253:199:5"
                },
                {
                  "assignments": [
                    2000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2000,
                      "mutability": "mutable",
                      "name": "tradeTokensForTokensResultArr",
                      "nameLocation": "13495:29:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "13458:66:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1998,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1997,
                            "name": "TradeTokensForTokensForCall",
                            "nameLocations": [
                              "13458:27:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 952,
                            "src": "13458:27:5"
                          },
                          "referencedDeclaration": 952,
                          "src": "13458:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                          }
                        },
                        "id": 1999,
                        "nodeType": "ArrayTypeName",
                        "src": "13458:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2007,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2005,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "13561:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13527:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForTokensForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2002,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2001,
                            "name": "TradeTokensForTokensForCall",
                            "nameLocations": [
                              "13531:27:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 952,
                            "src": "13531:27:5"
                          },
                          "referencedDeclaration": 952,
                          "src": "13531:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForTokensForCall"
                          }
                        },
                        "id": 2003,
                        "nodeType": "ArrayTypeName",
                        "src": "13531:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                        }
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13527:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13458:118:5"
                },
                {
                  "assignments": [
                    2009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2009,
                      "mutability": "mutable",
                      "name": "indexOfResultArr",
                      "nameLocation": "13588:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "13583:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2008,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13583:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2011,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13607:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13583:25:5"
                },
                {
                  "body": {
                    "id": 2083,
                    "nodeType": "Block",
                    "src": "13661:770:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2081,
                          "nodeType": "Block",
                          "src": "13754:671:5",
                          "statements": [
                            {
                              "assignments": [
                                2040
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2040,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForTokens",
                                  "nameLocation": "13792:20:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2081,
                                  "src": "13764:48:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokens"
                                  },
                                  "typeName": {
                                    "id": 2039,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2038,
                                      "name": "TradeTokensForTokens",
                                      "nameLocations": [
                                        "13764:20:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 919,
                                      "src": "13764:20:5"
                                    },
                                    "referencedDeclaration": 919,
                                    "src": "13764:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokens"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2048,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2041,
                                    "name": "tradesOfTokensForTokensOfAnAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 997,
                                    "src": "13815:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2045,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2042,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "13850:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2044,
                                    "indexExpression": {
                                      "id": 2043,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "13862:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13850:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13815:50:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                    "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                                  }
                                },
                                "id": 2047,
                                "indexExpression": {
                                  "id": 2046,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2024,
                                  "src": "13866:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13815:53:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_storage",
                                  "typeString": "struct Dex.TradeTokensForTokens storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13764:104:5"
                            },
                            {
                              "assignments": [
                                2051
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2051,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForTokensForCall",
                                  "nameLocation": "13913:27:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2081,
                                  "src": "13878:62:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall"
                                  },
                                  "typeName": {
                                    "id": 2050,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2049,
                                      "name": "TradeTokensForTokensForCall",
                                      "nameLocations": [
                                        "13878:27:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 952,
                                      "src": "13878:27:5"
                                    },
                                    "referencedDeclaration": 952,
                                    "src": "13878:27:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2068,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2053,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "13983:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2055,
                                    "indexExpression": {
                                      "id": 2054,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "13995:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13983:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2056,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2024,
                                    "src": "14009:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2057,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2040,
                                      "src": "14022:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2058,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14043:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 910,
                                    "src": "14022:40:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2059,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2040,
                                      "src": "14074:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2060,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14095:18:5",
                                    "memberName": "tradingTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 912,
                                    "src": "14074:39:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2061,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2040,
                                      "src": "14125:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2062,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14146:22:5",
                                    "memberName": "tradingForTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 914,
                                    "src": "14125:43:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2063,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2040,
                                      "src": "14180:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2064,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14201:21:5",
                                    "memberName": "tradingForTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 916,
                                    "src": "14180:42:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2065,
                                      "name": "tradeTokensForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2040,
                                      "src": "14234:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForTokens_$919_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForTokens memory"
                                      }
                                    },
                                    "id": 2066,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14255:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 918,
                                    "src": "14234:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2052,
                                  "name": "TradeTokensForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "13943:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_TradeTokensForTokensForCall_$952_storage_ptr_$",
                                    "typeString": "type(struct Dex.TradeTokensForTokensForCall storage pointer)"
                                  }
                                },
                                "id": 2067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13943:335:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13878:400:5"
                            },
                            {
                              "expression": {
                                "id": 2073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2069,
                                    "name": "tradeTokensForTokensResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2000,
                                    "src": "14289:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                                    }
                                  },
                                  "id": 2071,
                                  "indexExpression": {
                                    "id": 2070,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "14319:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14289:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2072,
                                  "name": "tradeTokensForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2051,
                                  "src": "14339:27:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                  }
                                },
                                "src": "14289:77:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForTokensForCall memory"
                                }
                              },
                              "id": 2074,
                              "nodeType": "ExpressionStatement",
                              "src": "14289:77:5"
                            },
                            {
                              "expression": {
                                "id": 2079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2075,
                                  "name": "indexOfResultArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2009,
                                  "src": "14377:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2076,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "14396:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14415:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "14396:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14377:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2080,
                              "nodeType": "ExpressionStatement",
                              "src": "14377:39:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2027,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2024,
                            "src": "13686:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2028,
                                "name": "tradesOfTokensForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "13690:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2032,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2029,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "13725:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2031,
                                "indexExpression": {
                                  "id": 2030,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2013,
                                  "src": "13737:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13725:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13690:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokens_$919_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13741:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13690:57:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13686:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2082,
                        "initializationExpression": {
                          "assignments": [
                            2024
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2024,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "13679:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2082,
                              "src": "13674:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2023,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "13674:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2026,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13683:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13674:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13749:3:5",
                            "subExpression": {
                              "id": 2035,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2024,
                              "src": "13749:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2037,
                          "nodeType": "ExpressionStatement",
                          "src": "13749:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "13669:756:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2016,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "13632:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2017,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "13636:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13648:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13636:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13632:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2084,
                  "initializationExpression": {
                    "assignments": [
                      2013
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2013,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13625:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2084,
                        "src": "13620:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2012,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13620:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2015,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13629:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13620:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13656:3:5",
                      "subExpression": {
                        "id": 2020,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "13656:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2022,
                    "nodeType": "ExpressionStatement",
                    "src": "13656:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "13615:816:5"
                },
                {
                  "expression": {
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2085,
                      "name": "amountOfTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1957,
                      "src": "14437:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14454:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14437:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "14437:18:5"
                },
                {
                  "body": {
                    "id": 2123,
                    "nodeType": "Block",
                    "src": "14508:150:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2121,
                          "nodeType": "Block",
                          "src": "14598:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2115,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1957,
                                  "src": "14608:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2116,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1957,
                                    "src": "14625:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14642:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "14625:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14608:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2120,
                              "nodeType": "ExpressionStatement",
                              "src": "14608:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2104,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2101,
                            "src": "14533:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2105,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "14537:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 2109,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2106,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "14569:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2108,
                                "indexExpression": {
                                  "id": 2107,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2090,
                                  "src": "14581:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14569:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14537:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14585:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14537:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14533:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2122,
                        "initializationExpression": {
                          "assignments": [
                            2101
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2101,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "14526:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2122,
                              "src": "14521:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2100,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "14521:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2103,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14530:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14521:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14593:3:5",
                            "subExpression": {
                              "id": 2112,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "14593:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2114,
                          "nodeType": "ExpressionStatement",
                          "src": "14593:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "14516:136:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2093,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2090,
                      "src": "14479:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2094,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "14483:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14495:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14483:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14479:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2124,
                  "initializationExpression": {
                    "assignments": [
                      2090
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2090,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14472:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2124,
                        "src": "14467:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2089,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14467:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2092,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14476:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14467:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14503:3:5",
                      "subExpression": {
                        "id": 2097,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "14503:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2099,
                    "nodeType": "ExpressionStatement",
                    "src": "14503:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "14462:196:5"
                },
                {
                  "assignments": [
                    2129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2129,
                      "mutability": "mutable",
                      "name": "tradeTokensForEthResultArr",
                      "nameLocation": "14698:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "14664:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2127,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2126,
                            "name": "TradeTokensForEthForCall",
                            "nameLocations": [
                              "14664:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 965,
                            "src": "14664:24:5"
                          },
                          "referencedDeclaration": 965,
                          "src": "14664:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall"
                          }
                        },
                        "id": 2128,
                        "nodeType": "ArrayTypeName",
                        "src": "14664:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEthForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2134,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "14758:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14727:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeTokensForEthForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2131,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2130,
                            "name": "TradeTokensForEthForCall",
                            "nameLocations": [
                              "14731:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 965,
                            "src": "14731:24:5"
                          },
                          "referencedDeclaration": 965,
                          "src": "14731:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_storage_ptr",
                            "typeString": "struct Dex.TradeTokensForEthForCall"
                          }
                        },
                        "id": 2132,
                        "nodeType": "ArrayTypeName",
                        "src": "14731:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeTokensForEthForCall[]"
                        }
                      }
                    },
                    "id": 2135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14727:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14664:109:5"
                },
                {
                  "expression": {
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2137,
                      "name": "indexOfResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "14780:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14799:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14780:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "14780:20:5"
                },
                {
                  "body": {
                    "id": 2210,
                    "nodeType": "Block",
                    "src": "14853:673:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2208,
                          "nodeType": "Block",
                          "src": "14943:577:5",
                          "statements": [
                            {
                              "assignments": [
                                2169
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2169,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForEth",
                                  "nameLocation": "14978:17:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2208,
                                  "src": "14953:42:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForEth"
                                  },
                                  "typeName": {
                                    "id": 2168,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2167,
                                      "name": "TradeTokensForEth",
                                      "nameLocations": [
                                        "14953:17:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 928,
                                      "src": "14953:17:5"
                                    },
                                    "referencedDeclaration": 928,
                                    "src": "14953:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForEth"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2177,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2170,
                                    "name": "tradesOfTokensForEthOfAnAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1003,
                                    "src": "14998:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2174,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2171,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "15030:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2173,
                                    "indexExpression": {
                                      "id": 2172,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2142,
                                      "src": "15042:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15030:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14998:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                    "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                                  }
                                },
                                "id": 2176,
                                "indexExpression": {
                                  "id": 2175,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2153,
                                  "src": "15046:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14998:50:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEth_$928_storage",
                                  "typeString": "struct Dex.TradeTokensForEth storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14953:95:5"
                            },
                            {
                              "assignments": [
                                2180
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2180,
                                  "mutability": "mutable",
                                  "name": "tradeTokensForEthForCall",
                                  "nameLocation": "15090:24:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2208,
                                  "src": "15058:56:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForEthForCall"
                                  },
                                  "typeName": {
                                    "id": 2179,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2178,
                                      "name": "TradeTokensForEthForCall",
                                      "nameLocations": [
                                        "15058:24:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 965,
                                      "src": "15058:24:5"
                                    },
                                    "referencedDeclaration": 965,
                                    "src": "15058:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_storage_ptr",
                                      "typeString": "struct Dex.TradeTokensForEthForCall"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2195,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2182,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "15154:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2184,
                                    "indexExpression": {
                                      "id": 2183,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2142,
                                      "src": "15166:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15154:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2185,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2153,
                                    "src": "15180:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2186,
                                      "name": "tradeTokensForEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "15193:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 2187,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15211:19:5",
                                    "memberName": "tradingTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 921,
                                    "src": "15193:37:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2188,
                                      "name": "tradeTokensForEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "15242:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 2189,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15260:18:5",
                                    "memberName": "tradingTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 923,
                                    "src": "15242:36:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2190,
                                      "name": "tradeTokensForEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "15290:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 2191,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15308:19:5",
                                    "memberName": "tradingForEthAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 925,
                                    "src": "15290:37:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2192,
                                      "name": "tradeTokensForEth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "15339:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeTokensForEth_$928_memory_ptr",
                                        "typeString": "struct Dex.TradeTokensForEth memory"
                                      }
                                    },
                                    "id": 2193,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15357:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 927,
                                    "src": "15339:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2181,
                                  "name": "TradeTokensForEthForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 965,
                                  "src": "15117:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_TradeTokensForEthForCall_$965_storage_ptr_$",
                                    "typeString": "type(struct Dex.TradeTokensForEthForCall storage pointer)"
                                  }
                                },
                                "id": 2194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15117:263:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15058:322:5"
                            },
                            {
                              "expression": {
                                "id": 2200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2196,
                                    "name": "tradeTokensForEthResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2129,
                                    "src": "15391:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                                    }
                                  },
                                  "id": 2198,
                                  "indexExpression": {
                                    "id": 2197,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "15418:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15391:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2199,
                                  "name": "tradeTokensForEthForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2180,
                                  "src": "15438:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                                    "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                  }
                                },
                                "src": "15391:71:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_memory_ptr",
                                  "typeString": "struct Dex.TradeTokensForEthForCall memory"
                                }
                              },
                              "id": 2201,
                              "nodeType": "ExpressionStatement",
                              "src": "15391:71:5"
                            },
                            {
                              "expression": {
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2202,
                                  "name": "indexOfResultArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2009,
                                  "src": "15472:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2203,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "15491:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15510:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "15491:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15472:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2207,
                              "nodeType": "ExpressionStatement",
                              "src": "15472:39:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2156,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "14878:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2157,
                                "name": "tradesOfTokensForEthOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "14882:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeTokensForEth storage ref[] storage ref)"
                                }
                              },
                              "id": 2161,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2158,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "14914:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2160,
                                "indexExpression": {
                                  "id": 2159,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2142,
                                  "src": "14926:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14914:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14882:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeTokensForEth_$928_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeTokensForEth storage ref[] storage ref"
                              }
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14930:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14882:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14878:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2209,
                        "initializationExpression": {
                          "assignments": [
                            2153
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2153,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "14871:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2209,
                              "src": "14866:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2152,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "14866:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2155,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14875:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14866:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14938:3:5",
                            "subExpression": {
                              "id": 2164,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2153,
                              "src": "14938:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2166,
                          "nodeType": "ExpressionStatement",
                          "src": "14938:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "14861:659:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2145,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2142,
                      "src": "14824:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2146,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "14828:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14840:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14828:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14824:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2211,
                  "initializationExpression": {
                    "assignments": [
                      2142
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2142,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14817:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2211,
                        "src": "14812:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2141,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14812:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2144,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14821:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14812:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14848:3:5",
                      "subExpression": {
                        "id": 2149,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "14848:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2151,
                    "nodeType": "ExpressionStatement",
                    "src": "14848:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "14807:719:5"
                },
                {
                  "expression": {
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2212,
                      "name": "amountOfTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1957,
                      "src": "15532:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15549:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15532:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2215,
                  "nodeType": "ExpressionStatement",
                  "src": "15532:18:5"
                },
                {
                  "body": {
                    "id": 2250,
                    "nodeType": "Block",
                    "src": "15603:150:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2248,
                          "nodeType": "Block",
                          "src": "15693:54:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 2246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2242,
                                  "name": "amountOfTrades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1957,
                                  "src": "15703:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2243,
                                    "name": "amountOfTrades",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1957,
                                    "src": "15720:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15737:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "15720:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15703:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2247,
                              "nodeType": "ExpressionStatement",
                              "src": "15703:35:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2231,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2228,
                            "src": "15628:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2232,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "15632:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2236,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2233,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "15664:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2235,
                                "indexExpression": {
                                  "id": 2234,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "15676:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15664:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15632:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15680:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15632:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15628:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2249,
                        "initializationExpression": {
                          "assignments": [
                            2228
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2228,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "15621:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2249,
                              "src": "15616:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2227,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15616:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2230,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15625:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15616:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15688:3:5",
                            "subExpression": {
                              "id": 2239,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "15688:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2241,
                          "nodeType": "ExpressionStatement",
                          "src": "15688:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "15611:136:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2217,
                      "src": "15574:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2221,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "15578:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15590:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15578:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15574:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2251,
                  "initializationExpression": {
                    "assignments": [
                      2217
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2217,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15567:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "15562:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2216,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15562:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2219,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15571:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15562:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15598:3:5",
                      "subExpression": {
                        "id": 2224,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2217,
                        "src": "15598:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2226,
                    "nodeType": "ExpressionStatement",
                    "src": "15598:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "15557:196:5"
                },
                {
                  "assignments": [
                    2256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2256,
                      "mutability": "mutable",
                      "name": "tradeEthForTokensResultArr",
                      "nameLocation": "15793:26:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "15759:60:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2254,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2253,
                            "name": "TradeEthForTokensForCall",
                            "nameLocations": [
                              "15759:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 978,
                            "src": "15759:24:5"
                          },
                          "referencedDeclaration": 978,
                          "src": "15759:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall"
                          }
                        },
                        "id": 2255,
                        "nodeType": "ArrayTypeName",
                        "src": "15759:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeEthForTokensForCall[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2261,
                        "name": "amountOfTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "15853:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15822:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Dex.TradeEthForTokensForCall memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2258,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2257,
                            "name": "TradeEthForTokensForCall",
                            "nameLocations": [
                              "15826:24:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 978,
                            "src": "15826:24:5"
                          },
                          "referencedDeclaration": 978,
                          "src": "15826:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_storage_ptr",
                            "typeString": "struct Dex.TradeEthForTokensForCall"
                          }
                        },
                        "id": 2259,
                        "nodeType": "ArrayTypeName",
                        "src": "15826:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.TradeEthForTokensForCall[]"
                        }
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15822:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15759:109:5"
                },
                {
                  "expression": {
                    "id": 2266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2264,
                      "name": "indexOfResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "15875:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15894:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15875:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2267,
                  "nodeType": "ExpressionStatement",
                  "src": "15875:20:5"
                },
                {
                  "body": {
                    "id": 2337,
                    "nodeType": "Block",
                    "src": "15948:676:5",
                    "statements": [
                      {
                        "body": {
                          "id": 2335,
                          "nodeType": "Block",
                          "src": "16038:580:5",
                          "statements": [
                            {
                              "assignments": [
                                2296
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2296,
                                  "mutability": "mutable",
                                  "name": "tradeEthForTokens",
                                  "nameLocation": "16073:17:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2335,
                                  "src": "16048:42:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                                    "typeString": "struct Dex.TradeEthForTokens"
                                  },
                                  "typeName": {
                                    "id": 2295,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2294,
                                      "name": "TradeEthForTokens",
                                      "nameLocations": [
                                        "16048:17:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 937,
                                      "src": "16048:17:5"
                                    },
                                    "referencedDeclaration": 937,
                                    "src": "16048:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage_ptr",
                                      "typeString": "struct Dex.TradeEthForTokens"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2304,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 2297,
                                    "name": "tradesOfEthForTokensOfAnAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1009,
                                    "src": "16093:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 2301,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2298,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "16125:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2300,
                                    "indexExpression": {
                                      "id": 2299,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2269,
                                      "src": "16137:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16125:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16093:47:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                    "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                                  }
                                },
                                "id": 2303,
                                "indexExpression": {
                                  "id": 2302,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2280,
                                  "src": "16141:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16093:50:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokens_$937_storage",
                                  "typeString": "struct Dex.TradeEthForTokens storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16048:95:5"
                            },
                            {
                              "assignments": [
                                2307
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2307,
                                  "mutability": "mutable",
                                  "name": "tradeEthForTokensForCall",
                                  "nameLocation": "16185:24:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2335,
                                  "src": "16153:56:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                                    "typeString": "struct Dex.TradeEthForTokensForCall"
                                  },
                                  "typeName": {
                                    "id": 2306,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2305,
                                      "name": "TradeEthForTokensForCall",
                                      "nameLocations": [
                                        "16153:24:5"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 978,
                                      "src": "16153:24:5"
                                    },
                                    "referencedDeclaration": 978,
                                    "src": "16153:24:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_storage_ptr",
                                      "typeString": "struct Dex.TradeEthForTokensForCall"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2322,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2309,
                                      "name": "dexUsersArr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1019,
                                      "src": "16249:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2311,
                                    "indexExpression": {
                                      "id": 2310,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2269,
                                      "src": "16261:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16249:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2312,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2280,
                                    "src": "16275:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2313,
                                      "name": "tradeEthForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2296,
                                      "src": "16288:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokens memory"
                                      }
                                    },
                                    "id": 2314,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16306:16:5",
                                    "memberName": "tradingEthAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 930,
                                    "src": "16288:34:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2315,
                                      "name": "tradeEthForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2296,
                                      "src": "16334:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokens memory"
                                      }
                                    },
                                    "id": 2316,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16352:22:5",
                                    "memberName": "tradingForTokenAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 932,
                                    "src": "16334:40:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2317,
                                      "name": "tradeEthForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2296,
                                      "src": "16386:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokens memory"
                                      }
                                    },
                                    "id": 2318,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16404:21:5",
                                    "memberName": "tradingForTokenAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 934,
                                    "src": "16386:39:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2319,
                                      "name": "tradeEthForTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2296,
                                      "src": "16437:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeEthForTokens_$937_memory_ptr",
                                        "typeString": "struct Dex.TradeEthForTokens memory"
                                      }
                                    },
                                    "id": 2320,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16455:13:5",
                                    "memberName": "alreadyTraded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 936,
                                    "src": "16437:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2308,
                                  "name": "TradeEthForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "16212:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_TradeEthForTokensForCall_$978_storage_ptr_$",
                                    "typeString": "type(struct Dex.TradeEthForTokensForCall storage pointer)"
                                  }
                                },
                                "id": 2321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16212:266:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16153:325:5"
                            },
                            {
                              "expression": {
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2323,
                                    "name": "tradeEthForTokensResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2256,
                                    "src": "16489:26:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                                    }
                                  },
                                  "id": 2325,
                                  "indexExpression": {
                                    "id": 2324,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "16516:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16489:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                                    "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2326,
                                  "name": "tradeEthForTokensForCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2307,
                                  "src": "16536:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                                    "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                  }
                                },
                                "src": "16489:71:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_memory_ptr",
                                  "typeString": "struct Dex.TradeEthForTokensForCall memory"
                                }
                              },
                              "id": 2328,
                              "nodeType": "ExpressionStatement",
                              "src": "16489:71:5"
                            },
                            {
                              "expression": {
                                "id": 2333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2329,
                                  "name": "indexOfResultArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2009,
                                  "src": "16570:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2330,
                                    "name": "indexOfResultArr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2009,
                                    "src": "16589:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16608:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16589:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16570:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2334,
                              "nodeType": "ExpressionStatement",
                              "src": "16570:39:5"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2283,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "15973:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2284,
                                "name": "tradesOfEthForTokensOfAnAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "15977:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Dex.TradeEthForTokens storage ref[] storage ref)"
                                }
                              },
                              "id": 2288,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2285,
                                  "name": "dexUsersArr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1019,
                                  "src": "16009:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2287,
                                "indexExpression": {
                                  "id": 2286,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2269,
                                  "src": "16021:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16009:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15977:47:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TradeEthForTokens_$937_storage_$dyn_storage",
                                "typeString": "struct Dex.TradeEthForTokens storage ref[] storage ref"
                              }
                            },
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16025:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15977:54:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15973:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2336,
                        "initializationExpression": {
                          "assignments": [
                            2280
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2280,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "15966:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 2336,
                              "src": "15961:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2279,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15961:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2282,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15970:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15961:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16033:3:5",
                            "subExpression": {
                              "id": 2291,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "16033:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2293,
                          "nodeType": "ExpressionStatement",
                          "src": "16033:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "15956:662:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2272,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2269,
                      "src": "15919:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2273,
                        "name": "dexUsersArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "15923:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15935:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15923:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15919:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2338,
                  "initializationExpression": {
                    "assignments": [
                      2269
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2269,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15912:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2338,
                        "src": "15907:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2268,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15907:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2271,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15916:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15907:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15943:3:5",
                      "subExpression": {
                        "id": 2276,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "15943:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2278,
                    "nodeType": "ExpressionStatement",
                    "src": "15943:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "15902:722:5"
                },
                {
                  "assignments": [
                    2341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2341,
                      "mutability": "mutable",
                      "name": "allTrades",
                      "nameLocation": "16647:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "16630:26:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                        "typeString": "struct Dex.AllTrades"
                      },
                      "typeName": {
                        "id": 2340,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2339,
                          "name": "AllTrades",
                          "nameLocations": [
                            "16630:9:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 991,
                          "src": "16630:9:5"
                        },
                        "referencedDeclaration": 991,
                        "src": "16630:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTrades_$991_storage_ptr",
                          "typeString": "struct Dex.AllTrades"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2342,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16630:26:5"
                },
                {
                  "expression": {
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2343,
                        "name": "allTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2341,
                        "src": "16663:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                          "typeString": "struct Dex.AllTrades memory"
                        }
                      },
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16673:27:5",
                      "memberName": "tradeTokensForTokensForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 982,
                      "src": "16663:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2346,
                      "name": "tradeTokensForTokensResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "16703:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                      }
                    },
                    "src": "16663:69:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall memory[] memory"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "16663:69:5"
                },
                {
                  "expression": {
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2349,
                        "name": "allTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2341,
                        "src": "16738:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                          "typeString": "struct Dex.AllTrades memory"
                        }
                      },
                      "id": 2351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16748:24:5",
                      "memberName": "tradeTokensForEthForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "16738:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2352,
                      "name": "tradeTokensForEthResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "16775:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                      }
                    },
                    "src": "16738:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall memory[] memory"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "16738:63:5"
                },
                {
                  "expression": {
                    "id": 2359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2355,
                        "name": "allTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2341,
                        "src": "16807:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                          "typeString": "struct Dex.AllTrades memory"
                        }
                      },
                      "id": 2357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16817:24:5",
                      "memberName": "tradeEthForTokensForCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "16807:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2358,
                      "name": "tradeEthForTokensResultArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2256,
                      "src": "16844:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                      }
                    },
                    "src": "16807:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall memory[] memory"
                    }
                  },
                  "id": 2360,
                  "nodeType": "ExpressionStatement",
                  "src": "16807:63:5"
                },
                {
                  "expression": {
                    "id": 2361,
                    "name": "allTrades",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2341,
                    "src": "16884:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                      "typeString": "struct Dex.AllTrades memory"
                    }
                  },
                  "functionReturnParameters": 1955,
                  "id": 2362,
                  "nodeType": "Return",
                  "src": "16877:16:5"
                }
              ]
            },
            "functionSelector": "ce99c0ce",
            "id": 2364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTrades",
            "nameLocation": "13162:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13174:2:5"
            },
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "13198:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllTrades_$991_memory_ptr",
                    "typeString": "struct Dex.AllTrades"
                  },
                  "typeName": {
                    "id": 1953,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1952,
                      "name": "AllTrades",
                      "nameLocations": [
                        "13198:9:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 991,
                      "src": "13198:9:5"
                    },
                    "referencedDeclaration": 991,
                    "src": "13198:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllTrades_$991_storage_ptr",
                      "typeString": "struct Dex.AllTrades"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13197:18:5"
            },
            "scope": 2391,
            "src": "13153:3745:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "16966:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 2370,
                    "name": "dexUsersArr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1019,
                    "src": "16979:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2369,
                  "id": 2371,
                  "nodeType": "Return",
                  "src": "16972:18:5"
                }
              ]
            },
            "functionSelector": "08973378",
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDexUsers",
            "nameLocation": "16913:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16924:2:5"
            },
            "returnParameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "16948:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2366,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16948:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2367,
                    "nodeType": "ArrayTypeName",
                    "src": "16948:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16947:18:5"
            },
            "scope": 2391,
            "src": "16904:91:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Dex.AllTradesOfAccount",
            "id": 2386,
            "members": [
              {
                "constant": false,
                "id": 2377,
                "mutability": "mutable",
                "name": "tradeTokensForTokensForCall",
                "nameLocation": "17061:27:5",
                "nodeType": "VariableDeclaration",
                "scope": 2386,
                "src": "17031:57:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2374,
                      "name": "TradeTokensForTokensForCall",
                      "nameLocations": [
                        "17031:27:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 952,
                      "src": "17031:27:5"
                    },
                    "referencedDeclaration": 952,
                    "src": "17031:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForTokensForCall_$952_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForTokensForCall"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ArrayTypeName",
                  "src": "17031:29:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForTokensForCall_$952_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2381,
                "mutability": "mutable",
                "name": "tradeTokensForEthForCall",
                "nameLocation": "17121:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2386,
                "src": "17094:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeTokensForEthForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2378,
                      "name": "TradeTokensForEthForCall",
                      "nameLocations": [
                        "17094:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 965,
                      "src": "17094:24:5"
                    },
                    "referencedDeclaration": 965,
                    "src": "17094:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokensForEthForCall_$965_storage_ptr",
                      "typeString": "struct Dex.TradeTokensForEthForCall"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ArrayTypeName",
                  "src": "17094:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeTokensForEthForCall_$965_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeTokensForEthForCall[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2385,
                "mutability": "mutable",
                "name": "tradeEthForTokensForCall",
                "nameLocation": "17178:24:5",
                "nodeType": "VariableDeclaration",
                "scope": 2386,
                "src": "17151:51:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                  "typeString": "struct Dex.TradeEthForTokensForCall[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2382,
                      "name": "TradeEthForTokensForCall",
                      "nameLocations": [
                        "17151:24:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 978,
                      "src": "17151:24:5"
                    },
                    "referencedDeclaration": 978,
                    "src": "17151:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeEthForTokensForCall_$978_storage_ptr",
                      "typeString": "struct Dex.TradeEthForTokensForCall"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ArrayTypeName",
                  "src": "17151:26:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeEthForTokensForCall_$978_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.TradeEthForTokensForCall[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllTradesOfAccount",
            "nameLocation": "17006:18:5",
            "nodeType": "StructDefinition",
            "scope": 2391,
            "src": "16999:208:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2389,
              "nodeType": "Block",
              "src": "17239:6:5",
              "statements": []
            },
            "id": 2390,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17219:2:5"
            },
            "returnParameters": {
              "id": 2388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17239:0:5"
            },
            "scope": 2391,
            "src": "17211:34:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2392,
        "src": "122:17125:5",
        "usedErrors": [],
        "usedEvents": [
          802,
          814,
          826,
          842,
          856,
          870,
          884,
          896,
          908
        ]
      }
    ],
    "src": "39:17209:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEde6b95D35C7585814E5b972DC47Ab9890D49875",
      "transactionHash": "0x287555cdf804785a0f3171de08193045b00fa5b2082c6794f01b67cbf3493f5d"
    },
    "1727565956386": {
      "events": {},
      "links": {},
      "address": "0x712Dc4b5f2A188D259b06615fC0C2D6bB94a9a9F",
      "transactionHash": "0x4f0e77440864c17eb9919da3315ba9b5de026a90a9d499f68a7c5045e6493bd5"
    },
    "1730754097427": {
      "events": {},
      "links": {},
      "address": "0x0cE4E85a8A361a30a147336a359260224576CB47",
      "transactionHash": "0x1ffd300e204f19c4b14c5bb1245323c0fd978f32b505372dc2508bf1ed5139b1"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-11-10T01:52:44.964Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}